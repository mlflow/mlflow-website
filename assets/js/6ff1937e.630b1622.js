"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[3331],{77067:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>o,default:()=>g,frontMatter:()=>r,metadata:()=>l,toc:()=>c});var i=n(85893),a=n(11151);const r={title:"MLflow Tracing in Jupyter Notebooks",description:"Introducing MLflow Tracing's Jupyter integration",slug:"mlflow-tracing-in-jupyter",authors:["daniel-lok"],tags:["genai","mlops","tracing"],thumbnail:"/img/blog/mlflow-tracing-in-jupyter.png"},o=void 0,l={permalink:"/blog/mlflow-tracing-in-jupyter",source:"@site/blog/2024-12-20-mlflow-tracing-in-jupyter/index.md",title:"MLflow Tracing in Jupyter Notebooks",description:"Introducing MLflow Tracing's Jupyter integration",date:"2024-12-20T00:00:00.000Z",formattedDate:"December 20, 2024",tags:[{label:"genai",permalink:"/blog/tags/genai"},{label:"mlops",permalink:"/blog/tags/mlops"},{label:"tracing",permalink:"/blog/tags/tracing"}],readingTime:2.385,hasTruncateMarker:!1,authors:[{name:"Daniel Lok",title:"Software Engineer at Databricks",url:"https://www.linkedin.com/in/daniel-yk-lok/",imageURL:"/img/authors/daniel_lok.png",key:"daniel-lok"}],frontMatter:{title:"MLflow Tracing in Jupyter Notebooks",description:"Introducing MLflow Tracing's Jupyter integration",slug:"mlflow-tracing-in-jupyter",authors:["daniel-lok"],tags:["genai","mlops","tracing"],thumbnail:"/img/blog/mlflow-tracing-in-jupyter.png"},unlisted:!1,prevItem:{title:"From Natural Language to SQL: Building and Tracking a Multi-Lingual Query Engine",permalink:"/blog/from-natural-language-to-sql"},nextItem:{title:"Using Bedrock Agent as an MLflow ChatModel with Tracing",permalink:"/blog/bedrock-chat-model-part-1"}},s={authorsImageUrls:[void 0]},c=[{value:"Getting Started",id:"getting-started",level:2},{value:"Disabling and Re-enabling the Display",id:"disabling-and-re-enabling-the-display",level:2},{value:"Bug Reports and Feedback",id:"bug-reports-and-feedback",level:2}];function d(e){const t={a:"a",code:"code",h2:"h2",img:"img",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",...(0,a.a)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(t.p,{children:(0,i.jsx)(t.img,{alt:"Thumbnail",src:n(78695).Z+"",width:"1185",height:"238"})}),"\n",(0,i.jsxs)(t.p,{children:["\ud83d\ude80 We're excited to announce a major upgrade to the ",(0,i.jsx)(t.a,{href:"https://mlflow.org/docs/latest/llms/tracing/index.html",children:"MLflow Tracing"}),"\nexperience!"]}),"\n",(0,i.jsxs)(t.p,{children:["If you're not familiar with MLflow Tracing, it's an observability tool that allows you record the inputs and\noutputs of intermediate function executions. It's particularly useful in debugging GenAI applications, and MLflow has over\na ",(0,i.jsx)(t.a,{href:"https://mlflow.org/docs/latest/llms/tracing/index.html#automatic-tracing",children:"dozen integrations with popular GenAI frameworks"}),"\nto automatically generate traces without requiring you to change your existing code."]}),"\n",(0,i.jsxs)(t.p,{children:["As of ",(0,i.jsx)(t.strong,{children:"MLflow 2.20"}),", you can now view the MLflow Trace UI directly within Jupyter notebooks, allowing\nyou to debug your applications without having to tab out of your development environment. Context\nswitching can often be disruptive to one's workflow, and this feature makes it easier to stay focused while\nstill being able to visualize the trace data that you generate."]}),"\n",(0,i.jsx)("figure",{children:(0,i.jsxs)(t.p,{children:[(0,i.jsx)(t.img,{alt:"MLflow Trace UI in Jupyter Notebook",src:n(34221).Z+"",width:"2440",height:"1586"}),"\n",(0,i.jsx)("figcaption",{style:{textAlign:"center"},children:"An example of the UI in JupyterLab"})]})}),"\n",(0,i.jsx)(t.h2,{id:"getting-started",children:"Getting Started"}),"\n",(0,i.jsxs)(t.p,{children:["To get started, you'll need to be using an ",(0,i.jsx)(t.a,{href:"https://mlflow.org/docs/latest/tracking/server.html",children:"MLflow Tracking Server"}),".\nUnder the hood, the MLflow client needs to make network requests in order to fetch the UI assets and trace data."]}),"\n",(0,i.jsxs)(t.p,{children:["If you don't use a remote server, you can always start one locally by running the ",(0,i.jsx)(t.code,{children:"mlflow server"}),"\n",(0,i.jsx)(t.a,{href:"https://mlflow.org/docs/latest/tracking/server.html#start-the-tracking-server",children:"CLI command"}),". By default,\nthe server will start up at ",(0,i.jsx)(t.code,{children:"http://localhost:5000"}),"."]}),"\n",(0,i.jsx)(t.p,{children:"In your notebook, simply ensure that the MLflow Tracking URI is set to your tracking server, and you're good to go!"}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-python",children:'import mlflow\n\n# replace this with your own URI, if it differs\ntracking_uri = "http://localhost:5000"\nmlflow.set_tracking_uri(tracking_uri)\n\n# create a new experiment to avoid cluttering the default experiment\nexperiment = mlflow.set_experiment("mlflow-trace-ui-demo")\n\n# the trace UI should now show up whenever traces are generated,\n# for example:\n@mlflow.trace\ndef add(a, b):\n  return a + b\n\n# running the traced function triggers the UI display\nadd(1, 2)\n'})}),"\n",(0,i.jsx)(t.p,{children:"The trace UI will show up whenever any of the following events happen:"}),"\n",(0,i.jsxs)(t.ol,{children:["\n",(0,i.jsx)(t.li,{children:"A trace is generated in the cell (via automatic tracing, or when running manually traced functions)"}),"\n",(0,i.jsxs)(t.li,{children:["When a trace object is explicitly displayed (e.g. via IPython's ",(0,i.jsx)(t.code,{children:"display()"})," function)"]}),"\n",(0,i.jsxs)(t.li,{children:["When the ",(0,i.jsx)(t.code,{children:"mlflow.search_traces()"})," API is called"]}),"\n"]}),"\n",(0,i.jsxs)(t.p,{children:["For a hands-on experience with this feature, please try running our\n",(0,i.jsx)(t.a,{href:"https://github.com/mlflow/mlflow/blob/master/docs/docs/tracing/tutorials/jupyter-trace-demo.ipynb",children:(0,i.jsx)(t.strong,{children:"demo notebook"})}),"!\nThe notebook contains detailed examples of all three scenarios above, as well as a short LangChain RAG demo to\nget a more realistic impression of how this feature will feel during your development loop."]}),"\n",(0,i.jsx)(t.h2,{id:"disabling-and-re-enabling-the-display",children:"Disabling and Re-enabling the Display"}),"\n",(0,i.jsxs)(t.p,{children:["This feature is enabled by default, but it can be turned off any time by calling ",(0,i.jsx)(t.code,{children:"mlflow.tracing.disable_notebook_display()"}),".\nTo remove the displays that have already rendered, you'll need to re-run the cells (or simply clear the cell output)."]}),"\n",(0,i.jsxs)(t.p,{children:["If you want to re-enable the display, you can call ",(0,i.jsx)(t.code,{children:"mlflow.tracing.enable_notebook_display()"}),"."]}),"\n",(0,i.jsx)(t.h2,{id:"bug-reports-and-feedback",children:"Bug Reports and Feedback"}),"\n",(0,i.jsxs)(t.p,{children:["To report bugs or provide feedback, please file an issue in the\n",(0,i.jsx)(t.a,{href:"https://github.com/mlflow/mlflow/issues",children:"MLflow GitHub repo"}),". We're looking forward to hearing from you!"]})]})}function g(e={}){const{wrapper:t}={...(0,a.a)(),...e.components};return t?(0,i.jsx)(t,{...e,children:(0,i.jsx)(d,{...e})}):d(e)}},34221:(e,t,n)=>{n.d(t,{Z:()=>i});const i=n.p+"assets/images/jupyter-trace-ui-a11c56c439864da666540e9d501329cb.png"},78695:(e,t,n)=>{n.d(t,{Z:()=>i});const i=n.p+"assets/images/mlflow-tracing-in-jupyter-title-9583055b007cdf23970047cfad4b9b8a.png"},11151:(e,t,n)=>{n.d(t,{Z:()=>l,a:()=>o});var i=n(67294);const a={},r=i.createContext(a);function o(e){const t=i.useContext(r);return i.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function l(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:o(e.components),i.createElement(r.Provider,{value:t},e.children)}}}]);