"use strict";(globalThis.webpackChunkdocs=globalThis.webpackChunkdocs||[]).push([[1441],{10493:(e,l,n)=>{n.d(l,{Zp:()=>s,AC:()=>o,WO:()=>d,_C:()=>c,$3:()=>m,jK:()=>p});var a=n(34164);const i={CardGroup:"CardGroup_P84T",NoGap:"NoGap_O9Dj",MaxThreeColumns:"MaxThreeColumns_FO1r",AutofillColumns:"AutofillColumns_fKhQ",Card:"Card_aSCR",CardBordered:"CardBordered_glGF",CardBody:"CardBody_BhRs",TextColor:"TextColor_a8Tp",BoxRoot:"BoxRoot_Etgr",FlexWrapNowrap:"FlexWrapNowrap_f60k",FlexJustifyContentFlexStart:"FlexJustifyContentFlexStart_ZYv5",FlexDirectionRow:"FlexDirectionRow_T2qL",FlexAlignItemsCenter:"FlexAlignItemsCenter_EHVM",FlexFlex:"FlexFlex__JTE",Link:"Link_fVkl",MarginLeft4:"MarginLeft4_YQSJ",MarginTop4:"MarginTop4_jXKN",PaddingBottom4:"PaddingBottom4_O9gt",LogoCardContent:"LogoCardContent_kCQm",LogoCardImage:"LogoCardImage_JdcX",SmallLogoCardContent:"SmallLogoCardContent_LxhV",SmallLogoCardRounded:"SmallLogoCardRounded_X50_",SmallLogoCardImage:"SmallLogoCardImage_tPZl",NewFeatureCardContent:"NewFeatureCardContent_Rq3d",NewFeatureCardHeading:"NewFeatureCardHeading_f6q3",NewFeatureCardHeadingSeparator:"NewFeatureCardHeadingSeparator_pSx8",NewFeatureCardTags:"NewFeatureCardTags_IFHO",NewFeatureCardWrapper:"NewFeatureCardWrapper_NQ0k",TitleCardContent:"TitleCardContent_l9MQ",TitleCardHeader:"TitleCardHeader_fUQy",TitleCardHeaderRight:"TitleCardHeaderRight_iBLX",TitleCardTitle:"TitleCardTitle__K8J",TitleCardSeparator:"TitleCardSeparator_IN2E",Cols1:"Cols1_Gr2U",Cols2:"Cols2_sRvc",Cols3:"Cols3_KjUS",Cols4:"Cols4_dKOj",Cols5:"Cols5_jDmj",Cols6:"Cols6_Q0OR"};var r=n(28774),t=n(74848);const o=({children:e,isSmall:l,cols:n,noGap:r})=>(0,t.jsx)("div",{className:(0,a.A)(i.CardGroup,l?i.AutofillColumns:n?i[`Cols${n}`]:i.MaxThreeColumns,r&&i.NoGap),children:e}),s=({children:e,link:l=""})=>l?(0,t.jsx)(r.A,{className:(0,a.A)(i.Link,i.Card,i.CardBordered),to:l,children:e}):(0,t.jsx)("div",{className:(0,a.A)(i.Card,i.CardBordered),children:e}),c=({headerText:e,link:l,text:n})=>(0,t.jsx)(s,{link:l,children:(0,t.jsxs)("span",{children:[(0,t.jsx)("div",{className:(0,a.A)(i.CardTitle,i.BoxRoot,i.PaddingBottom4),style:{pointerEvents:"none"},children:(0,t.jsx)("div",{className:(0,a.A)(i.BoxRoot,i.FlexFlex,i.FlexAlignItemsCenter,i.FlexDirectionRow,i.FlexJustifyContentFlexStart,i.FlexWrapNowrap),style:{marginLeft:"-4px",marginTop:"-4px"},children:(0,t.jsx)("div",{className:(0,a.A)(i.BoxRoot,i.BoxHideIfEmpty,i.MarginTop4,i.MarginLeft4),style:{pointerEvents:"auto"},children:(0,t.jsx)("span",{className:"",children:e})})})}),(0,t.jsx)("span",{className:(0,a.A)(i.TextColor,i.CardBody),children:(0,t.jsx)("p",{children:n})})]})}),d=({description:e,children:l,link:n})=>(0,t.jsx)(s,{link:n,children:(0,t.jsxs)("div",{className:i.LogoCardContent,children:[(0,t.jsx)("div",{className:i.LogoCardImage,children:l}),(0,t.jsx)("p",{className:i.TextColor,children:e})]})}),m=({children:e,link:l})=>(0,t.jsx)("div",{className:(0,a.A)(i.Card,i.CardBordered,i.SmallLogoCardRounded),children:l?(0,t.jsx)(r.A,{className:(0,a.A)(i.Link),to:l,children:(0,t.jsx)("div",{className:i.SmallLogoCardContent,children:(0,t.jsx)("div",{className:(0,a.A)("max-height-img-container",i.SmallLogoCardImage),children:e})})}):(0,t.jsx)("div",{className:i.SmallLogoCardContent,children:(0,t.jsx)("div",{className:(0,a.A)("max-height-img-container",i.SmallLogoCardImage),children:e})})}),p=({title:e,description:l,link:n="",headerRight:r,children:o})=>(0,t.jsx)(s,{link:n,children:(0,t.jsxs)("div",{className:i.TitleCardContent,children:[(0,t.jsxs)("div",{className:(0,a.A)(i.TitleCardHeader),children:[(0,t.jsx)("div",{className:(0,a.A)(i.TitleCardTitle),style:{textAlign:"left",fontWeight:"bold"},children:e}),(0,t.jsx)("div",{className:i.TitleCardHeaderRight,children:r})]}),(0,t.jsx)("hr",{className:(0,a.A)(i.TitleCardSeparator),style:{margin:"12px 0"}}),o?(0,t.jsx)("div",{className:(0,a.A)(i.TextColor),children:o}):(0,t.jsx)("p",{className:(0,a.A)(i.TextColor),dangerouslySetInnerHTML:{__html:l}})]})})},26802:(e,l,n)=>{n.r(l),n.d(l,{assets:()=>d,contentTitle:()=>c,default:()=>h,frontMatter:()=>s,metadata:()=>a,toc:()=>m});const a=JSON.parse('{"id":"tracing/integrations/listing/claude_code","title":"Tracing Claude Code","description":"Claude Code Tracing via CLI autolog","source":"@site/docs/genai/tracing/integrations/listing/claude_code.mdx","sourceDirName":"tracing/integrations/listing","slug":"/tracing/integrations/listing/claude_code","permalink":"/mlflow-website/docs/latest/genai/tracing/integrations/listing/claude_code","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":9,"frontMatter":{"sidebar_position":9,"sidebar_label":"Claude Code"},"sidebar":"genAISidebar","previous":{"title":"Strands Agents SDK","permalink":"/mlflow-website/docs/latest/genai/tracing/integrations/listing/strands"},"next":{"title":"Gemini","permalink":"/mlflow-website/docs/latest/genai/tracing/integrations/listing/gemini"}}');var i=n(74848),r=n(28453),t=(n(49374),n(10493),n(14252),n(11470)),o=n(19365);const s={sidebar_position:9,sidebar_label:"Claude Code"},c="Tracing Claude Code",d={},m=[{value:"Setup",id:"setup",level:2},{value:"CLI Tracing Setup",id:"cli-tracing-setup",level:3},{value:"Requirements",id:"requirements",level:4},{value:"Basic Setup",id:"basic-setup",level:4},{value:"Configuration Examples",id:"configuration-examples",level:4},{value:"How It Works",id:"how-it-works",level:4},{value:"Basic Example",id:"basic-example",level:4},{value:"SDK Tracing Setup",id:"sdk-tracing-setup",level:3},{value:"Requirements",id:"requirements-1",level:4},{value:"Basic Setup",id:"basic-setup-1",level:4},{value:"Complete Example",id:"complete-example",level:4},{value:"Claude Tracing with MLflow GenAI Evaluation",id:"claude-tracing-with-mlflow-genai-evaluation",level:4},{value:"Troubleshooting",id:"troubleshooting",level:2},{value:"Check CLI Status",id:"check-cli-status",level:3},{value:"Common CLI Issues",id:"common-cli-issues",level:3},{value:"Disable CLI Tracing",id:"disable-cli-tracing",level:3},{value:"Common SDK Issues",id:"common-sdk-issues",level:3},{value:"Disable SDK Tracing",id:"disable-sdk-tracing",level:3}];function p(e){const l={a:"a",admonition:"admonition",code:"code",h1:"h1",h2:"h2",h3:"h3",h4:"h4",header:"header",img:"img",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,r.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(l.header,{children:(0,i.jsx)(l.h1,{id:"tracing-claude-code",children:"Tracing Claude Code"})}),"\n",(0,i.jsx)(l.p,{children:(0,i.jsx)(l.img,{alt:"Claude Code Tracing via CLI autolog",src:n(84562).A+"",width:"2288",height:"1056"})}),"\n",(0,i.jsxs)(l.p,{children:[(0,i.jsx)(l.a,{href:"/genai/tracing",children:"MLflow Tracing"})," provides automatic tracing for Claude Code:"]}),"\n",(0,i.jsxs)(l.ol,{children:["\n",(0,i.jsxs)(l.li,{children:[(0,i.jsx)(l.strong,{children:"CLI tracing"}),": Automatically trace interactive Claude Code CLI conversations"]}),"\n",(0,i.jsxs)(l.li,{children:[(0,i.jsx)(l.strong,{children:"SDK tracing"}),": Trace Claude Agent SDK usage in Python applications"]}),"\n"]}),"\n",(0,i.jsx)(l.p,{children:"After setting up auto tracing, MLflow will automatically capture traces of your Claude Code conversations and log them to the active MLflow experiment. The trace automatically captures information such as:"}),"\n",(0,i.jsxs)(l.ul,{children:["\n",(0,i.jsx)(l.li,{children:"User prompts and assistant responses"}),"\n",(0,i.jsx)(l.li,{children:"Tool usage (file operations, code execution, web searches, etc.)"}),"\n",(0,i.jsx)(l.li,{children:"Conversation timing and duration"}),"\n",(0,i.jsx)(l.li,{children:"Tool execution results"}),"\n",(0,i.jsx)(l.li,{children:"Session metadata including working directory and user"}),"\n"]}),"\n",(0,i.jsx)(l.h2,{id:"setup",children:"Setup"}),"\n",(0,i.jsx)(l.p,{children:"Claude Code tracing can be configured using either CLI commands (for interactive use) or Python SDK imports (for programmatic use)."}),"\n",(0,i.jsxs)(t.A,{children:[(0,i.jsxs)(o.A,{value:"cli",label:"CLI Tracing",default:!0,children:[(0,i.jsx)(l.h3,{id:"cli-tracing-setup",children:"CLI Tracing Setup"}),(0,i.jsx)(l.p,{children:"Use CLI tracing to automatically capture your interactive Claude Code CLI conversations."}),(0,i.jsx)(l.h4,{id:"requirements",children:"Requirements"}),(0,i.jsxs)(l.ul,{children:["\n",(0,i.jsxs)(l.li,{children:["MLflow >= 3.4 (",(0,i.jsx)(l.code,{children:"pip install mlflow>=3.4"}),")"]}),"\n",(0,i.jsxs)(l.li,{children:[(0,i.jsx)(l.a,{href:"https://claude.com/product/claude-code",children:"Claude Code CLI"})," installed and configured"]}),"\n"]}),(0,i.jsx)(l.h4,{id:"basic-setup",children:"Basic Setup"}),(0,i.jsx)(l.pre,{children:(0,i.jsx)(l.code,{className:"language-bash",children:"# Set up tracing in current directory\nmlflow autolog claude\n\n# Set up tracing in specific directory\nmlflow autolog claude ~/my-project\n\n# Check tracing status\nmlflow autolog claude --status\n\n# Disable tracing\nmlflow autolog claude --disable\n"})}),(0,i.jsx)(l.h4,{id:"configuration-examples",children:"Configuration Examples"}),(0,i.jsx)(l.pre,{children:(0,i.jsx)(l.code,{className:"language-bash",children:'# Set up with custom tracking URI\nmlflow autolog claude -u file://./custom-mlruns\nmlflow autolog claude -u sqlite:///mlflow.db\n\n# Set up with Databricks backend and a specific experiment ID\nmlflow autolog claude -u databricks -e 123456789\n\n# Set up with specific experiment\nmlflow autolog claude -n "My AI Project"\n'})}),(0,i.jsx)(l.h4,{id:"how-it-works",children:"How It Works"}),(0,i.jsxs)(l.ol,{children:["\n",(0,i.jsxs)(l.li,{children:[(0,i.jsx)(l.strong,{children:"Setup Phase"}),": The ",(0,i.jsx)(l.code,{children:"mlflow autolog claude"})," command configures Claude Code hooks in a ",(0,i.jsx)(l.code,{children:".claude/settings.json"})," file in your project directory"]}),"\n",(0,i.jsxs)(l.li,{children:[(0,i.jsx)(l.strong,{children:"Automatic Tracing"}),": When you use the ",(0,i.jsx)(l.code,{children:"claude"})," command in the configured directory, your conversations are automatically traced"]}),"\n",(0,i.jsxs)(l.li,{children:[(0,i.jsx)(l.strong,{children:"View Results"}),": Use the MLflow UI to explore your traces"]}),"\n"]}),(0,i.jsx)(l.h4,{id:"basic-example",children:"Basic Example"}),(0,i.jsx)(l.pre,{children:(0,i.jsx)(l.code,{className:"language-bash",children:'# Set up tracing in your project\nmlflow autolog claude ~/my-project\n\n# Navigate to project directory\ncd ~/my-project\n\n# Use Claude Code normally - tracing happens automatically\nclaude "help me refactor this Python function to be more efficient"\n\n# View traces in MLflow UI\nmlflow ui\n'})})]}),(0,i.jsxs)(o.A,{value:"sdk",label:"SDK Tracing",children:[(0,i.jsx)(l.h3,{id:"sdk-tracing-setup",children:"SDK Tracing Setup"}),(0,i.jsx)(l.p,{children:"Use SDK tracing when building applications that programmatically use the Claude Agent SDK."}),(0,i.jsx)(l.h4,{id:"requirements-1",children:"Requirements"}),(0,i.jsxs)(l.ul,{children:["\n",(0,i.jsxs)(l.li,{children:["MLflow >= 3.5 (",(0,i.jsx)(l.code,{children:"pip install mlflow>=3.5"}),")"]}),"\n",(0,i.jsxs)(l.li,{children:[(0,i.jsx)(l.a,{href:"https://docs.claude.com/en/api/agent-sdk/overview",children:"Claude Agent SDK"})," >= 0.1.0 (",(0,i.jsx)(l.code,{children:"pip install claude-agent-sdk >= 0.1.0"}),")"]}),"\n"]}),(0,i.jsx)(l.h4,{id:"basic-setup-1",children:"Basic Setup"}),(0,i.jsx)(l.pre,{children:(0,i.jsx)(l.code,{className:"language-python",children:"import mlflow.anthropic\n\n# Enable automatic tracing for Claude Agent SDK\nmlflow.anthropic.autolog()\n"})}),(0,i.jsx)(l.p,{children:"Once enabled, all Claude Agent SDK interactions will be automatically traced."}),(0,i.jsx)(l.admonition,{type:"note",children:(0,i.jsxs)(l.p,{children:["Only ",(0,i.jsx)(l.code,{children:"ClaudeSDKClient"})," supports tracing. Directly calling ",(0,i.jsx)(l.code,{children:"query"})," will not be traced!"]})}),(0,i.jsx)(l.h4,{id:"complete-example",children:"Complete Example"}),(0,i.jsx)(l.pre,{children:(0,i.jsx)(l.code,{className:"language-python",children:'import asyncio\nimport mlflow.anthropic\nfrom claude_agent_sdk import ClaudeSDKClient\n\n# Enable autologging\nmlflow.anthropic.autolog()\n\n# Optionally configure MLflow experiment\nmlflow.set_experiment("my_claude_app")\n\n\nasync def main():\n    async with ClaudeSDKClient() as client:\n        await client.query("What is the capital of France?")\n\n        async for message in client.receive_response():\n            print(message)\n\n\nif __name__ == "__main__":\n    asyncio.run(main())\n'})}),(0,i.jsx)(l.h4,{id:"claude-tracing-with-mlflow-genai-evaluation",children:"Claude Tracing with MLflow GenAI Evaluation"}),(0,i.jsx)(l.p,{children:"You can also use SDK tracing with MLflow's GenAI evaluation framework:"}),(0,i.jsx)(l.pre,{children:(0,i.jsx)(l.code,{className:"language-python",children:'import asyncio\nimport pandas as pd\nfrom claude_agent_sdk import ClaudeSDKClient\n\nimport mlflow.anthropic\nfrom mlflow.genai import evaluate, scorer\nfrom mlflow.genai.judges import make_judge\n\nmlflow.anthropic.autolog()\n\n\nasync def run_agent(query: str) -> str:\n    """Run Claude Agent SDK and return response"""\n    async with ClaudeSDKClient() as client:\n        await client.query(query)\n\n        response_text = ""\n        async for message in client.receive_response():\n            response_text += str(message) + "\\n\\n"\n\n        return response_text\n\n\ndef predict_fn(query: str) -> str:\n    """Synchronous wrapper for evaluation"""\n    return asyncio.run(run_agent(query))\n\n\nrelevance = make_judge(\n    name="relevance",\n    instructions=(\n        "Evaluate if the response in {{ outputs }} is relevant to "\n        "the question in {{ inputs }}. Return either \'pass\' or \'fail\'."\n    ),\n    model="openai:/gpt-4o",\n)\n\n# Create evaluation dataset\neval_data = pd.DataFrame(\n    [\n        {"inputs": {"query": "What is machine learning?"}},\n        {"inputs": {"query": "Explain neural networks"}},\n    ]\n)\n\n# Run evaluation with automatic tracing\nmlflow.set_experiment("claude_evaluation")\nevaluate(data=eval_data, predict_fn=predict_fn, scorers=[relevance])\n'})})]})]}),"\n",(0,i.jsx)(l.h2,{id:"troubleshooting",children:"Troubleshooting"}),"\n",(0,i.jsxs)(t.A,{children:[(0,i.jsxs)(o.A,{value:"cli",label:"CLI Tracing",default:!0,children:[(0,i.jsx)(l.h3,{id:"check-cli-status",children:"Check CLI Status"}),(0,i.jsx)(l.pre,{children:(0,i.jsx)(l.code,{className:"language-bash",children:"mlflow autolog claude --status\n"})}),(0,i.jsx)(l.p,{children:"This shows:"}),(0,i.jsxs)(l.ul,{children:["\n",(0,i.jsx)(l.li,{children:"Whether tracing is enabled"}),"\n",(0,i.jsx)(l.li,{children:"Current tracking URI"}),"\n",(0,i.jsx)(l.li,{children:"Configured experiment"}),"\n",(0,i.jsx)(l.li,{children:"Any configuration issues"}),"\n"]}),(0,i.jsx)(l.h3,{id:"common-cli-issues",children:"Common CLI Issues"}),(0,i.jsx)(l.p,{children:(0,i.jsx)(l.strong,{children:"Tracing not working:"})}),(0,i.jsxs)(l.ul,{children:["\n",(0,i.jsx)(l.li,{children:"Ensure you're in the configured directory"}),"\n",(0,i.jsxs)(l.li,{children:["Check that ",(0,i.jsx)(l.code,{children:".claude/settings.json"})," exists"]}),"\n",(0,i.jsxs)(l.li,{children:["Review logs in ",(0,i.jsx)(l.code,{children:".claude/mlflow/claude_tracing.log"})]}),"\n"]}),(0,i.jsx)(l.p,{children:(0,i.jsx)(l.strong,{children:"Missing traces:"})}),(0,i.jsxs)(l.ul,{children:["\n",(0,i.jsxs)(l.li,{children:["Check if ",(0,i.jsx)(l.code,{children:"MLFLOW_CLAUDE_TRACING_ENABLED=true"})," in your configuration"]}),"\n",(0,i.jsx)(l.li,{children:"Verify the tracking URI is accessible"}),"\n",(0,i.jsxs)(l.li,{children:["Review logs in ",(0,i.jsx)(l.code,{children:".claude/mlflow/claude_tracing.log"})]}),"\n"]}),(0,i.jsx)(l.h3,{id:"disable-cli-tracing",children:"Disable CLI Tracing"}),(0,i.jsx)(l.p,{children:"To stop automatic CLI tracing:"}),(0,i.jsx)(l.pre,{children:(0,i.jsx)(l.code,{className:"language-bash",children:"mlflow autolog claude --disable\n"})}),(0,i.jsxs)(l.p,{children:["This removes the hooks from ",(0,i.jsx)(l.code,{children:".claude/settings.json"})," but preserves existing traces."]})]}),(0,i.jsxs)(o.A,{value:"sdk",label:"SDK Tracing",children:[(0,i.jsx)(l.h3,{id:"common-sdk-issues",children:"Common SDK Issues"}),(0,i.jsx)(l.p,{children:(0,i.jsx)(l.strong,{children:"No traces appearing:"})}),(0,i.jsxs)(l.ul,{children:["\n",(0,i.jsxs)(l.li,{children:["Tracing only works with ",(0,i.jsx)(l.code,{children:"ClaudeSDKClient"})," - direct usage of ",(0,i.jsx)(l.code,{children:"query()"})," is not supported"]}),"\n",(0,i.jsxs)(l.li,{children:["Verify ",(0,i.jsx)(l.code,{children:"mlflow.anthropic.autolog()"})," is called before creating the ",(0,i.jsx)(l.code,{children:"ClaudeSDKClient"})]}),"\n",(0,i.jsx)(l.li,{children:"Check that the tracking URI and experiment ID are configured correctly"}),"\n"]}),(0,i.jsx)(l.h3,{id:"disable-sdk-tracing",children:"Disable SDK Tracing"}),(0,i.jsx)(l.p,{children:"To disable SDK tracing:"}),(0,i.jsx)(l.pre,{children:(0,i.jsx)(l.code,{className:"language-python",children:"mlflow.anthropic.autolog(disable=True)\n"})})]})]})]})}function h(e={}){const{wrapper:l}={...(0,r.R)(),...e.components};return l?(0,i.jsx)(l,{...e,children:(0,i.jsx)(p,{...e})}):p(e)}},49374:(e,l,n)=>{n.d(l,{B:()=>o});n(96540);const a=JSON.parse('{"mlflow.ag2":"api_reference/python_api/mlflow.ag2.html","mlflow.agno":"api_reference/python_api/mlflow.agno.html","mlflow.anthropic":"api_reference/python_api/mlflow.anthropic.html","mlflow.artifacts":"api_reference/python_api/mlflow.artifacts.html","mlflow.autogen":"api_reference/python_api/mlflow.autogen.html","mlflow.bedrock":"api_reference/python_api/mlflow.bedrock.html","mlflow.catboost":"api_reference/python_api/mlflow.catboost.html","mlflow.client":"api_reference/python_api/mlflow.client.html","mlflow.config":"api_reference/python_api/mlflow.config.html","mlflow.crewai":"api_reference/python_api/mlflow.crewai.html","mlflow.data":"api_reference/python_api/mlflow.data.html","mlflow.deployments":"api_reference/python_api/mlflow.deployments.html","mlflow.diviner":"api_reference/python_api/mlflow.diviner.html","mlflow.dspy":"api_reference/python_api/mlflow.dspy.html","mlflow.entities":"api_reference/python_api/mlflow.entities.html","mlflow.environment_variables":"api_reference/python_api/mlflow.environment_variables.html","mlflow.gateway":"api_reference/python_api/mlflow.gateway.html","mlflow.gemini":"api_reference/python_api/mlflow.gemini.html","mlflow.genai":"api_reference/python_api/mlflow.genai.html","mlflow.groq":"api_reference/python_api/mlflow.groq.html","mlflow.h2o":"api_reference/python_api/mlflow.h2o.html","mlflow.johnsnowlabs":"api_reference/python_api/mlflow.johnsnowlabs.html","mlflow.keras":"api_reference/python_api/mlflow.keras.html","mlflow.langchain":"api_reference/python_api/mlflow.langchain.html","mlflow.lightgbm":"api_reference/python_api/mlflow.lightgbm.html","mlflow.litellm":"api_reference/python_api/mlflow.litellm.html","mlflow.llama_index":"api_reference/python_api/mlflow.llama_index.html","mlflow.metrics":"api_reference/python_api/mlflow.metrics.html","mlflow.mistral":"api_reference/python_api/mlflow.mistral.html","mlflow.models":"api_reference/python_api/mlflow.models.html","mlflow.onnx":"api_reference/python_api/mlflow.onnx.html","mlflow.openai":"api_reference/python_api/mlflow.openai.html","mlflow.paddle":"api_reference/python_api/mlflow.paddle.html","mlflow.pmdarima":"api_reference/python_api/mlflow.pmdarima.html","mlflow.projects":"api_reference/python_api/mlflow.projects.html","mlflow.promptflow":"api_reference/python_api/mlflow.promptflow.html","mlflow.prophet":"api_reference/python_api/mlflow.prophet.html","mlflow.pydantic_ai":"api_reference/python_api/mlflow.pydantic_ai.html","mlflow.pyfunc":"api_reference/python_api/mlflow.pyfunc.html","mlflow.pyspark.ml":"api_reference/python_api/mlflow.pyspark.ml.html","mlflow.pytorch":"api_reference/python_api/mlflow.pytorch.html","mlflow":"api_reference/python_api/mlflow.html","mlflow.sagemaker":"api_reference/python_api/mlflow.sagemaker.html","mlflow.sentence_transformers":"api_reference/python_api/mlflow.sentence_transformers.html","mlflow.server":"api_reference/python_api/mlflow.server.html","mlflow.shap":"api_reference/python_api/mlflow.shap.html","mlflow.sklearn":"api_reference/python_api/mlflow.sklearn.html","mlflow.smolagents":"api_reference/python_api/mlflow.smolagents.html","mlflow.spacy":"api_reference/python_api/mlflow.spacy.html","mlflow.spark":"api_reference/python_api/mlflow.spark.html","mlflow.statsmodels":"api_reference/python_api/mlflow.statsmodels.html","mlflow.system_metrics":"api_reference/python_api/mlflow.system_metrics.html","mlflow.tensorflow":"api_reference/python_api/mlflow.tensorflow.html","mlflow.tracing":"api_reference/python_api/mlflow.tracing.html","mlflow.transformers":"api_reference/python_api/mlflow.transformers.html","mlflow.types":"api_reference/python_api/mlflow.types.html","mlflow.utils":"api_reference/python_api/mlflow.utils.html","mlflow.webhooks":"api_reference/python_api/mlflow.webhooks.html","mlflow.xgboost":"api_reference/python_api/mlflow.xgboost.html","mlflow.server.auth":"api_reference/auth/python-api.html","mlflow.server.cli":"api_reference/cli.html","mlflow.r":"api_reference/R-api.html","mlflow.java":"api_reference/java_api/index.html","mlflow.python":"api_reference/python_api/index.html","mlflow.rest":"api_reference/rest-api.html","mlflow.typescript":"api_reference/typescript_api/index.html","mlflow.llms.deployments.api":"api_reference/llms/deployments/api.html"}');var i=n(86025),r=n(74848);const t=e=>{const l=e.split(".");for(let n=l.length;n>0;n--){const e=l.slice(0,n).join(".");if(a[e])return e}return null};function o({fn:e,children:l,hash:n}){const o=t(e);if(!o)return(0,r.jsx)(r.Fragment,{children:l});const s=(0,i.Ay)(`/${a[o]}#${n??e}`);return(0,r.jsx)("a",{href:s,target:"_blank",children:l??(0,r.jsxs)("code",{children:[e,"()"]})})}},84562:(e,l,n)=>{n.d(l,{A:()=>a});const a=n.p+"assets/images/claude-code-tracing-b1f69a5ecbf65655844589733ee28896.png"}}]);