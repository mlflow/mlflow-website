"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[6510],{28453:(e,n,t)=>{t.d(n,{R:()=>a,x:()=>s});var i=t(96540);const r={},o=i.createContext(r);function a(e){const n=i.useContext(o);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function s(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:a(e.components),i.createElement(o.Provider,{value:n},e.children)}},44711:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>l,contentTitle:()=>s,default:()=>d,frontMatter:()=>a,metadata:()=>i,toc:()=>c});const i=JSON.parse('{"id":"getting-started/tracing/tracing-notebook","title":"Tracing a GenAI App (Notebook)","description":"Learn how to build your first GenAI application using MLflow and OpenAI in your Jupyter Notebook.","source":"@site/docs/genai/getting-started/tracing/tracing-notebook.mdx","sourceDirName":"getting-started/tracing","slug":"/getting-started/tracing/tracing-notebook","permalink":"/docs/latest/genai/getting-started/tracing/tracing-notebook","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{"description":"Learn how to build your first GenAI application using MLflow and OpenAI in your Jupyter Notebook.","last_update":{"date":"2025-05-18T00:00:00.000Z"}},"sidebar":"genAISidebar","previous":{"title":"Tracing a GenAI App (IDE)","permalink":"/docs/latest/genai/getting-started/tracing/tracing-ide"},"next":{"title":"MLflow Tracing for LLM Observability","permalink":"/docs/latest/genai/tracing/"}}');var r=t(74848),o=t(28453);const a={description:"Learn how to build your first GenAI application using MLflow and OpenAI in your Jupyter Notebook.",last_update:{date:new Date("2025-05-18T00:00:00.000Z")}},s="Tracing a GenAI App (Notebook)",l={},c=[{value:"What you&#39;ll achieve",id:"what-youll-achieve",level:2},{value:"Prerequisites",id:"prerequisites",level:2},{value:"Step 1: Create a Jupyter Notebook",id:"step-1-create-a-jupyter-notebook",level:2},{value:"Step 2: Install and configure MLflow",id:"step-2-install-and-configure-mlflow",level:2},{value:"Step 3: Instrument your application",id:"step-3-instrument-your-application",level:2},{value:"OpenAI Integration",id:"openai-integration",level:3},{value:"Alternative: Other LLM Providers",id:"alternative-other-llm-providers",level:3},{value:"Step 4: View the Trace in MLflow",id:"step-4-view-the-trace-in-mlflow",level:2},{value:"Understanding the Trace",id:"understanding-the-trace",level:3},{value:"Next Steps",id:"next-steps",level:2}];function p(e){const n={a:"a",admonition:"admonition",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,o.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.header,{children:(0,r.jsx)(n.h1,{id:"tracing-a-genai-app-notebook",children:"Tracing a GenAI App (Notebook)"})}),"\n",(0,r.jsxs)(n.p,{children:["This quickstart helps you integrate your GenAI app with ",(0,r.jsx)(n.a,{href:"/genai/tracing",children:"MLflow Tracing"})," if you use a Jupyter Notebook as your development environment. If you use a local IDE, please use the ",(0,r.jsx)(n.a,{href:"/genai/getting-started/tracing/tracing-ide",children:"IDE quickstart"})," instead."]}),"\n",(0,r.jsx)(n.h2,{id:"what-youll-achieve",children:"What you'll achieve"}),"\n",(0,r.jsx)(n.p,{children:"By the end of this tutorial, you will have:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"A Jupyter Notebook with a linked MLflow Experiment for your GenAI app"}),"\n",(0,r.jsx)(n.li,{children:"Used MLflow Tracing to instrument your app."}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"prerequisites",children:"Prerequisites"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Python Environment"}),": Python 3.8+ with pip installed"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Jupyter Notebook"}),": Access to Jupyter Notebook or JupyterLab"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"OpenAI API Key"}),": Access to OpenAI API"]}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"step-1-create-a-jupyter-notebook",children:"Step 1: Create a Jupyter Notebook"}),"\n",(0,r.jsx)(n.admonition,{type:"note",children:(0,r.jsxs)(n.p,{children:["Creating a Jupyter Notebook and setting up an MLflow Experiment will be the container for your GenAI application. Learn more about the Experiment and what it contains in the ",(0,r.jsx)(n.a,{href:"/genai/data-model",children:"data model"})," section."]})}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsx)(n.li,{children:"Open Jupyter Notebook or JupyterLab"}),"\n",(0,r.jsx)(n.li,{children:"Create a new notebook"}),"\n",(0,r.jsx)(n.li,{children:"Create your first cell to set up the environment"}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"step-2-install-and-configure-mlflow",children:"Step 2: Install and configure MLflow"}),"\n",(0,r.jsx)(n.p,{children:"Install the latest version of MLflow for the best experience with GenAI capabilities, including the most comprehensive tracing features and robust support."}),"\n",(0,r.jsx)(n.p,{children:"You can install MLflow in your notebook by running:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:'!pip install --upgrade "mlflow>=3.1" openai python-dotenv\n'})}),"\n",(0,r.jsx)(n.admonition,{title:"MLflow Version Recommendation",type:"note",children:(0,r.jsxs)(n.p,{children:["While tracing features are available in MLflow 2.15.0+, ",(0,r.jsx)(n.strong,{children:"it is strongly recommended to install MLflow 3 (specifically 3.1 or newer)"})," for the latest GenAI capabilities, including expanded tracing features and robust support."]})}),"\n",(0,r.jsx)(n.h2,{id:"step-3-instrument-your-application",children:"Step 3: Instrument your application"}),"\n",(0,r.jsx)(n.p,{children:"Select the appropriate integration for your application:"}),"\n",(0,r.jsx)(n.h3,{id:"openai-integration",children:"OpenAI Integration"}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:"Create a cell in your notebook to configure your environment and MLflow:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-python",children:'import mlflow\nimport openai\nfrom openai import OpenAI\nimport os\nfrom dotenv import load_dotenv\n\n# Load environment variables\nload_dotenv()\n\n# Set up MLflow experiment\nmlflow.set_experiment("genai-tracing-quickstart")\n'})}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:"Create a cell in your notebook with the below code"}),"\n",(0,r.jsxs)(n.p,{children:["Here, we use the ",(0,r.jsxs)(n.a,{href:"/genai/tracing/app-instrumentation/manual-tracing",children:[(0,r.jsx)(n.code,{children:"@mlflow.trace"})," decorator"]})," that makes it easy to trace any Python application combined with the ",(0,r.jsx)(n.a,{href:"/genai/tracing/integrations/listing/openai",children:"OpenAI automatic instrumentation"})," to captures the details of the call to the OpenAI SDK."]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-python",children:'# Enable MLflow\'s autologging to instrument your application with Tracing\nmlflow.openai.autolog()\n\n# Create an OpenAI client\nclient = OpenAI(\n    api_key=os.getenv("OPENAI_API_KEY")  # Set your OpenAI API key in environment\n)\n\n\n# Use the trace decorator to capture the application\'s entry point\n@mlflow.trace\ndef my_app(input: str):\n    # This call is automatically instrumented by `mlflow.openai.autolog()`\n    response = client.chat.completions.create(\n        model="gpt-3.5-turbo",  # You can replace with gpt-4, gpt-4-turbo, etc.\n        messages=[\n            {\n                "role": "system",\n                "content": "You are a helpful assistant.",\n            },\n            {\n                "role": "user",\n                "content": input,\n            },\n        ],\n    )\n    return response.choices[0].message.content\n\n\nmy_app(input="What is MLflow?")\n'})}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:"Run the Notebook cell to execute the code"}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"alternative-other-llm-providers",children:"Alternative: Other LLM Providers"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-python",children:'# For other providers, you can use manual tracing\nimport mlflow\n\n\n@mlflow.trace\ndef my_custom_app(input: str):\n    # Your custom LLM integration here\n    # This could be Anthropic, Hugging Face, local models, etc.\n\n    with mlflow.start_span(name="llm_call") as span:\n        span.set_inputs({"input": input})\n\n        # Your LLM call here\n        response = "Your LLM response"\n\n        span.set_outputs({"response": response})\n        return response\n\n\nmy_custom_app(input="What is MLflow?")\n'})}),"\n",(0,r.jsx)(n.h2,{id:"step-4-view-the-trace-in-mlflow",children:"Step 4: View the Trace in MLflow"}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:"Start the MLflow UI by running in your terminal:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"mlflow ui\n"})}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:["Open your browser to ",(0,r.jsx)(n.code,{children:"http://localhost:5000"})]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:'Navigate to your experiment: "genai-tracing-quickstart"'}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:["You will now see the generated trace in the ",(0,r.jsx)(n.strong,{children:"Traces"})," tab"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:"Click on the trace to view its details"}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"understanding-the-trace",children:"Understanding the Trace"}),"\n",(0,r.jsx)(n.p,{children:"The trace you've just created shows:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Root Span"}),": Represents the inputs to the ",(0,r.jsx)(n.code,{children:"my_app(...)"})," function","\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Child Span"}),": Represents the OpenAI completion request"]}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Attributes"}),": Contains metadata like model name, token counts, and timing information"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Inputs"}),": The messages sent to the model"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Outputs"}),": The response received from the model"]}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:"This simple trace already provides valuable insights into your application's behavior, such as:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"What was asked"}),"\n",(0,r.jsx)(n.li,{children:"What response was generated"}),"\n",(0,r.jsx)(n.li,{children:"How long the request took"}),"\n",(0,r.jsx)(n.li,{children:"How many tokens were used (affecting cost)"}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"next-steps",children:"Next Steps"}),"\n",(0,r.jsx)(n.p,{children:"Congratulations! You've successfully built your first GenAI application with MLflow Tracing and OpenAI."}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Learn more about Tracing"}),": Learn about ",(0,r.jsx)(n.a,{href:"/genai/tracing",children:"tracing concepts"}),", ",(0,r.jsx)(n.a,{href:"/genai/tracing/app-instrumentation/manual-tracing",children:"manual tracing"})," for more control, ",(0,r.jsx)(n.a,{href:"/genai/tracing/track-users-sessions",children:"tracking users & sessions"}),", and ",(0,r.jsx)(n.a,{href:"/genai/tracing/track-environments-context",children:"tracking environments & context"})," to your traces."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Evaluate your application"}),": Use MLflow's ",(0,r.jsx)(n.a,{href:"/genai/eval-monitor",children:"evaluation capabilities"})," to measure the quality of your GenAI app."]}),"\n"]}),"\n",(0,r.jsx)(n.admonition,{type:"tip",children:(0,r.jsx)(n.p,{children:"For more complex applications like RAG systems or multi-step agents, MLflow Tracing provides even more value by revealing the inner workings of each component and step."})})]})}function d(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(p,{...e})}):p(e)}}}]);