"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[2550],{28453:(e,l,n)=>{n.d(l,{R:()=>a,x:()=>s});var o=n(96540);const r={},i=o.createContext(r);function a(e){const l=o.useContext(i);return o.useMemo(function(){return"function"==typeof e?e(l):{...l,...e}},[l,e])}function s(e){let l;return l=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:a(e.components),o.createElement(i.Provider,{value:l},e.children)}},49374:(e,l,n)=>{n.d(l,{B:()=>s});n(96540);const o=JSON.parse('{"mlflow.ag2":"api_reference/python_api/mlflow.ag2.html","mlflow.agno":"api_reference/python_api/mlflow.agno.html","mlflow.anthropic":"api_reference/python_api/mlflow.anthropic.html","mlflow.artifacts":"api_reference/python_api/mlflow.artifacts.html","mlflow.autogen":"api_reference/python_api/mlflow.autogen.html","mlflow.bedrock":"api_reference/python_api/mlflow.bedrock.html","mlflow.catboost":"api_reference/python_api/mlflow.catboost.html","mlflow.client":"api_reference/python_api/mlflow.client.html","mlflow.config":"api_reference/python_api/mlflow.config.html","mlflow.crewai":"api_reference/python_api/mlflow.crewai.html","mlflow.data":"api_reference/python_api/mlflow.data.html","mlflow.deployments":"api_reference/python_api/mlflow.deployments.html","mlflow.diviner":"api_reference/python_api/mlflow.diviner.html","mlflow.dspy":"api_reference/python_api/mlflow.dspy.html","mlflow.entities":"api_reference/python_api/mlflow.entities.html","mlflow.environment_variables":"api_reference/python_api/mlflow.environment_variables.html","mlflow.gateway":"api_reference/python_api/mlflow.gateway.html","mlflow.gemini":"api_reference/python_api/mlflow.gemini.html","mlflow.genai":"api_reference/python_api/mlflow.genai.html","mlflow.groq":"api_reference/python_api/mlflow.groq.html","mlflow.h2o":"api_reference/python_api/mlflow.h2o.html","mlflow.johnsnowlabs":"api_reference/python_api/mlflow.johnsnowlabs.html","mlflow.keras":"api_reference/python_api/mlflow.keras.html","mlflow.langchain":"api_reference/python_api/mlflow.langchain.html","mlflow.lightgbm":"api_reference/python_api/mlflow.lightgbm.html","mlflow.litellm":"api_reference/python_api/mlflow.litellm.html","mlflow.llama_index":"api_reference/python_api/mlflow.llama_index.html","mlflow.metrics":"api_reference/python_api/mlflow.metrics.html","mlflow.mistral":"api_reference/python_api/mlflow.mistral.html","mlflow.models":"api_reference/python_api/mlflow.models.html","mlflow.onnx":"api_reference/python_api/mlflow.onnx.html","mlflow.openai":"api_reference/python_api/mlflow.openai.html","mlflow.paddle":"api_reference/python_api/mlflow.paddle.html","mlflow.pmdarima":"api_reference/python_api/mlflow.pmdarima.html","mlflow.projects":"api_reference/python_api/mlflow.projects.html","mlflow.promptflow":"api_reference/python_api/mlflow.promptflow.html","mlflow.prophet":"api_reference/python_api/mlflow.prophet.html","mlflow.pydantic_ai":"api_reference/python_api/mlflow.pydantic_ai.html","mlflow.pyfunc":"api_reference/python_api/mlflow.pyfunc.html","mlflow.pyspark.ml":"api_reference/python_api/mlflow.pyspark.ml.html","mlflow.pytorch":"api_reference/python_api/mlflow.pytorch.html","mlflow":"api_reference/python_api/mlflow.html","mlflow.sagemaker":"api_reference/python_api/mlflow.sagemaker.html","mlflow.sentence_transformers":"api_reference/python_api/mlflow.sentence_transformers.html","mlflow.server":"api_reference/python_api/mlflow.server.html","mlflow.shap":"api_reference/python_api/mlflow.shap.html","mlflow.sklearn":"api_reference/python_api/mlflow.sklearn.html","mlflow.smolagents":"api_reference/python_api/mlflow.smolagents.html","mlflow.spacy":"api_reference/python_api/mlflow.spacy.html","mlflow.spark":"api_reference/python_api/mlflow.spark.html","mlflow.statsmodels":"api_reference/python_api/mlflow.statsmodels.html","mlflow.system_metrics":"api_reference/python_api/mlflow.system_metrics.html","mlflow.tensorflow":"api_reference/python_api/mlflow.tensorflow.html","mlflow.tracing":"api_reference/python_api/mlflow.tracing.html","mlflow.transformers":"api_reference/python_api/mlflow.transformers.html","mlflow.types":"api_reference/python_api/mlflow.types.html","mlflow.utils":"api_reference/python_api/mlflow.utils.html","mlflow.webhooks":"api_reference/python_api/mlflow.webhooks.html","mlflow.xgboost":"api_reference/python_api/mlflow.xgboost.html","mlflow.server.auth":"api_reference/auth/python-api.html","mlflow.server.cli":"api_reference/cli.html","mlflow.r":"api_reference/R-api.html","mlflow.java":"api_reference/java_api/index.html","mlflow.python":"api_reference/python_api/index.html","mlflow.rest":"api_reference/rest-api.html","mlflow.typescript":"api_reference/typescript_api/index.html","mlflow.llms.deployments.api":"api_reference/llms/deployments/api.html"}');var r=n(86025),i=n(74848);const a=e=>{const l=e.split(".");for(let n=l.length;n>0;n--){const e=l.slice(0,n).join(".");if(o[e])return e}return null};function s({fn:e,children:l,hash:n}){const s=a(e);if(!s)return(0,i.jsx)(i.Fragment,{children:l});const t=(0,r.Ay)(`/${o[s]}#${n??e}`);return(0,i.jsx)("a",{href:t,target:"_blank",children:l??(0,i.jsxs)("code",{children:[e,"()"]})})}},81450:(e,l,n)=>{n.r(l),n.d(l,{assets:()=>t,contentTitle:()=>s,default:()=>d,frontMatter:()=>a,metadata:()=>o,toc:()=>p});const o=JSON.parse('{"id":"eval-monitor/scorers/llm-judge/index","title":"LLM-based Scorers (LLM-as-a-Judge)","description":"LLM-as-a-Judge is an evaluation approach that uses Large Language Models to assess the quality of AI-generated responses. LLM judges can evaluate subjective qualities like helpfulness and safety, which are hard to measure with heuristic metrics. On the other hand, LLM-as-a-Judge scorers are more scalable and cost-effective than human evaluation. See the Evaluation Approach Comparison for a more detailed comparison and guides on how to use other approaches in MLflow.","source":"@site/docs/genai/eval-monitor/scorers/llm-judge/index.mdx","sourceDirName":"eval-monitor/scorers/llm-judge","slug":"/eval-monitor/scorers/llm-judge/","permalink":"/mlflow-website/docs/latest/genai/eval-monitor/scorers/llm-judge/","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{},"sidebar":"genAISidebar","previous":{"title":"What is a Scorer?","permalink":"/mlflow-website/docs/latest/genai/eval-monitor/scorers/"},"next":{"title":"Getting Started with make_judge","permalink":"/mlflow-website/docs/latest/genai/eval-monitor/scorers/llm-judge/make-judge"}}');var r=n(74848),i=n(28453);n(49374);const a={},s="LLM-based Scorers (LLM-as-a-Judge)",t={},p=[{value:"Two Paradigms of LLM-based Evaluation",id:"two-paradigms-of-llm-based-evaluation",level:2},{value:"1. Agent-as-a-Judge",id:"1-agent-as-a-judge",level:3},{value:"2. Custom Field-Based Judges",id:"2-custom-field-based-judges",level:3},{value:"Approaches for Creating LLM Scorers",id:"approaches-for-creating-llm-scorers",level:2},{value:"make_judge API (Recommended)",id:"make_judge-api-recommended",level:3},{value:"Guidelines-based scorers",id:"guidelines-based-scorers",level:3},{value:"Predefined LLM scorers",id:"predefined-llm-scorers",level:3},{value:"Bring Your Own Prompt",id:"bring-your-own-prompt",level:3},{value:"Selecting Judge Models",id:"selecting-judge-models",level:2},{value:"Supported Models",id:"supported-models",level:3}];function c(e){const l={a:"a",admonition:"admonition",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,i.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(l.header,{children:(0,r.jsx)(l.h1,{id:"llm-based-scorers-llm-as-a-judge",children:"LLM-based Scorers (LLM-as-a-Judge)"})}),"\n",(0,r.jsxs)(l.p,{children:["LLM-as-a-Judge is an evaluation approach that uses Large Language Models to assess the quality of AI-generated responses. LLM judges can evaluate subjective qualities like helpfulness and safety, which are hard to measure with heuristic metrics. On the other hand, LLM-as-a-Judge scorers are more scalable and cost-effective than human evaluation. See the ",(0,r.jsx)(l.a,{href:"/genai/eval-monitor/scorers#evaluation-approaches-comparison",children:"Evaluation Approach Comparison"})," for a more detailed comparison and guides on how to use other approaches in MLflow."]}),"\n",(0,r.jsx)(l.h2,{id:"two-paradigms-of-llm-based-evaluation",children:"Two Paradigms of LLM-based Evaluation"}),"\n",(0,r.jsx)(l.p,{children:"MLflow's LLM scorers operate in two fundamentally different modes:"}),"\n",(0,r.jsx)(l.h3,{id:"1-agent-as-a-judge",children:"1. Agent-as-a-Judge"}),"\n",(0,r.jsxs)(l.p,{children:["Act as ",(0,r.jsx)(l.strong,{children:"autonomous agents"})," that analyze complete execution traces. These judges:"]}),"\n",(0,r.jsxs)(l.ul,{children:["\n",(0,r.jsx)(l.li,{children:"Focus on HOW your application works internally"}),"\n",(0,r.jsx)(l.li,{children:"Use MCP tools to explore spans, timing, and data flow"}),"\n",(0,r.jsx)(l.li,{children:"Perfect for debugging, optimization, and behavior validation"}),"\n",(0,r.jsx)(l.li,{children:"Identify issues impossible to detect from outputs alone"}),"\n"]}),"\n",(0,r.jsx)(l.h3,{id:"2-custom-field-based-judges",children:"2. Custom Field-Based Judges"}),"\n",(0,r.jsxs)(l.p,{children:["Evaluate specific ",(0,r.jsx)(l.strong,{children:"inputs, outputs, and expectations"})," to assess the quality of final results. These judges:"]}),"\n",(0,r.jsxs)(l.ul,{children:["\n",(0,r.jsx)(l.li,{children:"Focus on WHAT your application produces"}),"\n",(0,r.jsx)(l.li,{children:"Perfect for correctness, relevance, and quality assessment"}),"\n",(0,r.jsx)(l.li,{children:"Use natural language instructions with template variables"}),"\n",(0,r.jsx)(l.li,{children:"Can be aligned with human feedback for improved accuracy"}),"\n"]}),"\n",(0,r.jsxs)(l.p,{children:["Both paradigms are created using the same ",(0,r.jsx)(l.code,{children:"make_judge"})," API - the difference lies in whether you use the ",(0,r.jsx)(l.code,{children:"{{ trace }}"})," template variable."]}),"\n",(0,r.jsx)(l.h2,{id:"approaches-for-creating-llm-scorers",children:"Approaches for Creating LLM Scorers"}),"\n",(0,r.jsx)(l.p,{children:"MLflow offers different approaches to use LLM-as-a-Judge, with different levels of simplicity and control. We recommend starting with a simpler approach and evolving to more complex ones as needed."}),"\n",(0,r.jsx)(l.h3,{id:"make_judge-api-recommended",children:"make_judge API (Recommended)"}),"\n",(0,r.jsx)(l.p,{children:"Simplicity: \u2b50\u2b50\u2b50\u2b50\nControl: \u2b50\u2b50\u2b50\u2b50\u2b50"}),"\n",(0,r.jsxs)(l.ul,{children:["\n",(0,r.jsxs)(l.li,{children:[(0,r.jsx)(l.strong,{children:"Best for"}),": Creating custom judges with natural language instructions, supporting both field-based and Agent-as-a-Judge evaluation. Includes built-in versioning and human feedback alignment."]}),"\n",(0,r.jsxs)(l.li,{children:[(0,r.jsx)(l.strong,{children:"How it works"}),": Define evaluation criteria using template variables (",(0,r.jsx)(l.code,{children:"inputs"}),", ",(0,r.jsx)(l.code,{children:"outputs"}),", ",(0,r.jsx)(l.code,{children:"trace"}),") in plain English. Judges can be aligned with human feedback for improved accuracy."]}),"\n",(0,r.jsxs)(l.li,{children:[(0,r.jsx)(l.strong,{children:"Requires"}),": MLflow >= 3.4.0"]}),"\n"]}),"\n",(0,r.jsx)(l.p,{children:(0,r.jsx)(l.a,{href:"/genai/eval-monitor/scorers/llm-judge/make-judge",children:"Get started with make_judge \xbb"})}),"\n",(0,r.jsx)(l.h3,{id:"guidelines-based-scorers",children:"Guidelines-based scorers"}),"\n",(0,r.jsx)(l.p,{children:"Simplicity: \u2b50\u2b50\u2b50\u2b50\nControl: \u2b50\u2b50\u2b50"}),"\n",(0,r.jsxs)(l.ul,{children:["\n",(0,r.jsxs)(l.li,{children:[(0,r.jsx)(l.strong,{children:"Best for"}),": Evaluations based on a clear set of specific, natural language criteria, framed as pass/fail conditions. Ideal for checking compliance with rules, style guides, or information inclusion/exclusion."]}),"\n",(0,r.jsxs)(l.li,{children:[(0,r.jsx)(l.strong,{children:"How it works"}),': You provide a set of plain-language rules that refer to specific inputs or outputs from your app, for example "The response must be polite". An LLM then determines if the guideline passes or fails and provides a rationale.']}),"\n"]}),"\n",(0,r.jsx)(l.p,{children:(0,r.jsx)(l.a,{href:"/genai/eval-monitor/scorers/llm-judge/guidelines",children:"Get started with guidelines \xbb"})}),"\n",(0,r.jsx)(l.h3,{id:"predefined-llm-scorers",children:"Predefined LLM scorers"}),"\n",(0,r.jsx)(l.p,{children:"Simplicity: \u2b50\u2b50\u2b50\u2b50\u2b50\nControl: \u2b50"}),"\n",(0,r.jsxs)(l.ul,{children:["\n",(0,r.jsxs)(l.li,{children:[(0,r.jsx)(l.strong,{children:"Best for"}),": Quickly trying MLflow's LLM evaluation capabilities with a few lines of code."]}),"\n",(0,r.jsxs)(l.li,{children:[(0,r.jsx)(l.strong,{children:"How it works"}),": Select from a list of built-in classes such as Correctness, RetrievalGroundedness, etc. MLflow constructs inputs for the judge using predefined prompt templates."]}),"\n"]}),"\n",(0,r.jsx)(l.p,{children:(0,r.jsx)(l.a,{href:"/genai/eval-monitor/scorers/llm-judge/predefined",children:"Get started with predefined LLM scorers \xbb"})}),"\n",(0,r.jsx)(l.h3,{id:"bring-your-own-prompt",children:"Bring Your Own Prompt"}),"\n",(0,r.jsx)(l.p,{children:"Simplicity: \u2b50\u2b50\nControl: \u2b50\u2b50\u2b50\u2b50\u2b50"}),"\n",(0,r.jsxs)(l.ul,{children:["\n",(0,r.jsxs)(l.li,{children:[(0,r.jsx)(l.strong,{children:"Best for"}),': Complex, nuanced evaluations where you need full control over the scorer\'s prompt or need the scorer to specify multiple output values, for example, "great", "ok", "bad".']}),"\n",(0,r.jsxs)(l.li,{children:[(0,r.jsx)(l.strong,{children:"How it works"}),": You provide a prompt template that defines your evaluation criteria and has placeholders for specific fields in your app's trace. You define the output choices the scorer can select. An LLM then selects the appropriate output choice and provides a rationale for its selection."]}),"\n"]}),"\n",(0,r.jsx)(l.p,{children:(0,r.jsx)(l.a,{href:"/genai/eval-monitor/scorers/llm-judge/prompt",children:"Get started with bringing your own prompt \xbb"})}),"\n",(0,r.jsx)(l.h2,{id:"selecting-judge-models",children:"Selecting Judge Models"}),"\n",(0,r.jsxs)(l.p,{children:["By default, MLflow will use ",(0,r.jsx)(l.strong,{children:"OpenAI's GPT-4o-mini"})," model as the judge model. You can change the judge model by passing an override to the ",(0,r.jsx)(l.code,{children:"model"})," argument within the scorer definition. The model must be specified in the format of ",(0,r.jsx)(l.code,{children:"<provider>:/<model-name>"}),"."]}),"\n",(0,r.jsx)(l.pre,{children:(0,r.jsx)(l.code,{className:"language-python",children:'from mlflow.genai.scorers import Correctness\n\nCorrectness(model="openai:/gpt-4o-mini")\nCorrectness(model="anthropic:/claude-4-opus")\nCorrectness(model="google:/gemini-2.0-flash")\n'})}),"\n",(0,r.jsx)(l.h3,{id:"supported-models",children:"Supported Models"}),"\n",(0,r.jsx)(l.p,{children:"MLflow supports all major LLM providers:"}),"\n",(0,r.jsxs)(l.ul,{children:["\n",(0,r.jsx)(l.li,{children:"OpenAI / Azure OpenAI"}),"\n",(0,r.jsx)(l.li,{children:"Anthropic"}),"\n",(0,r.jsx)(l.li,{children:"Amazon Bedrock"}),"\n",(0,r.jsx)(l.li,{children:"Cohere"}),"\n",(0,r.jsx)(l.li,{children:"Together AI"}),"\n",(0,r.jsxs)(l.li,{children:["Any other providers supported by ",(0,r.jsx)(l.a,{href:"https://docs.litellm.ai/docs/providers",children:"LiteLLM"}),", such as Google Gemini, xAI, Mistral, and more."]}),"\n"]}),"\n",(0,r.jsxs)(l.p,{children:["To use LiteLLM integrated models, install LiteLLM by running ",(0,r.jsx)(l.code,{children:"pip install litellm"})," and specify the provider and model name in the same format as natively supported providers, e.g., ",(0,r.jsx)(l.code,{children:"gemini:/gemini-2.0-flash"}),"."]}),"\n",(0,r.jsx)(l.admonition,{type:"info",children:(0,r.jsxs)(l.p,{children:["In Databricks, the default model is set to ",(0,r.jsx)("ins",{children:(0,r.jsx)(l.a,{href:"https://docs.databricks.com/aws/en/mlflow3/genai/eval-monitor/concepts/judges/",children:"Databricks's research-backed LLM judges"})}),"."]})})]})}function d(e={}){const{wrapper:l}={...(0,i.R)(),...e.components};return l?(0,r.jsx)(l,{...e,children:(0,r.jsx)(c,{...e})}):c(e)}}}]);