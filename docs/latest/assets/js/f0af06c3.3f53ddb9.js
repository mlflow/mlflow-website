"use strict";(globalThis.webpackChunkdocs=globalThis.webpackChunkdocs||[]).push([[9448],{10493:(e,t,n)=>{n.d(t,{Zp:()=>s,AC:()=>o,WO:()=>m,_C:()=>p,$3:()=>d,jK:()=>c});var a=n(34164);const l={CardGroup:"CardGroup_P84T",NoGap:"NoGap_O9Dj",MaxThreeColumns:"MaxThreeColumns_FO1r",AutofillColumns:"AutofillColumns_fKhQ",Card:"Card_aSCR",CardBordered:"CardBordered_glGF",CardBody:"CardBody_BhRs",TextColor:"TextColor_a8Tp",BoxRoot:"BoxRoot_Etgr",FlexWrapNowrap:"FlexWrapNowrap_f60k",FlexJustifyContentFlexStart:"FlexJustifyContentFlexStart_ZYv5",FlexDirectionRow:"FlexDirectionRow_T2qL",FlexAlignItemsCenter:"FlexAlignItemsCenter_EHVM",FlexFlex:"FlexFlex__JTE",Link:"Link_fVkl",MarginLeft4:"MarginLeft4_YQSJ",MarginTop4:"MarginTop4_jXKN",PaddingBottom4:"PaddingBottom4_O9gt",LogoCardContent:"LogoCardContent_kCQm",LogoCardImage:"LogoCardImage_JdcX",SmallLogoCardContent:"SmallLogoCardContent_LxhV",SmallLogoCardRounded:"SmallLogoCardRounded_X50_",SmallLogoCardImage:"SmallLogoCardImage_tPZl",NewFeatureCardContent:"NewFeatureCardContent_Rq3d",NewFeatureCardHeading:"NewFeatureCardHeading_f6q3",NewFeatureCardHeadingSeparator:"NewFeatureCardHeadingSeparator_pSx8",NewFeatureCardTags:"NewFeatureCardTags_IFHO",NewFeatureCardWrapper:"NewFeatureCardWrapper_NQ0k",TitleCardContent:"TitleCardContent_l9MQ",TitleCardHeader:"TitleCardHeader_fUQy",TitleCardHeaderRight:"TitleCardHeaderRight_iBLX",TitleCardTitle:"TitleCardTitle__K8J",TitleCardSeparator:"TitleCardSeparator_IN2E",Cols1:"Cols1_Gr2U",Cols2:"Cols2_sRvc",Cols3:"Cols3_KjUS",Cols4:"Cols4_dKOj",Cols5:"Cols5_jDmj",Cols6:"Cols6_Q0OR"};var i=n(28774),r=n(74848);const o=({children:e,isSmall:t,cols:n,noGap:i})=>(0,r.jsx)("div",{className:(0,a.A)(l.CardGroup,t?l.AutofillColumns:n?l[`Cols${n}`]:l.MaxThreeColumns,i&&l.NoGap),children:e}),s=({children:e,link:t=""})=>t?(0,r.jsx)(i.A,{className:(0,a.A)(l.Link,l.Card,l.CardBordered),to:t,children:e}):(0,r.jsx)("div",{className:(0,a.A)(l.Card,l.CardBordered),children:e}),p=({headerText:e,link:t,text:n})=>(0,r.jsx)(s,{link:t,children:(0,r.jsxs)("span",{children:[(0,r.jsx)("div",{className:(0,a.A)(l.CardTitle,l.BoxRoot,l.PaddingBottom4),style:{pointerEvents:"none"},children:(0,r.jsx)("div",{className:(0,a.A)(l.BoxRoot,l.FlexFlex,l.FlexAlignItemsCenter,l.FlexDirectionRow,l.FlexJustifyContentFlexStart,l.FlexWrapNowrap),style:{marginLeft:"-4px",marginTop:"-4px"},children:(0,r.jsx)("div",{className:(0,a.A)(l.BoxRoot,l.BoxHideIfEmpty,l.MarginTop4,l.MarginLeft4),style:{pointerEvents:"auto"},children:(0,r.jsx)("span",{className:"",children:e})})})}),(0,r.jsx)("span",{className:(0,a.A)(l.TextColor,l.CardBody),children:(0,r.jsx)("p",{children:n})})]})}),m=({description:e,children:t,link:n})=>(0,r.jsx)(s,{link:n,children:(0,r.jsxs)("div",{className:l.LogoCardContent,children:[(0,r.jsx)("div",{className:l.LogoCardImage,children:t}),(0,r.jsx)("p",{className:l.TextColor,children:e})]})}),d=({children:e,link:t})=>(0,r.jsx)("div",{className:(0,a.A)(l.Card,l.CardBordered,l.SmallLogoCardRounded),children:t?(0,r.jsx)(i.A,{className:(0,a.A)(l.Link),to:t,children:(0,r.jsx)("div",{className:l.SmallLogoCardContent,children:(0,r.jsx)("div",{className:(0,a.A)("max-height-img-container",l.SmallLogoCardImage),children:e})})}):(0,r.jsx)("div",{className:l.SmallLogoCardContent,children:(0,r.jsx)("div",{className:(0,a.A)("max-height-img-container",l.SmallLogoCardImage),children:e})})}),c=({title:e,description:t,link:n="",headerRight:i,children:o})=>(0,r.jsx)(s,{link:n,children:(0,r.jsxs)("div",{className:l.TitleCardContent,children:[(0,r.jsxs)("div",{className:(0,a.A)(l.TitleCardHeader),children:[(0,r.jsx)("div",{className:(0,a.A)(l.TitleCardTitle),style:{textAlign:"left",fontWeight:"bold"},children:e}),(0,r.jsx)("div",{className:l.TitleCardHeaderRight,children:i})]}),(0,r.jsx)("hr",{className:(0,a.A)(l.TitleCardSeparator),style:{margin:"12px 0"}}),o?(0,r.jsx)("div",{className:(0,a.A)(l.TextColor),children:o}):(0,r.jsx)("p",{className:(0,a.A)(l.TextColor),dangerouslySetInnerHTML:{__html:t}})]})})},31522:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>d,contentTitle:()=>m,default:()=>f,frontMatter:()=>p,metadata:()=>a,toc:()=>c});const a=JSON.parse('{"id":"prompt-registry/evaluate-prompts","title":"Evaluating Prompts","description":"Combining MLflow Prompt Registry with MLflow LLM Evaluation enables you to evaluate prompt performance across different models and datasets, and track the evaluation results in a centralized registry. You can also inspect model outputs from the traces logged during evaluation to understand how the model responds to different prompts.","source":"@site/docs/genai/prompt-registry/evaluate-prompts.mdx","sourceDirName":"prompt-registry","slug":"/prompt-registry/evaluate-prompts","permalink":"/mlflow-website/docs/latest/genai/prompt-registry/evaluate-prompts","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{},"sidebar":"genAISidebar","previous":{"title":"Create and Edit Prompts","permalink":"/mlflow-website/docs/latest/genai/prompt-registry/create-and-edit-prompts"},"next":{"title":"Manage Prompt Lifecycles","permalink":"/mlflow-website/docs/latest/genai/prompt-registry/manage-prompt-lifecycles-with-aliases"}}');var l=n(74848),i=n(28453),r=n(49374),o=(n(10493),n(14252),n(11470)),s=n(19365);const p={},m="Evaluating Prompts",d={},c=[{value:"Quickstart",id:"quickstart",level:2},{value:"1. Install Required Libraries",id:"1-install-required-libraries",level:3},{value:"1. Create a Prompt",id:"1-create-a-prompt",level:3},{value:"2. Prepare Evaluation Data",id:"2-prepare-evaluation-data",level:3},{value:"3. Define Prediction Function",id:"3-define-prediction-function",level:3},{value:"4. Run Evaluation",id:"4-run-evaluation",level:3},{value:"5. View Results",id:"5-view-results",level:3}];function h(e){const t={a:"a",admonition:"admonition",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",img:"img",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,i.R)(),...e.components};return(0,l.jsxs)(l.Fragment,{children:[(0,l.jsx)(t.header,{children:(0,l.jsx)(t.h1,{id:"evaluating-prompts",children:"Evaluating Prompts"})}),"\n",(0,l.jsxs)(t.p,{children:["Combining ",(0,l.jsx)(t.a,{href:"/genai/prompt-registry",children:"MLflow Prompt Registry"})," with ",(0,l.jsx)(t.a,{href:"/genai/eval-monitor",children:"MLflow LLM Evaluation"})," enables you to evaluate prompt performance across different models and datasets, and track the evaluation results in a centralized registry. You can also inspect model outputs from the ",(0,l.jsx)(t.strong,{children:"traces"})," logged during evaluation to understand how the model responds to different prompts."]}),"\n",(0,l.jsx)(t.admonition,{title:"Key Benefits of MLflow Prompt Evaluation",type:"tip",children:(0,l.jsxs)(t.ul,{children:["\n",(0,l.jsxs)(t.li,{children:[(0,l.jsx)(t.strong,{children:"Effective Evaluation"}),": `MLflow's LLM Evaluation API provides a simple and consistent way to evaluate prompts across different models and datasets without writing boilerplate code."]}),"\n",(0,l.jsxs)(t.li,{children:[(0,l.jsx)(t.strong,{children:"Compare Results"}),": Compare evaluation results with ease in the MLflow UI."]}),"\n",(0,l.jsxs)(t.li,{children:[(0,l.jsx)(t.strong,{children:"Tracking Results"}),": Track evaluation results in MLflow Experiment to maintain the history of prompt performance and different evaluation settings."]}),"\n",(0,l.jsxs)(t.li,{children:[(0,l.jsx)(t.strong,{children:"Tracing"}),": Inspect model behavior during inference deeply with traces generated during evaluation."]}),"\n"]})}),"\n",(0,l.jsx)(t.h2,{id:"quickstart",children:"Quickstart"}),"\n",(0,l.jsx)(t.h3,{id:"1-install-required-libraries",children:"1. Install Required Libraries"}),"\n",(0,l.jsx)(t.p,{children:"First install MLflow and OpenAI SDK. If you use different LLM providers, install the corresponding SDK instead."}),"\n",(0,l.jsx)(t.pre,{children:(0,l.jsx)(t.code,{className:"language-bash",children:"pip install mlflow>=2.21.0 openai -qU\n"})}),"\n",(0,l.jsx)(t.p,{children:"Also set OpenAI API key (or any other LLM providers e.g. Anthropic)."}),"\n",(0,l.jsx)(t.pre,{children:(0,l.jsx)(t.code,{className:"language-python",children:'import os\nfrom getpass import getpass\n\nos.environ["OPENAI_API_KEY"] = getpass("Enter your OpenAI API key: ")\n'})}),"\n",(0,l.jsx)(t.h3,{id:"1-create-a-prompt",children:"1. Create a Prompt"}),"\n",(0,l.jsxs)(o.A,{children:[(0,l.jsx)(s.A,{value:"ui",label:"UI",default:!0,children:(0,l.jsxs)("div",{class:"flex-column",children:[(0,l.jsx)("div",{style:{width:"70%",margin:"20px"},children:(0,l.jsx)(t.p,{children:(0,l.jsx)(t.img,{alt:"Create Prompt UI",src:n(76599).A+"",width:"1239",height:"660"})})}),(0,l.jsxs)(t.ol,{children:["\n",(0,l.jsxs)(t.li,{children:["Run ",(0,l.jsx)(t.code,{children:"mlflow ui"})," in your terminal to start the MLflow UI."]}),"\n",(0,l.jsxs)(t.li,{children:["Navigate to the ",(0,l.jsx)(t.strong,{children:"Prompts"})," tab in the MLflow UI."]}),"\n",(0,l.jsxs)(t.li,{children:["Click on the ",(0,l.jsx)(t.strong,{children:"Create Prompt"})," button."]}),"\n",(0,l.jsx)(t.li,{children:"Fill in the prompt details such as name, prompt template text, and commit message (optional)."}),"\n",(0,l.jsxs)(t.li,{children:["Click ",(0,l.jsx)(t.strong,{children:"Create"})," to register the prompt."]}),"\n"]})]})}),(0,l.jsx)(s.A,{value:"python",label:"Python",default:!0,children:(0,l.jsxs)("div",{class:"flex-column",children:[(0,l.jsxs)(t.p,{children:["To create a new prompt using the Python API, use ",(0,l.jsx)(r.B,{fn:"mlflow.register_prompt"})," API:"]}),(0,l.jsx)(t.pre,{children:(0,l.jsx)(t.code,{className:"language-python",children:'import mlflow\n\n# Use double curly braces for variables in the template\ninitial_template = """\\\nSummarize content you are provided with in {{ num_sentences }} sentences.\n\nSentences: {{ sentences }}\n"""\n\n# Register a new prompt\nprompt = mlflow.genai.register_prompt(\n    name="summarization-prompt",\n    template=initial_template,\n    # Optional: Provide a commit message to describe the changes\n    commit_message="Initial commit",\n)\n\n# The prompt object contains information about the registered prompt\nprint(f"Created prompt \'{prompt.name}\' (version {prompt.version})")\n'})})]})})]}),"\n",(0,l.jsx)(t.h3,{id:"2-prepare-evaluation-data",children:"2. Prepare Evaluation Data"}),"\n",(0,l.jsx)(t.p,{children:"Below, we create a small summarization dataset for demonstration purposes."}),"\n",(0,l.jsx)(t.pre,{children:(0,l.jsx)(t.code,{className:"language-python",children:'import pandas as pd\n\neval_data = [\n    {\n        "inputs": {\n            "sentences": "Artificial intelligence has transformed how businesses operate in the 21st century. Companies are leveraging AI for everything from customer service to supply chain optimization. The technology enables automation of routine tasks, freeing human workers for more creative endeavors. However, concerns about job displacement and ethical implications remain significant. Many experts argue that AI will ultimately create more jobs than it eliminates, though the transition may be challenging.",\n        },\n        "expectations": {\n            "summary": "AI has revolutionized business operations through automation and optimization, though ethical concerns about job displacement persist alongside predictions that AI will ultimately create more employment opportunities than it eliminates.",\n        },\n    },\n    {\n        "inputs": {\n            "sentences": "Climate change continues to affect ecosystems worldwide at an alarming rate. Rising global temperatures have led to more frequent extreme weather events including hurricanes, floods, and wildfires. Polar ice caps are melting faster than predicted, contributing to sea level rise that threatens coastal communities. Scientists warn that without immediate and dramatic reductions in greenhouse gas emissions, many of these changes may become irreversible. International cooperation remains essential but politically challenging.",\n        },\n        "expectations": {\n            "summary": "Climate change is causing accelerating environmental damage through extreme weather events and melting ice caps, with scientists warning that without immediate reduction in greenhouse gas emissions, many changes may become irreversible.",\n        },\n    },\n    {\n        "inputs": {\n            "sentences": "The human genome project was completed in 2003 after 13 years of international collaborative research. It successfully mapped all of the genes of the human genome, approximately 20,000-25,000 genes in total. The project cost nearly $3 billion but has enabled countless medical advances and spawned new fields like pharmacogenomics. The knowledge gained has dramatically improved our understanding of genetic diseases and opened pathways to personalized medicine. Today, a complete human genome can be sequenced in under a day for about $1,000.",\n        },\n        "expectations": {\n            "summary": "The Human Genome Project, completed in 2003, mapped approximately 20,000-25,000 human genes at a cost of $3 billion, enabling medical advances, improving understanding of genetic diseases, and establishing the foundation for personalized medicine.",\n        },\n    },\n    {\n        "inputs": {\n            "sentences": "Remote work adoption accelerated dramatically during the COVID-19 pandemic. Organizations that had previously resisted flexible work arrangements were forced to implement digital collaboration tools and virtual workflows. Many companies reported surprising productivity gains, though concerns about company culture and collaboration persisted. After the pandemic, a hybrid model emerged as the preferred approach for many businesses, combining in-office and remote work. This shift has profound implications for urban planning, commercial real estate, and work-life balance.",\n        },\n        "expectations": {\n            "summary": "The COVID-19 pandemic forced widespread adoption of remote work, revealing unexpected productivity benefits despite collaboration challenges, and resulting in a hybrid work model that impacts urban planning, real estate, and work-life balance.",\n        },\n    },\n]\n'})}),"\n",(0,l.jsx)(t.h3,{id:"3-define-prediction-function",children:"3. Define Prediction Function"}),"\n",(0,l.jsx)(t.p,{children:"Define a function that takes a DataFrame of inputs and returns a list of predictions."}),"\n",(0,l.jsxs)(t.p,{children:["MLflow will pass the input columns (",(0,l.jsx)(t.code,{children:"inputs"})," only in this example) to the function. The output string will be compared with the ",(0,l.jsx)(t.code,{children:"targets"})," column to evaluate the model."]}),"\n",(0,l.jsx)(t.pre,{children:(0,l.jsx)(t.code,{className:"language-python",children:'import mlflow\nimport openai\n\n\ndef predict_fn(sentences: str) -> str:\n    # Load the latest version of the registered prompt\n    prompt = mlflow.genai.load_prompt("prompts:/summarization-prompt@latest")\n    completion = openai.OpenAI().chat.completions.create(\n        model="gpt-4o-mini",\n        messages=[\n            {\n                "role": "user",\n                "content": prompt.format(sentences=sentences, num_sentences=1),\n            }\n        ],\n    )\n    return completion.choices[0].message.content\n'})}),"\n",(0,l.jsx)(t.h3,{id:"4-run-evaluation",children:"4. Run Evaluation"}),"\n",(0,l.jsxs)(t.p,{children:["Run the ",(0,l.jsx)(r.B,{fn:"mlflow.genai.evaluate"})," API to evaluate the model with the prepared data and prompt. In this example, we will use the following two built-in metrics."]}),"\n",(0,l.jsx)(t.pre,{children:(0,l.jsx)(t.code,{className:"language-python",children:'from mlflow.genai.judges import make_judge\n\nanswer_similarity = make_judge(\n    name="answer_similarity",\n    instructions=(\n        "Evaluated on the degree of semantic similarity of the provided output to the expected answer.\\n\\n"\n        "Output: {{ outputs }}\\n\\n"\n        "Expected: {{ expectations }}"\n        "Return \'yes\' if the output is similar to the expected answer, otherwise return \'no\'."\n    ),\n    model="openai:/gpt-5-mini",\n)\n\nresults = mlflow.genai.evaluate(\n    data=eval_data,\n    predict_fn=predict_fn,\n    scorers=[answer_similarity],\n)\n'})}),"\n",(0,l.jsx)(t.h3,{id:"5-view-results",children:"5. View Results"}),"\n",(0,l.jsxs)(t.p,{children:["You can view the evaluation results in the MLflow UI. Navigate to the ",(0,l.jsx)(t.strong,{children:"Experiments"})," tab, select the ",(0,l.jsx)(t.strong,{children:"Evaluations"})," tab, and click on the evaluation run to view the evaluation result."]}),"\n",(0,l.jsx)(t.p,{children:(0,l.jsx)(t.img,{alt:"Evaluation Results",src:n(56084).A+"",width:"2710",height:"1160"})})]})}function f(e={}){const{wrapper:t}={...(0,i.R)(),...e.components};return t?(0,l.jsx)(t,{...e,children:(0,l.jsx)(h,{...e})}):h(e)}},49374:(e,t,n)=>{n.d(t,{B:()=>o});n(96540);const a=JSON.parse('{"mlflow.ag2":"api_reference/python_api/mlflow.ag2.html","mlflow.agno":"api_reference/python_api/mlflow.agno.html","mlflow.anthropic":"api_reference/python_api/mlflow.anthropic.html","mlflow.artifacts":"api_reference/python_api/mlflow.artifacts.html","mlflow.autogen":"api_reference/python_api/mlflow.autogen.html","mlflow.bedrock":"api_reference/python_api/mlflow.bedrock.html","mlflow.catboost":"api_reference/python_api/mlflow.catboost.html","mlflow.client":"api_reference/python_api/mlflow.client.html","mlflow.config":"api_reference/python_api/mlflow.config.html","mlflow.crewai":"api_reference/python_api/mlflow.crewai.html","mlflow.data":"api_reference/python_api/mlflow.data.html","mlflow.deployments":"api_reference/python_api/mlflow.deployments.html","mlflow.diviner":"api_reference/python_api/mlflow.diviner.html","mlflow.dspy":"api_reference/python_api/mlflow.dspy.html","mlflow.entities":"api_reference/python_api/mlflow.entities.html","mlflow.environment_variables":"api_reference/python_api/mlflow.environment_variables.html","mlflow.gateway":"api_reference/python_api/mlflow.gateway.html","mlflow.gemini":"api_reference/python_api/mlflow.gemini.html","mlflow.genai":"api_reference/python_api/mlflow.genai.html","mlflow.groq":"api_reference/python_api/mlflow.groq.html","mlflow.h2o":"api_reference/python_api/mlflow.h2o.html","mlflow.johnsnowlabs":"api_reference/python_api/mlflow.johnsnowlabs.html","mlflow.keras":"api_reference/python_api/mlflow.keras.html","mlflow.langchain":"api_reference/python_api/mlflow.langchain.html","mlflow.lightgbm":"api_reference/python_api/mlflow.lightgbm.html","mlflow.litellm":"api_reference/python_api/mlflow.litellm.html","mlflow.llama_index":"api_reference/python_api/mlflow.llama_index.html","mlflow.metrics":"api_reference/python_api/mlflow.metrics.html","mlflow.mistral":"api_reference/python_api/mlflow.mistral.html","mlflow.models":"api_reference/python_api/mlflow.models.html","mlflow.onnx":"api_reference/python_api/mlflow.onnx.html","mlflow.openai":"api_reference/python_api/mlflow.openai.html","mlflow.paddle":"api_reference/python_api/mlflow.paddle.html","mlflow.pmdarima":"api_reference/python_api/mlflow.pmdarima.html","mlflow.projects":"api_reference/python_api/mlflow.projects.html","mlflow.promptflow":"api_reference/python_api/mlflow.promptflow.html","mlflow.prophet":"api_reference/python_api/mlflow.prophet.html","mlflow.pydantic_ai":"api_reference/python_api/mlflow.pydantic_ai.html","mlflow.pyfunc":"api_reference/python_api/mlflow.pyfunc.html","mlflow.pyspark.ml":"api_reference/python_api/mlflow.pyspark.ml.html","mlflow.pytorch":"api_reference/python_api/mlflow.pytorch.html","mlflow":"api_reference/python_api/mlflow.html","mlflow.sagemaker":"api_reference/python_api/mlflow.sagemaker.html","mlflow.sentence_transformers":"api_reference/python_api/mlflow.sentence_transformers.html","mlflow.server":"api_reference/python_api/mlflow.server.html","mlflow.shap":"api_reference/python_api/mlflow.shap.html","mlflow.sklearn":"api_reference/python_api/mlflow.sklearn.html","mlflow.smolagents":"api_reference/python_api/mlflow.smolagents.html","mlflow.spacy":"api_reference/python_api/mlflow.spacy.html","mlflow.spark":"api_reference/python_api/mlflow.spark.html","mlflow.statsmodels":"api_reference/python_api/mlflow.statsmodels.html","mlflow.system_metrics":"api_reference/python_api/mlflow.system_metrics.html","mlflow.tensorflow":"api_reference/python_api/mlflow.tensorflow.html","mlflow.tracing":"api_reference/python_api/mlflow.tracing.html","mlflow.transformers":"api_reference/python_api/mlflow.transformers.html","mlflow.types":"api_reference/python_api/mlflow.types.html","mlflow.utils":"api_reference/python_api/mlflow.utils.html","mlflow.webhooks":"api_reference/python_api/mlflow.webhooks.html","mlflow.xgboost":"api_reference/python_api/mlflow.xgboost.html","mlflow.server.auth":"api_reference/auth/python-api.html","mlflow.server.cli":"api_reference/cli.html","mlflow.r":"api_reference/R-api.html","mlflow.java":"api_reference/java_api/index.html","mlflow.python":"api_reference/python_api/index.html","mlflow.rest":"api_reference/rest-api.html","mlflow.typescript":"api_reference/typescript_api/index.html","mlflow.llms.deployments.api":"api_reference/llms/deployments/api.html"}');var l=n(86025),i=n(74848);const r=e=>{const t=e.split(".");for(let n=t.length;n>0;n--){const e=t.slice(0,n).join(".");if(a[e])return e}return null};function o({fn:e,children:t,hash:n}){const o=r(e);if(!o)return(0,i.jsx)(i.Fragment,{children:t});const s=(0,l.Ay)(`/${a[o]}#${n??e}`);return(0,i.jsx)("a",{href:s,target:"_blank",children:t??(0,i.jsxs)("code",{children:[e,"()"]})})}},56084:(e,t,n)=>{n.d(t,{A:()=>a});const a=n.p+"assets/images/prompt-evaluation-result-2a8eb8bdd0d27413488af07919dd844b.png"},76599:(e,t,n)=>{n.d(t,{A:()=>a});const a=n.p+"assets/images/create-prompt-ui-03c88144e65d28eb7847b2ae5d8dd49a.png"}}]);