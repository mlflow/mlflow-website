"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[7927],{28453:(e,n,o)=>{o.d(n,{R:()=>r,x:()=>i});var l=o(96540);const s={},t=l.createContext(s);function r(e){const n=l.useContext(t);return l.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function i(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:r(e.components),l.createElement(t.Provider,{value:n},e.children)}},56822:(e,n,o)=>{o.r(n),o.d(n,{assets:()=>d,contentTitle:()=>a,default:()=>p,frontMatter:()=>i,metadata:()=>l,toc:()=>c});const l=JSON.parse('{"id":"quickstart_drilldown/index","title":"Quickstart options and troubleshooting","description":"{/ Eventually, these H2s will probably all be separate articles. For now, I\'m","source":"@site/docs/quickstart_drilldown/index.mdx","sourceDirName":"quickstart_drilldown","slug":"/quickstart_drilldown/","permalink":"/docs/latest/quickstart_drilldown/","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{"sidebar_custom_props":{"hide":true},"displayed_sidebar":"docsSidebar"},"sidebar":"docsSidebar"}');var s=o(74848),t=o(28453),r=o(56289);const i={sidebar_custom_props:{hide:!0},displayed_sidebar:"docsSidebar"},a="Quickstart options and troubleshooting",d={},c=[{value:"Customize and troubleshoot MLflow installation",id:"quickstart_drilldown_install",level:2},{value:"Python library options",id:"python-library-options",level:3},{value:"Python and Mac OS X",id:"python-and-mac-os-x",level:3},{value:"Python",id:"python",level:3},{value:"R and Java",id:"r-and-java",level:3},{value:"Save and serve models",id:"quickstart_drilldown_log_and_load_model",level:2}];function h(e){const n={a:"a",admonition:"admonition",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,t.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.header,{children:(0,s.jsx)(n.h1,{id:"quickstart-options-and-troubleshooting",children:"Quickstart options and troubleshooting"})}),"\n","\n",(0,s.jsx)(n.h2,{id:"quickstart_drilldown_install",children:"Customize and troubleshoot MLflow installation"}),"\n",(0,s.jsx)(n.h3,{id:"python-library-options",children:"Python library options"}),"\n",(0,s.jsx)(n.p,{children:"Rather than the default MLflow library, you can install the following variations:"}),"\n",(0,s.jsxs)("table",{children:[(0,s.jsx)("thead",{children:(0,s.jsxs)("tr",{children:[(0,s.jsx)("th",{children:(0,s.jsx)(n.strong,{children:"Name"})}),(0,s.jsx)("th",{children:(0,s.jsxs)(n.strong,{children:[(0,s.jsx)(n.code,{children:"pip install"})," command"]})}),(0,s.jsx)("th",{children:(0,s.jsx)(n.strong,{children:"Description"})})]})}),(0,s.jsxs)("tbody",{children:[(0,s.jsxs)("tr",{children:[(0,s.jsx)("td",{children:"mlflow-skinny"}),(0,s.jsx)("td",{children:(0,s.jsx)(n.code,{children:"pip install mlflow-skinny"})}),(0,s.jsx)("td",{children:"Lightweight MLflow package without SQL storage, server, UI, or data science dependencies."})]}),(0,s.jsxs)("tr",{children:[(0,s.jsx)("td",{children:"mlflow[extras]"}),(0,s.jsx)("td",{children:(0,s.jsx)(n.code,{children:"pip install mlflow[extras]"})}),(0,s.jsxs)("td",{children:["MLflow package with all dependencies needed to run various MLflow flavors. These dependencies are listed in ",(0,s.jsx)(n.a,{href:"https://github.com/mlflow/mlflow/blob/master/requirements/extra-ml-requirements.txt",children:"this document"}),"."]})]}),(0,s.jsxs)("tr",{children:[(0,s.jsx)("td",{children:"In-development version"}),(0,s.jsx)("td",{children:(0,s.jsx)(n.code,{children:"pip install git+https://github.com/mlflow/mlflow.git@master"})}),(0,s.jsx)("td",{children:"This is the latest version of MLflow, which may be useful for getting hot-fixes or new features."})]})]})]}),"\n",(0,s.jsx)(n.h3,{id:"python-and-mac-os-x",children:"Python and Mac OS X"}),"\n",(0,s.jsxs)(n.p,{children:["We strongly recommend using a virtual environment manager on Macs. We always recommend\nusing virtual environments, but they are especially important on Mac OS X because the system\n",(0,s.jsx)(n.code,{children:"python"})," version varies depending on the installation and whether you've installed the Xcode\ncommand line tools. The default environment manager for MLflow is ",(0,s.jsx)(n.code,{children:"virtualenv"}),".\nOther popular options are ",(0,s.jsx)(n.code,{children:"conda"})," and ",(0,s.jsx)(n.code,{children:"venv"}),"."]}),"\n",(0,s.jsx)(n.h3,{id:"python",children:"Python"}),"\n",(0,s.jsx)(n.p,{children:"We release MLflow on:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["PyPI (",(0,s.jsx)(n.code,{children:"pip install mlflow"}),")"]}),"\n",(0,s.jsxs)(n.li,{children:["conda-forge (",(0,s.jsx)(n.code,{children:"conda install -c conda-forge mlflow"}),")"]}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"r-and-java",children:"R and Java"}),"\n",(0,s.jsx)(n.p,{children:"We release MLflow on:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["CRAN (",(0,s.jsx)(n.code,{children:'install.packages("mlflow")'}),")"]}),"\n",(0,s.jsxs)(n.li,{children:["Maven Central (",(0,s.jsx)(n.code,{children:"mlflow-client"}),", ",(0,s.jsx)(n.code,{children:"mlflow-parent"}),", ",(0,s.jsx)(n.code,{children:"mlflow-spark"}),")"]}),"\n"]}),"\n",(0,s.jsxs)(n.p,{children:["For R, see ",(0,s.jsx)(r.A,{to:"/api_reference/R-api.html",target:"_blank",children:"installing MLflow for R"}),".\nFor Java, see ",(0,s.jsx)(r.A,{to:"/api_reference/java_api/index.html",target:"_blank",children:"Java API"}),"."]}),"\n",(0,s.jsx)(n.h2,{id:"quickstart_drilldown_log_and_load_model",children:"Save and serve models"}),"\n",(0,s.jsxs)(n.p,{children:["MLflow includes a generic ",(0,s.jsx)(n.code,{children:"MLmodel"})," format for saving ",(0,s.jsx)(n.strong,{children:"models"})," from a variety of tools in diverse\n",(0,s.jsx)(n.strong,{children:"flavors"}),". For example, many models can be served as Python functions, so an ",(0,s.jsx)(n.code,{children:"MLmodel"})," file can\ndeclare how each model should be interpreted as a Python function in order to let various tools\nserve it. MLflow also includes tools for running such models locally and exporting them to Docker\ncontainers or commercial serving platforms."]}),"\n",(0,s.jsxs)(n.p,{children:["To illustrate this functionality, the ",(0,s.jsx)(n.code,{children:"mlflow.sklearn"})," flavor can log scikit-learn models as\nMLflow artifacts and then load them again for serving. There is an example training application in\n",(0,s.jsx)(n.a,{href:"https://github.com/mlflow/mlflow/tree/master/examples/sklearn_logistic_regression",children:"sklearn_logistic_regression/train.py"}),".\nTo run it, switch to the MLflow repository root and run:"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"python examples/sklearn_logistic_regression/train.py\n"})}),"\n",(0,s.jsxs)(n.p,{children:["When you run the example, it outputs an MLflow run ID for that experiment. If you look at the\n",(0,s.jsx)(n.code,{children:"mlflow ui"}),", you will also see that the run saved a ",(0,s.jsx)(n.strong,{children:"model"})," folder containing an ",(0,s.jsx)(n.code,{children:"MLmodel"}),"\ndescription file and a pickled scikit-learn model. You can pass the run ID and the path of the model\nwithin the artifacts directory (here ",(0,s.jsx)(n.strong,{children:"model/"}),") to various tools. For example, MLflow includes a\nsimple REST server for python-based models:"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"mlflow models serve -m --env-manager local runs:/<RUN_ID>/model\n"})}),"\n",(0,s.jsx)(n.admonition,{type:"note",children:(0,s.jsxs)(n.p,{children:["By default the server runs on port 5000. If that port is already in use, use the ",(0,s.jsx)(n.code,{children:"--port"})," option to\nspecify a different port. For example: ",(0,s.jsx)(n.code,{children:"mlflow models serve -m runs:/<RUN_ID>/model --port 1234"})]})}),"\n",(0,s.jsx)(n.p,{children:"Once you have started the server, you can pass it some sample data and see the\npredictions."}),"\n",(0,s.jsxs)(n.p,{children:["The following example uses ",(0,s.jsx)(n.code,{children:"curl"})," to send a JSON-serialized pandas DataFrame with the ",(0,s.jsx)(n.code,{children:"split"}),"\norientation to the model server. For more information about the input data formats accepted by\nthe pyfunc model server, see the ",(0,s.jsx)(n.a,{href:"/deployment/deploy-model-locally",children:"MLflow deployment tools documentation"}),"."]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:'curl -d \'{"dataframe_split": {"columns": ["x"], "data": [[1], [-1]]}}\' -H \'Content-Type: application/json\' -X POST localhost:5000/invocations\n'})}),"\n",(0,s.jsx)(n.p,{children:"which returns:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"[1, 0]\n"})}),"\n",(0,s.jsxs)(n.p,{children:["For more information, see ",(0,s.jsx)(n.a,{href:"/model",children:"MLflow Models"}),"."]})]})}function p(e={}){const{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(h,{...e})}):h(e)}}}]);