"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[3248],{11470:(e,l,n)=>{n.d(l,{A:()=>v});var r=n(96540),o=n(34164),t=n(23104),i=n(56347),a=n(205),s=n(57485),d=n(31682),c=n(70679);function h(e){return r.Children.toArray(e).filter((e=>"\n"!==e)).map((e=>{if(!e||(0,r.isValidElement)(e)&&function(e){const{props:l}=e;return!!l&&"object"==typeof l&&"value"in l}(e))return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)}))?.filter(Boolean)??[]}function m(e){const{values:l,children:n}=e;return(0,r.useMemo)((()=>{const e=l??function(e){return h(e).map((({props:{value:e,label:l,attributes:n,default:r}})=>({value:e,label:l,attributes:n,default:r})))}(n);return function(e){const l=(0,d.XI)(e,((e,l)=>e.value===l.value));if(l.length>0)throw new Error(`Docusaurus error: Duplicate values "${l.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`)}(e),e}),[l,n])}function p({value:e,tabValues:l}){return l.some((l=>l.value===e))}function f({queryString:e=!1,groupId:l}){const n=(0,i.W6)(),o=function({queryString:e=!1,groupId:l}){if("string"==typeof e)return e;if(!1===e)return null;if(!0===e&&!l)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return l??null}({queryString:e,groupId:l});return[(0,s.aZ)(o),(0,r.useCallback)((e=>{if(!o)return;const l=new URLSearchParams(n.location.search);l.set(o,e),n.replace({...n.location,search:l.toString()})}),[o,n])]}function u(e){const{defaultValue:l,queryString:n=!1,groupId:o}=e,t=m(e),[i,s]=(0,r.useState)((()=>function({defaultValue:e,tabValues:l}){if(0===l.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(e){if(!p({value:e,tabValues:l}))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${e}" but none of its children has the corresponding value. Available values are: ${l.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return e}const n=l.find((e=>e.default))??l[0];if(!n)throw new Error("Unexpected error: 0 tabValues");return n.value}({defaultValue:l,tabValues:t}))),[d,h]=f({queryString:n,groupId:o}),[u,g]=function({groupId:e}){const l=function(e){return e?`docusaurus.tab.${e}`:null}(e),[n,o]=(0,c.Dv)(l);return[n,(0,r.useCallback)((e=>{l&&o.set(e)}),[l,o])]}({groupId:o}),w=(()=>{const e=d??u;return p({value:e,tabValues:t})?e:null})();(0,a.A)((()=>{w&&s(w)}),[w]);return{selectedValue:i,selectValue:(0,r.useCallback)((e=>{if(!p({value:e,tabValues:t}))throw new Error(`Can't select invalid tab value=${e}`);s(e),h(e),g(e)}),[h,g,t]),tabValues:t}}var g=n(92303);const w={tabList:"tabList__CuJ",tabItem:"tabItem_LNqP"};var y=n(74848);function x({className:e,block:l,selectedValue:n,selectValue:r,tabValues:i}){const a=[],{blockElementScrollPositionUntilNextRender:s}=(0,t.a_)(),d=e=>{const l=e.currentTarget,o=a.indexOf(l),t=i[o].value;t!==n&&(s(l),r(t))},c=e=>{let l=null;switch(e.key){case"Enter":d(e);break;case"ArrowRight":{const n=a.indexOf(e.currentTarget)+1;l=a[n]??a[0];break}case"ArrowLeft":{const n=a.indexOf(e.currentTarget)-1;l=a[n]??a[a.length-1];break}}l?.focus()};return(0,y.jsx)("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,o.A)("tabs",{"tabs--block":l},e),children:i.map((({value:e,label:l,attributes:r})=>(0,y.jsx)("li",{role:"tab",tabIndex:n===e?0:-1,"aria-selected":n===e,ref:e=>{a.push(e)},onKeyDown:c,onClick:d,...r,className:(0,o.A)("tabs__item",w.tabItem,r?.className,{"tabs__item--active":n===e}),children:l??e},e)))})}function _({lazy:e,children:l,selectedValue:n}){const t=(Array.isArray(l)?l:[l]).filter(Boolean);if(e){const e=t.find((e=>e.props.value===n));return e?(0,r.cloneElement)(e,{className:(0,o.A)("margin-top--md",e.props.className)}):null}return(0,y.jsx)("div",{className:"margin-top--md",children:t.map(((e,l)=>(0,r.cloneElement)(e,{key:l,hidden:e.props.value!==n})))})}function j(e){const l=u(e);return(0,y.jsxs)("div",{className:(0,o.A)("tabs-container",w.tabList),children:[(0,y.jsx)(x,{...l,...e}),(0,y.jsx)(_,{...l,...e})]})}function v(e){const l=(0,g.A)();return(0,y.jsx)(j,{...e,children:h(e.children)},String(l))}},19365:(e,l,n)=>{n.d(l,{A:()=>i});n(96540);var r=n(34164);const o={tabItem:"tabItem_Ymn6"};var t=n(74848);function i({children:e,hidden:l,className:n}){return(0,t.jsx)("div",{role:"tabpanel",className:(0,r.A)(o.tabItem,n),hidden:l,children:e})}},24971:(e,l,n)=>{n.d(l,{A:()=>r});const r=n.p+"assets/images/uc_register_model_2_button-e6b3b94bde6506bda3be82836db5e019.png"},28453:(e,l,n)=>{n.d(l,{R:()=>i,x:()=>a});var r=n(96540);const o={},t=r.createContext(o);function i(e){const l=r.useContext(t);return r.useMemo((function(){return"function"==typeof e?e(l):{...l,...e}}),[l,e])}function a(e){let l;return l=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:i(e.components),r.createElement(t.Provider,{value:l},e.children)}},34592:(e,l,n)=>{n.d(l,{A:()=>r});const r=n.p+"assets/images/oss_registry_1_register-a71f2ea36d15265894cf0ea1810dd95f.png"},49374:(e,l,n)=>{n.d(l,{B:()=>s});n(96540);const r=JSON.parse('{"mlflow.anthropic":"api_reference/python_api/mlflow.anthropic.html","mlflow.artifacts":"api_reference/python_api/mlflow.artifacts.html","mlflow.ag2":"api_reference/python_api/mlflow.ag2.html","mlflow.autogen":"api_reference/python_api/mlflow.autogen.html","mlflow.bedrock":"api_reference/python_api/mlflow.bedrock.html","mlflow.catboost":"api_reference/python_api/mlflow.catboost.html","mlflow.client":"api_reference/python_api/mlflow.client.html","mlflow.config":"api_reference/python_api/mlflow.config.html","mlflow.crewai":"api_reference/python_api/mlflow.crewai.html","mlflow.data":"api_reference/python_api/mlflow.data.html","mlflow.deployments":"api_reference/python_api/mlflow.deployments.html","mlflow.diviner":"api_reference/python_api/mlflow.diviner.html","mlflow.dspy":"api_reference/python_api/mlflow.dspy.html","mlflow.entities":"api_reference/python_api/mlflow.entities.html","mlflow.environment_variables":"api_reference/python_api/mlflow.environment_variables.html","mlflow.gateway":"api_reference/python_api/mlflow.gateway.html","mlflow.gemini":"api_reference/python_api/mlflow.gemini.html","mlflow.groq":"api_reference/python_api/mlflow.groq.html","mlflow.h2o":"api_reference/python_api/mlflow.h2o.html","mlflow.johnsnowlabs":"api_reference/python_api/mlflow.johnsnowlabs.html","mlflow.keras":"api_reference/python_api/mlflow.keras.html","mlflow.langchain":"api_reference/python_api/mlflow.langchain.html","mlflow.lightgbm":"api_reference/python_api/mlflow.lightgbm.html","mlflow.litellm":"api_reference/python_api/mlflow.litellm.html","mlflow.llama_index":"api_reference/python_api/mlflow.llama_index.html","mlflow.metrics":"api_reference/python_api/mlflow.metrics.html","mlflow.mistral":"api_reference/python_api/mlflow.mistral.html","mlflow.models":"api_reference/python_api/mlflow.models.html","mlflow.onnx":"api_reference/python_api/mlflow.onnx.html","mlflow.openai":"api_reference/python_api/mlflow.openai.html","mlflow.paddle":"api_reference/python_api/mlflow.paddle.html","mlflow.pmdarima":"api_reference/python_api/mlflow.pmdarima.html","mlflow.projects":"api_reference/python_api/mlflow.projects.html","mlflow.promptflow":"api_reference/python_api/mlflow.promptflow.html","mlflow.prophet":"api_reference/python_api/mlflow.prophet.html","mlflow.pyfunc":"api_reference/python_api/mlflow.pyfunc.html","mlflow.pyspark.ml":"api_reference/python_api/mlflow.pyspark.ml.html","mlflow.pytorch":"api_reference/python_api/mlflow.pytorch.html","mlflow":"api_reference/python_api/mlflow.html","mlflow.sagemaker":"api_reference/python_api/mlflow.sagemaker.html","mlflow.sentence_transformers":"api_reference/python_api/mlflow.sentence_transformers.html","mlflow.server":"api_reference/python_api/mlflow.server.html","mlflow.shap":"api_reference/python_api/mlflow.shap.html","mlflow.sklearn":"api_reference/python_api/mlflow.sklearn.html","mlflow.spacy":"api_reference/python_api/mlflow.spacy.html","mlflow.spark":"api_reference/python_api/mlflow.spark.html","mlflow.statsmodels":"api_reference/python_api/mlflow.statsmodels.html","mlflow.system_metrics":"api_reference/python_api/mlflow.system_metrics.html","mlflow.tensorflow":"api_reference/python_api/mlflow.tensorflow.html","mlflow.tracing":"api_reference/python_api/mlflow.tracing.html","mlflow.transformers":"api_reference/python_api/mlflow.transformers.html","mlflow.types":"api_reference/python_api/mlflow.types.html","mlflow.utils":"api_reference/python_api/mlflow.utils.html","mlflow.xgboost":"api_reference/python_api/mlflow.xgboost.html","mlflow.server.auth":"api_reference/auth/python-api.html"}');var o=n(86025),t=n(28774),i=n(74848);const a=e=>{const l=e.split(".");for(let n=l.length;n>0;n--){const e=l.slice(0,n).join(".");if(r[e])return e}return null};function s({fn:e,children:l}){const n=a(e);if(!n)return(0,i.jsx)(i.Fragment,{children:l});const s=(0,o.Ay)(`/${r[n]}#${e}`);return(0,i.jsx)(t.A,{to:s,target:"_blank",children:l??(0,i.jsxs)("code",{children:[e,"()"]})})}},63934:(e,l,n)=>{n.d(l,{A:()=>r});const r=n.p+"assets/images/uc_register_model_1_dialog-dbc7806e79613776eb84159fa6c394e2.png"},66658:(e,l,n)=>{n.d(l,{A:()=>r});const r=n.p+"assets/images/oss_registry_2_dialog-1ac2c5e115d621eb507274c577093173.png"},90023:(e,l,n)=>{n.r(l),n.d(l,{assets:()=>h,contentTitle:()=>c,default:()=>f,frontMatter:()=>d,metadata:()=>r,toc:()=>m});const r=JSON.parse('{"id":"model-registry/index","title":"MLflow Model Registry","description":"The MLflow Model Registry is a centralized model store, set of APIs and a UI designed to","source":"@site/docs/classic-ml/model-registry/index.mdx","sourceDirName":"model-registry","slug":"/model-registry/","permalink":"/docs/latest/ml/model-registry/","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":15,"frontMatter":{"sidebar_position":15,"toc_max_heading_level":4,"sidebar_label":"Overview","pagination_next":"model-registry/tutorial"},"sidebar":"classicMLSidebar","previous":{"title":"Plugin Evaluators","permalink":"/docs/latest/ml/evaluation/plugin-evaluators"},"next":{"title":"Tutorial","permalink":"/docs/latest/ml/model-registry/tutorial"}}');var o=n(74848),t=n(28453),i=n(49374),a=n(11470),s=n(19365);const d={sidebar_position:15,toc_max_heading_level:4,sidebar_label:"Overview",pagination_next:"model-registry/tutorial"},c="MLflow Model Registry",h={},m=[{value:"Why Model Registry?",id:"why-model-registry",level:2},{value:"Concepts",id:"concepts",level:2},{value:"Model Registry in practice",id:"model-registry-in-practice",level:2},{value:"Model Registry in OSS MLflow",id:"model-registry-in-oss-mlflow",level:3},{value:"Register a model with MLflow Python APIs",id:"register-a-model-with-mlflow-python-apis",level:4},{value:"Register a model on MLflow UI",id:"register-a-model-on-mlflow-ui",level:4},{value:"Model Resgitry in Databricks",id:"model-resgitry-in-databricks",level:3},{value:"Register a model to Databricks UC with MLflow Python APIs",id:"register-a-model-to-databricks-uc-with-mlflow-python-apis",level:4},{value:"Register a model on Databricks UI",id:"register-a-model-on-databricks-ui",level:4}];function p(e){const l={a:"a",admonition:"admonition",code:"code",em:"em",h1:"h1",h2:"h2",h3:"h3",h4:"h4",header:"header",img:"img",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,t.R)(),...e.components},{Details:r}=l;return r||function(e,l){throw new Error("Expected "+(l?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}("Details",!0),(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(l.header,{children:(0,o.jsx)(l.h1,{id:"mlflow-model-registry",children:"MLflow Model Registry"})}),"\n",(0,o.jsx)(l.p,{children:"The MLflow Model Registry is a centralized model store, set of APIs and a UI designed to\ncollaboratively manage the full lifecycle of a model. It provides lineage (i.e., which\nMLflow experiment and run produced the model), versioning, aliasing, metadata tagging and\nannotation support to ensure that you have the full spectrum of information at every stage from development to production deployment."}),"\n",(0,o.jsx)(l.h2,{id:"why-model-registry",children:"Why Model Registry?"}),"\n",(0,o.jsx)(l.p,{children:"As machine learning projects grow in complexity and scale, managing models manually across different environments, teams, and iterations becomes increasingly error-prone and inefficient.\nThe MLflow Model Registry addresses this challenge by providing a centralized, structured system for organizing and governing ML models throughout their lifecycle."}),"\n",(0,o.jsx)(l.p,{children:"Using the Model Registry offers the following benefits:"}),"\n",(0,o.jsxs)(l.ul,{children:["\n",(0,o.jsxs)(l.li,{children:[(0,o.jsx)(l.strong,{children:"\ud83d\uddc2\ufe0f Version Control"}),": The registry automatically tracks versions of each model, allowing teams to compare iterations, roll back to previous states, and manage multiple versions in parallel (e.g., staging vs. production)."]}),"\n",(0,o.jsxs)(l.li,{children:[(0,o.jsx)(l.strong,{children:"\ud83e\uddec Model Lineage and Traceability"}),": Each registered model version is linked to the MLflow run, logged model or notebook that produced it, enabling full reproducibility. You can trace back exactly how a model was trained, with what data and parameters."]}),"\n",(0,o.jsxs)(l.li,{children:[(0,o.jsx)(l.strong,{children:"\ud83d\ude80 Production-Ready Workflows"}),": Features like model aliases (e.g., @champion) and tags make it easier to manage deployment workflows, promoting models to experimental, staging, or production environments in a controlled and auditable way."]}),"\n",(0,o.jsxs)(l.li,{children:[(0,o.jsx)(l.strong,{children:"\ud83d\udee1\ufe0f Governance and Compliance"}),": With structured metadata, tagging, and role-based access controls (when used with a backend like Databricks or a managed MLflow service), the Model Registry supports governance requirements critical for enterprise-grade ML operations."]}),"\n"]}),"\n",(0,o.jsx)(l.p,{children:"Whether you\u2019re a solo data scientist or part of a large ML platform team, the Model Registry is a foundational component for scaling reliable and maintainable machine learning systems."}),"\n",(0,o.jsx)(l.h2,{id:"concepts",children:"Concepts"}),"\n",(0,o.jsx)(l.p,{children:"The Model Registry introduces a few concepts that describe and facilitate the full lifecycle of an MLflow Model."}),"\n",(0,o.jsxs)("table",{children:[(0,o.jsx)("thead",{children:(0,o.jsxs)("tr",{children:[(0,o.jsx)("th",{children:"Concept"}),(0,o.jsx)("th",{children:"Description"})]})}),(0,o.jsxs)("tbody",{children:[(0,o.jsxs)("tr",{children:[(0,o.jsx)("td",{children:"Model"}),(0,o.jsx)("td",{children:(0,o.jsxs)(l.p,{children:["An MLflow Model is created with one of the model flavor\u2019s ",(0,o.jsx)(l.strong,{children:(0,o.jsx)(l.code,{children:"mlflow.<model_flavor>.log_model()"})})," methods, or ",(0,o.jsx)(l.strong,{children:(0,o.jsx)(i.B,{fn:"mlflow.create_external_model"})})," API since MLflow 3.\nOnce logged, this model can then be registered with the Model Registry."]})})]}),(0,o.jsxs)("tr",{children:[(0,o.jsx)("td",{children:"Registered Model"}),(0,o.jsx)("td",{children:(0,o.jsx)(l.p,{children:"An MLflow Model can be registered with the Model Registry. A registered model has a unique name, contains versions, aliases, tags, and other metadata."})})]}),(0,o.jsxs)("tr",{children:[(0,o.jsx)("td",{children:"Model Version"}),(0,o.jsx)("td",{children:(0,o.jsxs)(l.p,{children:["Each registered model can have one or many versions. When a new model is added to the Model Registry, it is added as version 1. Each new model registered to\nthe same model name ",(0,o.jsx)(l.strong,{children:"increments the version number"}),". Model versions have tags, which can be useful for tracking attributes of the model version (e.g. ",(0,o.jsx)(l.em,{children:(0,o.jsx)(l.code,{children:'pre_deploy_checks: "PASSED"'})}),")"]})})]}),(0,o.jsxs)("tr",{children:[(0,o.jsx)("td",{children:"Model URI"}),(0,o.jsx)("td",{children:(0,o.jsxs)(l.p,{children:["You can refer to the registered model by using a URI of this format: ",(0,o.jsx)(l.code,{children:"models:/<model-name>/<model-version>"}),', e.g., if you have a registered model with name "MyModel" and version 1, the URI referring to the model is: ',(0,o.jsx)(l.code,{children:"models:/MyModel/1"}),'".']})})]}),(0,o.jsxs)("tr",{children:[(0,o.jsx)("td",{children:"Model Alias"}),(0,o.jsxs)("td",{children:[(0,o.jsxs)(l.p,{children:["Model aliases allow you to assign a mutable, named reference to a particular version of a registered model. By assigning an alias to a specific model version,\nyou can use the alias to refer to that model version via a model URI or the model registry API. For example, you can create an alias named ",(0,o.jsx)(l.strong,{children:(0,o.jsx)(l.code,{children:"champion"})})," that\npoints to version 1 of a model named ",(0,o.jsx)(l.strong,{children:(0,o.jsx)(l.code,{children:"MyModel"})}),". You can then refer to version 1 of ",(0,o.jsx)(l.strong,{children:(0,o.jsx)(l.code,{children:"MyModel"})})," by using the URI ",(0,o.jsx)(l.strong,{children:(0,o.jsx)(l.code,{children:"models:/MyModel@champion"})}),"."]}),(0,o.jsxs)(l.p,{children:["Aliases are especially useful for deploying models. For example, you could assign a ",(0,o.jsx)(l.strong,{children:(0,o.jsx)(l.code,{children:"champion"})})," alias to the model version intended for production traffic\nand target this alias in production workloads. You can then update the model serving production traffic by reassigning the ",(0,o.jsx)(l.strong,{children:(0,o.jsx)(l.code,{children:"champion"})})," alias to a different model version."]})]})]}),(0,o.jsxs)("tr",{children:[(0,o.jsx)("td",{children:"Tags"}),(0,o.jsx)("td",{children:(0,o.jsxs)(l.p,{children:["Tags are key-value pairs that you associate with registered models and model versions, allowing you to label and categorize them by function or status. For example, you\ncould apply a tag with key ",(0,o.jsx)(l.strong,{children:(0,o.jsx)(l.code,{children:'"task"'})})," and value ",(0,o.jsx)(l.strong,{children:(0,o.jsx)(l.code,{children:'"question-answering"'})})," (displayed in the UI as ",(0,o.jsx)(l.strong,{children:(0,o.jsx)(l.code,{children:"task:question-answering"})}),") to registered models intended for question\nanswering tasks. At the model version level, you could tag versions undergoing pre-deployment validation with ",(0,o.jsx)(l.strong,{children:(0,o.jsx)(l.code,{children:"validation_status:pending"})})," and those cleared for deployment\nwith ",(0,o.jsx)(l.strong,{children:(0,o.jsx)(l.code,{children:"validation_status:approved"})}),"."]})})]}),(0,o.jsxs)("tr",{children:[(0,o.jsx)("td",{children:"Annotations and Descriptions"}),(0,o.jsx)("td",{children:(0,o.jsx)(l.p,{children:"You can annotate the top-level model and each version individually using Markdown, including the description and any relevant information useful for the team such as algorithm\ndescriptions, datasets employed or the overall methodology involved in a given version's modeling approach."})})]})]})]}),"\n",(0,o.jsx)(l.h2,{id:"model-registry-in-practice",children:"Model Registry in practice"}),"\n",(0,o.jsx)(l.p,{children:"The MLflow Model Registry is available in both open-source (OSS) MLflow and managed platforms like Databricks. Depending on the environment, the registry offers different\nlevels of integration, governance, and collaboration features."}),"\n",(0,o.jsx)(l.h3,{id:"model-registry-in-oss-mlflow",children:"Model Registry in OSS MLflow"}),"\n",(0,o.jsx)(l.p,{children:"In the open-source version of MLflow, the Model Registry provides both a UI and API for managing the lifecycle of machine learning models.\nYou can register models, track versions, add tags and descriptions, and transition models between stages such as Staging and Production."}),"\n",(0,o.jsxs)(r,{children:[(0,o.jsx)("summary",{children:"Register a model in MLflow"}),(0,o.jsxs)(a.A,{children:[(0,o.jsxs)(s.A,{label:"Python APIs",value:"python-apis",children:[(0,o.jsx)(l.h4,{id:"register-a-model-with-mlflow-python-apis",children:"Register a model with MLflow Python APIs"}),(0,o.jsx)(l.p,{children:"MLflow provides several ways to register a model version"}),(0,o.jsx)(l.pre,{children:(0,o.jsx)(l.code,{children:'# Option 1: specify `registered_model_name` parameter when logging a model\nmlflow.<flavor>.log_model(..., registered_model_name="<YOUR_MODEL_NAME>")\n\n# Option 2: register a logged model\nmlflow.register_model(model_uri="<YOUR_MODEL_URI>", name="<YOUR_MODEL_NAME>")\n'})}),(0,o.jsx)(l.p,{children:"After registering the model, you can load it back with the model name and version"}),(0,o.jsx)(l.pre,{children:(0,o.jsx)(l.code,{children:'mlflow.<flavor>.load_model("models:/<YOUR_MODEL_NAME>/<YOUR_MODEL_VERSION>")\n'})})]}),(0,o.jsxs)(s.A,{label:"MLflow UI",value:"mlflow-ui",children:[(0,o.jsx)(l.h4,{id:"register-a-model-on-mlflow-ui",children:"Register a model on MLflow UI"}),(0,o.jsxs)(l.ol,{children:["\n",(0,o.jsxs)(l.li,{children:["Open the details page for the MLflow Run containing the logged MLflow model you'd like to register. Select the model folder containing the intended MLflow model in the\n",(0,o.jsx)(l.strong,{children:"Artifacts"})," section."]}),"\n"]}),(0,o.jsx)(l.p,{children:(0,o.jsx)(l.img,{src:n(34592).A+"",width:"2711",height:"1599"})}),(0,o.jsxs)(l.ol,{start:"2",children:["\n",(0,o.jsxs)(l.li,{children:["\n",(0,o.jsxs)(l.p,{children:["Click the ",(0,o.jsx)(l.strong,{children:"Register Model"})," button, which will trigger a modal form to pop up."]}),"\n"]}),"\n",(0,o.jsxs)(l.li,{children:["\n",(0,o.jsxs)(l.p,{children:["In the ",(0,o.jsx)(l.strong,{children:"Model"}),' dropdown menu on the form, you can either select "Create New Model" (which creates a new registered model with your MLflow model as its initial version)\nor select an existing registered model (which registers your model under it as a new version). The screenshot below demonstrates registering the MLflow model to a new registered\nmodel named ',(0,o.jsx)(l.code,{children:'"iris_model_testing"'}),"."]}),"\n"]}),"\n"]}),(0,o.jsx)(l.p,{children:(0,o.jsx)(l.img,{src:n(66658).A+"",width:"2710",height:"1597"})})]})]})]}),"\n",(0,o.jsxs)(l.p,{children:["To learn more about the OSS Model Registry, refer to the ",(0,o.jsx)(l.a,{href:"./tutorial",children:"tutorial on the model registry"}),"."]}),"\n",(0,o.jsx)(l.h3,{id:"model-resgitry-in-databricks",children:"Model Resgitry in Databricks"}),"\n",(0,o.jsx)(l.p,{children:"Databricks extends MLflow\u2019s capabilities by integrating the Model Registry with Unity Catalog, enabling centralized governance, fine-grained access control, and cross-workspace collaboration."}),"\n",(0,o.jsx)(l.p,{children:"Key benefits of Unity Catalog integration include:"}),"\n",(0,o.jsxs)(l.ul,{children:["\n",(0,o.jsxs)(l.li,{children:[(0,o.jsx)(l.strong,{children:"\ud83d\udee1\ufe0f Enhanced governance"}),": Apply access policies and permission controls to model assets."]}),"\n",(0,o.jsxs)(l.li,{children:[(0,o.jsx)(l.strong,{children:"\ud83c\udf10 Cross-workspace access"}),": Register models once and access them across multiple Databricks workspaces."]}),"\n",(0,o.jsxs)(l.li,{children:[(0,o.jsx)(l.strong,{children:"\ud83d\udd17 Model lineage"}),": Track which notebooks, datasets, and experiments were used to create each model."]}),"\n",(0,o.jsxs)(l.li,{children:[(0,o.jsx)(l.strong,{children:"\ud83d\udd0d Discovery and reuse"}),": Browse and reuse production-grade models from a shared catalog."]}),"\n"]}),"\n",(0,o.jsxs)(r,{children:[(0,o.jsx)("summary",{children:"Register a model in Databricks UC"}),(0,o.jsxs)(a.A,{children:[(0,o.jsxs)(s.A,{label:"Python APIs",value:"python-apis",children:[(0,o.jsx)(l.h4,{id:"register-a-model-to-databricks-uc-with-mlflow-python-apis",children:"Register a model to Databricks UC with MLflow Python APIs"}),(0,o.jsxs)(l.p,{children:[(0,o.jsx)(l.strong,{children:"Prerequisite"}),": Set tracking uri to Databricks"]}),(0,o.jsx)(l.pre,{children:(0,o.jsx)(l.code,{className:"language-python",children:'import mlflow\n\nmlflow.set_registry_uri("databricks-uc")\n'})}),(0,o.jsx)(l.p,{children:"Use MLflow APIs to register the model"}),(0,o.jsx)(l.pre,{children:(0,o.jsx)(l.code,{children:'# Option 1: specify `registered_model_name` parameter when logging a model\nmlflow.<flavor>.log_model(..., registered_model_name="<YOUR_MODEL_NAME>")\n\n# Option 2: register a logged model\nmlflow.register_model(model_uri="<YOUR_MODEL_URI>", name="<YOUR_MODEL_NAME>")\n'})}),(0,o.jsx)(l.admonition,{type:"warning",children:(0,o.jsxs)(l.p,{children:["ML model versions in UC must have a ",(0,o.jsx)(l.a,{href:"../model/signatures",children:"model signature"}),". If you want to set a signature on a model that's\nalready logged or saved, the ",(0,o.jsx)(i.B,{fn:"mlflow.models.set_signature"})," API is available for this purpose."]})}),(0,o.jsx)(l.p,{children:"After registering the model, you can load it back with the model name and version"}),(0,o.jsx)(l.pre,{children:(0,o.jsx)(l.code,{children:'mlflow.<flavor>.load_model("models:/<YOUR_MODEL_NAME>/<YOUR_MODEL_VERSION>")\n'})})]}),(0,o.jsxs)(s.A,{label:"Databricks UI",value:"databricks-ui",children:[(0,o.jsx)(l.h4,{id:"register-a-model-on-databricks-ui",children:"Register a model on Databricks UI"}),(0,o.jsxs)(l.ol,{children:["\n",(0,o.jsxs)(l.li,{children:["\n",(0,o.jsx)(l.p,{children:"From the experiment run page or models page, click Register model in the upper-right corner of the UI."}),"\n"]}),"\n",(0,o.jsxs)(l.li,{children:["\n",(0,o.jsx)(l.p,{children:"In the dialog, select Unity Catalog, and select a destination model from the drop down list."}),"\n"]}),"\n"]}),(0,o.jsx)(l.p,{children:(0,o.jsx)(l.img,{src:n(63934).A+"",width:"515",height:"231"})}),(0,o.jsxs)(l.ol,{start:"3",children:["\n",(0,o.jsx)(l.li,{children:"Click Register."}),"\n"]}),(0,o.jsx)(l.p,{children:(0,o.jsx)(l.img,{src:n(24971).A+"",width:"520",height:"239"})}),(0,o.jsx)(l.p,{children:"Registering a model can take time. To monitor progress, navigate to the destination model in Unity Catalog and refresh periodically."})]})]})]}),"\n",(0,o.jsxs)(l.p,{children:["For more information, refer to the ",(0,o.jsx)(l.a,{href:"https://docs.databricks.com/aws/en/machine-learning/manage-model-lifecycle",children:"Databricks documentation"})," on managing the model lifecycle."]})]})}function f(e={}){const{wrapper:l}={...(0,t.R)(),...e.components};return l?(0,o.jsx)(l,{...e,children:(0,o.jsx)(p,{...e})}):p(e)}}}]);