"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[1414],{11470:(e,n,t)=>{t.d(n,{A:()=>_});var a=t(96540),r=t(34164),o=t(23104),i=t(56347),l=t(205),s=t(57485),p=t(31682),m=t(70679);function c(e){return a.Children.toArray(e).filter((e=>"\n"!==e)).map((e=>{if(!e||(0,a.isValidElement)(e)&&function(e){const{props:n}=e;return!!n&&"object"==typeof n&&"value"in n}(e))return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)}))?.filter(Boolean)??[]}function d(e){const{values:n,children:t}=e;return(0,a.useMemo)((()=>{const e=n??function(e){return c(e).map((({props:{value:e,label:n,attributes:t,default:a}})=>({value:e,label:n,attributes:t,default:a})))}(t);return function(e){const n=(0,p.XI)(e,((e,n)=>e.value===n.value));if(n.length>0)throw new Error(`Docusaurus error: Duplicate values "${n.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`)}(e),e}),[n,t])}function f({value:e,tabValues:n}){return n.some((n=>n.value===e))}function h({queryString:e=!1,groupId:n}){const t=(0,i.W6)(),r=function({queryString:e=!1,groupId:n}){if("string"==typeof e)return e;if(!1===e)return null;if(!0===e&&!n)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return n??null}({queryString:e,groupId:n});return[(0,s.aZ)(r),(0,a.useCallback)((e=>{if(!r)return;const n=new URLSearchParams(t.location.search);n.set(r,e),t.replace({...t.location,search:n.toString()})}),[r,t])]}function u(e){const{defaultValue:n,queryString:t=!1,groupId:r}=e,o=d(e),[i,s]=(0,a.useState)((()=>function({defaultValue:e,tabValues:n}){if(0===n.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(e){if(!f({value:e,tabValues:n}))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${e}" but none of its children has the corresponding value. Available values are: ${n.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return e}const t=n.find((e=>e.default))??n[0];if(!t)throw new Error("Unexpected error: 0 tabValues");return t.value}({defaultValue:n,tabValues:o}))),[p,c]=h({queryString:t,groupId:r}),[u,g]=function({groupId:e}){const n=function(e){return e?`docusaurus.tab.${e}`:null}(e),[t,r]=(0,m.Dv)(n);return[t,(0,a.useCallback)((e=>{n&&r.set(e)}),[n,r])]}({groupId:r}),y=(()=>{const e=p??u;return f({value:e,tabValues:o})?e:null})();(0,l.A)((()=>{y&&s(y)}),[y]);return{selectedValue:i,selectValue:(0,a.useCallback)((e=>{if(!f({value:e,tabValues:o}))throw new Error(`Can't select invalid tab value=${e}`);s(e),c(e),g(e)}),[c,g,o]),tabValues:o}}var g=t(92303);const y={tabList:"tabList__CuJ",tabItem:"tabItem_LNqP"};var v=t(74848);function w({className:e,block:n,selectedValue:t,selectValue:a,tabValues:i}){const l=[],{blockElementScrollPositionUntilNextRender:s}=(0,o.a_)(),p=e=>{const n=e.currentTarget,r=l.indexOf(n),o=i[r].value;o!==t&&(s(n),a(o))},m=e=>{let n=null;switch(e.key){case"Enter":p(e);break;case"ArrowRight":{const t=l.indexOf(e.currentTarget)+1;n=l[t]??l[0];break}case"ArrowLeft":{const t=l.indexOf(e.currentTarget)-1;n=l[t]??l[l.length-1];break}}n?.focus()};return(0,v.jsx)("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,r.A)("tabs",{"tabs--block":n},e),children:i.map((({value:e,label:n,attributes:a})=>(0,v.jsx)("li",{role:"tab",tabIndex:t===e?0:-1,"aria-selected":t===e,ref:e=>{l.push(e)},onKeyDown:m,onClick:p,...a,className:(0,r.A)("tabs__item",y.tabItem,a?.className,{"tabs__item--active":t===e}),children:n??e},e)))})}function x({lazy:e,children:n,selectedValue:t}){const o=(Array.isArray(n)?n:[n]).filter(Boolean);if(e){const e=o.find((e=>e.props.value===t));return e?(0,a.cloneElement)(e,{className:(0,r.A)("margin-top--md",e.props.className)}):null}return(0,v.jsx)("div",{className:"margin-top--md",children:o.map(((e,n)=>(0,a.cloneElement)(e,{key:n,hidden:e.props.value!==t})))})}function b(e){const n=u(e);return(0,v.jsxs)("div",{className:(0,r.A)("tabs-container",y.tabList),children:[(0,v.jsx)(w,{...n,...e}),(0,v.jsx)(x,{...n,...e})]})}function _(e){const n=(0,g.A)();return(0,v.jsx)(b,{...e,children:c(e.children)},String(n))}},19365:(e,n,t)=>{t.d(n,{A:()=>i});t(96540);var a=t(34164);const r={tabItem:"tabItem_Ymn6"};var o=t(74848);function i({children:e,hidden:n,className:t}){return(0,o.jsx)("div",{role:"tabpanel",className:(0,a.A)(r.tabItem,t),hidden:n,children:e})}},20411:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>c,contentTitle:()=>m,default:()=>h,frontMatter:()=>p,metadata:()=>a,toc:()=>d});const a=JSON.parse('{"id":"data-model/prompts","title":"MLflow Prompt Data Model","description":"MLflow Prompt Registry provides a structured approach to managing prompt templates for GenAI applications through versioned, reusable prompt entities. The Prompt data model enables systematic prompt engineering, version control, and deployment management across your organization.","source":"@site/docs/genai/data-model/prompts.mdx","sourceDirName":"data-model","slug":"/data-model/prompts","permalink":"/docs/latest/genai/data-model/prompts","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{},"sidebar":"genAISidebar","previous":{"title":"Traces","permalink":"/docs/latest/genai/data-model/traces"},"next":{"title":"Version Tracking","permalink":"/docs/latest/genai/data-model/app-versions"}}');var r=t(74848),o=t(28453),i=t(49374),l=t(11470),s=t(19365);const p={},m="MLflow Prompt Data Model",c={},d=[{value:"Overview",id:"overview",level:2},{value:"Prompt as a Versioned Entity",id:"prompt-as-a-versioned-entity",level:2},{value:"Centralized Template Management",id:"centralized-template-management",level:3},{value:"Git-Inspired Versioning",id:"git-inspired-versioning",level:3},{value:"Dynamic Variable Support",id:"dynamic-variable-support",level:3},{value:"Prompt Core Properties",id:"prompt-core-properties",level:2},{value:"Identity and Content",id:"identity-and-content",level:3},{value:"Template Structure",id:"template-structure",level:3},{value:"Tags",id:"tags",level:3},{value:"Prompt Lifecycle Management",id:"prompt-lifecycle-management",level:2},{value:"Creation and Versioning",id:"creation-and-versioning",level:3},{value:"Alias Management",id:"alias-management",level:3},{value:"Prompt Usage Patterns",id:"prompt-usage-patterns",level:2},{value:"Loading and Formatting",id:"loading-and-formatting",level:3},{value:"Framework Integration",id:"framework-integration",level:3},{value:"Prompt Comparison and Evolution",id:"prompt-comparison-and-evolution",level:2},{value:"Version Comparison",id:"version-comparison",level:3},{value:"Benefits of Prompt-Centric Organization",id:"benefits-of-prompt-centric-organization",level:2},{value:"Centralized Management",id:"centralized-management",level:3},{value:"Development Efficiency",id:"development-efficiency",level:3},{value:"Quality Assurance",id:"quality-assurance",level:3},{value:"Prompt Management Best Practices",id:"prompt-management-best-practices",level:2},{value:"Naming and Organization",id:"naming-and-organization",level:3},{value:"Template Design",id:"template-design",level:3},{value:"Lifecycle Management",id:"lifecycle-management",level:3},{value:"Getting Started with Prompt Registry",id:"getting-started-with-prompt-registry",level:2},{value:"Next Steps",id:"next-steps",level:2}];function f(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",mermaid:"mermaid",p:"p",pre:"pre",strong:"strong",...(0,o.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.header,{children:(0,r.jsx)(n.h1,{id:"mlflow-prompt-data-model",children:"MLflow Prompt Data Model"})}),"\n",(0,r.jsxs)(n.p,{children:["MLflow ",(0,r.jsx)(n.strong,{children:"Prompt Registry"})," provides a structured approach to managing prompt templates for GenAI applications through versioned, reusable prompt entities. The Prompt data model enables systematic prompt engineering, version control, and deployment management across your organization."]}),"\n",(0,r.jsx)(n.h2,{id:"overview",children:"Overview"}),"\n",(0,r.jsxs)(n.p,{children:["The MLflow Prompt data model centers around the ",(0,r.jsx)(n.strong,{children:"Prompt"})," entity, which represents a versioned template with comprehensive metadata and lifecycle management capabilities."]}),"\n",(0,r.jsx)(n.mermaid,{value:"graph TD\n    subgraph PROMPT[\ud83d\udcdd MLflow Prompt Entity]\n        direction TB\n        TITLE[\ud83c\udfaf Versioned Template Container]\n\n        subgraph CORE[\ud83d\udcca Core Properties]\n            NAME[\ud83d\udcdb Name]\n            TEMPLATE[\ud83d\udcc4 Template Text]\n            VERSION[\ud83d\udd22 Version Number]\n        end\n\n        subgraph METADATA[\ud83d\udccb Metadata]\n            COMMIT[\ud83d\udcac Commit Message]\n            TAGS[\ud83d\udd16 Version Tags]\n            DESC[\ud83d\udcdd Description]\n        end\n\n        subgraph MANAGEMENT[\u2699\ufe0f Management]\n            ALIASES[\ud83c\udfaf Aliases]\n            TIMESTAMP[\u23f0 Creation Time]\n            LIFECYCLE[\ud83d\udd04 Lifecycle State]\n        end\n\n        TITLE -.-> CORE\n        TITLE -.-> METADATA\n        TITLE -.-> MANAGEMENT\n    end\n\n    classDef promptStyle fill:#e8f5e8,stroke:#2e7d32,stroke-width:3px,color:#000\n    classDef coreStyle fill:#e3f2fd,stroke:#0277bd,stroke-width:2px,color:#000\n    classDef metaStyle fill:#fff3e0,stroke:#ef6c00,stroke-width:2px,color:#000\n    classDef mgmtStyle fill:#f3e5f5,stroke:#7b1fa2,stroke-width:2px,color:#000\n    classDef titleStyle fill:#f5f5f5,stroke:#424242,stroke-width:2px,color:#000\n\n    class PROMPT promptStyle\n    class CORE,NAME,TEMPLATE,VERSION coreStyle\n    class METADATA,COMMIT,TAGS,DESC metaStyle\n    class MANAGEMENT,ALIASES,TIMESTAMP,LIFECYCLE mgmtStyle\n    class TITLE titleStyle"}),"\n",(0,r.jsx)(n.h2,{id:"prompt-as-a-versioned-entity",children:"Prompt as a Versioned Entity"}),"\n",(0,r.jsx)(n.h3,{id:"centralized-template-management",children:"Centralized Template Management"}),"\n",(0,r.jsx)(n.p,{children:"The Prompt entity provides a single source of truth for template definitions, enabling consistent reuse across multiple applications and teams while maintaining version history and change tracking."}),"\n",(0,r.jsx)(n.h3,{id:"git-inspired-versioning",children:"Git-Inspired Versioning"}),"\n",(0,r.jsx)(n.p,{children:"Prompt versioning follows Git-like principles with sequential version numbers, commit messages describing changes, and immutable versions that ensure reproducibility and rollback capabilities."}),"\n",(0,r.jsx)(n.h3,{id:"dynamic-variable-support",children:"Dynamic Variable Support"}),"\n",(0,r.jsxs)(n.p,{children:["Templates support variable interpolation using double-brace syntax (",(0,r.jsx)(n.code,{children:"{{variable}}"}),"), enabling flexible content generation while maintaining template structure and reusability."]}),"\n",(0,r.jsx)(n.h2,{id:"prompt-core-properties",children:"Prompt Core Properties"}),"\n",(0,r.jsx)(n.h3,{id:"identity-and-content",children:"Identity and Content"}),"\n",(0,r.jsx)(n.p,{children:"Every Prompt has fundamental identification and content properties:"}),"\n",(0,r.jsx)(n.mermaid,{value:"graph TB\n    PROMPT[\ud83d\udcdd Prompt Entity]\n\n    subgraph IDENTITY[\ud83d\udcdb Identity Properties]\n        NAME[Name: Unique identifier]\n        NAMESPACE[Namespace: Organization scope]\n        URI[URI: prompts:/name/version]\n    end\n\n    subgraph CONTENT[\ud83d\udcc4 Content Properties]\n        TEMPLATE[Template: Text with variables]\n        VARIABLES[Variables: Extracted template parameters]\n        FORMAT[Format: Double-brace syntax]\n    end\n\n    subgraph VERSION[\ud83d\udd22 Version Properties]\n        NUMBER[Version Number: Sequential]\n        IMMUTABLE[Immutability: Read-only after creation]\n        HISTORY[History: Complete version chain]\n    end\n\n    PROMPT --\x3e IDENTITY\n    PROMPT --\x3e CONTENT\n    PROMPT --\x3e VERSION\n\n    classDef promptStyle fill:#e8f5e8,stroke:#2e7d32,stroke-width:3px,color:#000\n    classDef identityStyle fill:#e3f2fd,stroke:#0277bd,stroke-width:2px,color:#000\n    classDef contentStyle fill:#fff3e0,stroke:#ef6c00,stroke-width:2px,color:#000\n    classDef versionStyle fill:#f3e5f5,stroke:#7b1fa2,stroke-width:2px,color:#000\n\n    class PROMPT promptStyle\n    class IDENTITY,NAME,NAMESPACE,URI identityStyle\n    class CONTENT,TEMPLATE,VARIABLES,FORMAT contentStyle\n    class VERSION,NUMBER,IMMUTABLE,HISTORY versionStyle"}),"\n",(0,r.jsx)(n.h3,{id:"template-structure",children:"Template Structure"}),"\n",(0,r.jsx)(n.p,{children:"Prompt templates support sophisticated variable interpolation:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-python",children:'# Example template with variables\ntemplate = """\nYou are an expert {{ role }}. Analyze the following {{ content_type }} and provide {{ num_points }} key insights.\n\nContent: {{ content }}\n\nRequirements:\n- Focus on {{ focus_area }}\n- Use {{ tone }} tone\n- Limit response to {{ max_length }} words\n"""\n\n# Variables automatically extracted: role, content_type, num_points, content, focus_area, tone, max_length\n'})}),"\n",(0,r.jsx)(n.h3,{id:"tags",children:"Tags"}),"\n",(0,r.jsxs)(n.p,{children:["Use ",(0,r.jsx)(n.code,{children:"tags"})," for storing version-specific information, such as the author of the changes."]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-python",children:'# Register prompt with comprehensive tags\nprompt = mlflow.genai.register_prompt(\n    name="content-analyzer",\n    template=template,\n    commit_message="Added tone and length controls",\n    tags={\n        "author": "ai-team@company.com",\n        "purpose": "Content analysis with customizable output",\n        "model": "gpt-4",\n        "performance_score": "0.92",\n        "review_status": "approved",\n    },\n)\n'})}),"\n",(0,r.jsx)(n.h2,{id:"prompt-lifecycle-management",children:"Prompt Lifecycle Management"}),"\n",(0,r.jsx)(n.h3,{id:"creation-and-versioning",children:"Creation and Versioning"}),"\n",(0,r.jsx)(n.p,{children:"Prompts follow a systematic lifecycle with clear creation and update patterns:"}),"\n",(0,r.jsx)(n.mermaid,{value:"graph TB\n    CREATE[\ud83d\udcdd Create Initial Prompt]\n\n    subgraph DEVELOPMENT[\ud83d\udd27 Development Phase]\n        ITERATE[\ud83d\udd04 Iterative Updates]\n        TEST[\ud83e\uddea Testing Versions]\n        REFINE[\u2728 Refinement]\n    end\n\n    subgraph DEPLOYMENT[\ud83d\ude80 Deployment Phase]\n        ALIAS[\ud83c\udfaf Alias Assignment]\n        PRODUCTION[\ud83c\udfed Production Use]\n        MONITOR[\ud83d\udcca Performance Monitoring]\n    end\n\n    subgraph MAINTENANCE[\ud83d\udee0\ufe0f Maintenance Phase]\n        UPDATE[\ud83d\udd04 Version Updates]\n        ROLLBACK[\u21a9\ufe0f Rollback Capability]\n        ARCHIVE[\ud83d\udce6 Archive Management]\n    end\n\n    CREATE --\x3e DEVELOPMENT\n    DEVELOPMENT --\x3e DEPLOYMENT\n    DEPLOYMENT --\x3e MAINTENANCE\n    MAINTENANCE --\x3e DEVELOPMENT\n\n    classDef createStyle fill:#e8f5e8,stroke:#2e7d32,stroke-width:3px,color:#000\n    classDef devStyle fill:#e3f2fd,stroke:#0277bd,stroke-width:2px,color:#000\n    classDef deployStyle fill:#fff3e0,stroke:#ef6c00,stroke-width:2px,color:#000\n    classDef maintainStyle fill:#f3e5f5,stroke:#7b1fa2,stroke-width:2px,color:#000\n\n    class CREATE createStyle\n    class DEVELOPMENT,ITERATE,TEST,REFINE devStyle\n    class DEPLOYMENT,ALIAS,PRODUCTION,MONITOR deployStyle\n    class MAINTENANCE,UPDATE,ROLLBACK,ARCHIVE maintainStyle"}),"\n",(0,r.jsx)(n.h3,{id:"alias-management",children:"Alias Management"}),"\n",(0,r.jsx)(n.p,{children:"Aliases provide mutable references to prompt versions for flexible deployment:"}),"\n",(0,r.jsx)(n.mermaid,{value:"graph TB\n    PROMPT[\ud83d\udcdd Prompt: summarization-prompt]\n\n    subgraph VERSIONS[\ud83d\udd22 Available Versions]\n        V1[Version 1: Initial]\n        V2[Version 2: Improved]\n        V3[Version 3: Enhanced]\n        V4[Version 4: Latest]\n    end\n\n    subgraph ALIASES[\ud83c\udfaf Active Aliases]\n        PROD[production \u2192 Version 2]\n        STAGING[staging \u2192 Version 4]\n        BETA[beta \u2192 Version 3]\n    end\n\n    PROMPT --\x3e VERSIONS\n    PROMPT --\x3e ALIASES\n\n    classDef promptStyle fill:#e8f5e8,stroke:#2e7d32,stroke-width:3px,color:#000\n    classDef versionStyle fill:#e3f2fd,stroke:#0277bd,stroke-width:2px,color:#000\n    classDef aliasStyle fill:#fff3e0,stroke:#ef6c00,stroke-width:2px,color:#000\n\n    class PROMPT promptStyle\n    class VERSIONS,V1,V2,V3,V4 versionStyle\n    class ALIASES,PROD,STAGING,BETA aliasStyle"}),"\n",(0,r.jsx)(n.h2,{id:"prompt-usage-patterns",children:"Prompt Usage Patterns"}),"\n",(0,r.jsx)(n.h3,{id:"loading-and-formatting",children:"Loading and Formatting"}),"\n",(0,r.jsx)(n.p,{children:"Prompts are loaded and used through systematic patterns:"}),"\n",(0,r.jsxs)(l.A,{children:[(0,r.jsx)(s.A,{value:"specific",label:"Specific Version",default:!0,children:(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-python",children:'# Load specific version\nprompt = mlflow.genai.load_prompt("prompts:/summarization-prompt/2")\n\n# Format with variables\nformatted_text = prompt.format(\n    num_sentences=3, content="Your content here...", tone="professional"\n)\n'})})}),(0,r.jsx)(s.A,{value:"alias",label:"Alias Reference",children:(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-python",children:'# Load via alias for deployment flexibility\nprompt = mlflow.genai.load_prompt("prompts:/summarization-prompt@production")\n\n# Same formatting interface\nformatted_text = prompt.format(\n    num_sentences=3, content="Your content here...", tone="professional"\n)\n'})})}),(0,r.jsx)(s.A,{value:"search",label:"Discovery and Search",children:(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-python",children:'# Search prompts by criteria\nprompts = mlflow.genai.search_prompts(filter_string="name LIKE \'my_prompt%\'")\n\n# Load discovered prompt\nprompt = mlflow.genai.load_prompt(f"prompts:/{prompts[0].name}/{prompts[0].version}")\n'})})})]}),"\n",(0,r.jsx)(n.h3,{id:"framework-integration",children:"Framework Integration"}),"\n",(0,r.jsx)(n.p,{children:"Prompts integrate seamlessly with popular GenAI frameworks:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-python",children:'# Integration with LangChain\nfrom langchain.prompts import PromptTemplate\n\n# Load from MLflow and convert format\nmlflow_prompt = mlflow.genai.load_prompt("prompts:/qa-prompt/1")\nlangchain_prompt = PromptTemplate.from_template(mlflow_prompt.to_single_brace_format())\n\n# Integration with OpenAI\nimport openai\n\nclient = openai.OpenAI()\nresponse = client.chat.completions.create(\n    messages=[\n        {"role": "user", "content": mlflow_prompt.format(question="What is MLflow?")}\n    ],\n    model="gpt-4",\n)\n'})}),"\n",(0,r.jsx)(n.h2,{id:"prompt-comparison-and-evolution",children:"Prompt Comparison and Evolution"}),"\n",(0,r.jsx)(n.h3,{id:"version-comparison",children:"Version Comparison"}),"\n",(0,r.jsx)(n.p,{children:"MLflow provides built-in comparison capabilities for prompt evolution:"}),"\n",(0,r.jsx)(n.mermaid,{value:"graph TB\n    COMPARISON[\ud83d\udcca Prompt Version Comparison]\n\n    subgraph ANALYSIS[\ud83d\udd0d Comparison Analysis]\n        DIFF[Text Diff: Line-by-line changes]\n        VARIABLES[Variable Changes: Added/removed parameters]\n        METADATA[Metadata Evolution: Context changes]\n    end\n\n    subgraph METRICS[\ud83d\udcc8 Performance Metrics]\n        QUALITY[Quality Scores: Performance comparison]\n        USAGE[Usage Patterns: Adoption metrics]\n        FEEDBACK[User Feedback: Qualitative assessment]\n    end\n\n    subgraph DECISION[\ud83c\udfaf Decision Support]\n        PROMOTION[Version Promotion: Alias updates]\n        ROLLBACK[Rollback Planning: Safety measures]\n        ADOPTION[Adoption Strategy: Deployment planning]\n    end\n\n    COMPARISON --\x3e ANALYSIS\n    COMPARISON --\x3e METRICS\n    COMPARISON --\x3e DECISION\n\n    classDef compStyle fill:#e8f5e8,stroke:#2e7d32,stroke-width:3px,color:#000\n    classDef analysisStyle fill:#e3f2fd,stroke:#0277bd,stroke-width:2px,color:#000\n    classDef metricsStyle fill:#fff3e0,stroke:#ef6c00,stroke-width:2px,color:#000\n    classDef decisionStyle fill:#f3e5f5,stroke:#7b1fa2,stroke-width:2px,color:#000\n\n    class COMPARISON compStyle\n    class ANALYSIS,DIFF,VARIABLES,METADATA analysisStyle\n    class METRICS,QUALITY,USAGE,FEEDBACK metricsStyle\n    class DECISION,PROMOTION,ROLLBACK,ADOPTION decisionStyle"}),"\n",(0,r.jsx)(n.h2,{id:"benefits-of-prompt-centric-organization",children:"Benefits of Prompt-Centric Organization"}),"\n",(0,r.jsx)(n.h3,{id:"centralized-management",children:"Centralized Management"}),"\n",(0,r.jsxs)(n.p,{children:["The Prompt Registry provides ",(0,r.jsx)(n.strong,{children:"unified template storage"})," that eliminates scattered prompt definitions across applications, ",(0,r.jsx)(n.strong,{children:"version control"})," that maintains complete change history with rollback capabilities, ",(0,r.jsx)(n.strong,{children:"collaborative development"})," that enables team sharing and review processes, and ",(0,r.jsx)(n.strong,{children:"consistency enforcement"})," that ensures standardized prompt usage across projects."]}),"\n",(0,r.jsx)(n.h3,{id:"development-efficiency",children:"Development Efficiency"}),"\n",(0,r.jsxs)(n.p,{children:["Prompt entities enable ",(0,r.jsx)(n.strong,{children:"reusability"})," through shared templates across multiple applications, ",(0,r.jsx)(n.strong,{children:"systematic testing"})," via version comparison and performance tracking, ",(0,r.jsx)(n.strong,{children:"deployment flexibility"})," using aliases for environment-specific deployments, and ",(0,r.jsx)(n.strong,{children:"framework agnostic"})," integration with any GenAI library or service."]}),"\n",(0,r.jsx)(n.h3,{id:"quality-assurance",children:"Quality Assurance"}),"\n",(0,r.jsxs)(n.p,{children:["The structured approach supports ",(0,r.jsx)(n.strong,{children:"change tracking"})," with detailed commit messages and metadata, ",(0,r.jsx)(n.strong,{children:"performance monitoring"})," through integrated metrics and feedback, ",(0,r.jsx)(n.strong,{children:"collaborative review"})," via shared access and version comparison, and ",(0,r.jsx)(n.strong,{children:"rollback safety"})," through immutable versions and alias management."]}),"\n",(0,r.jsx)(n.h2,{id:"prompt-management-best-practices",children:"Prompt Management Best Practices"}),"\n",(0,r.jsx)(n.h3,{id:"naming-and-organization",children:"Naming and Organization"}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Descriptive naming"})," should use clear, consistent names that reflect prompt purpose and domain. ",(0,r.jsx)(n.strong,{children:"Logical grouping"})," can leverage tags for functional and organizational categorization. ",(0,r.jsx)(n.strong,{children:"Version strategy"})," needs meaningful commit messages that document changes and improvements. ",(0,r.jsx)(n.strong,{children:"Alias strategy"})," should establish clear alias purposes like production, staging, and development."]}),"\n",(0,r.jsx)(n.h3,{id:"template-design",children:"Template Design"}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Variable design"})," should use descriptive variable names that clearly indicate expected content. ",(0,r.jsx)(n.strong,{children:"Documentation"})," must include inline comments and comprehensive metadata for template usage. ",(0,r.jsx)(n.strong,{children:"Modularity"})," can break complex prompts into reusable components where possible. ",(0,r.jsx)(n.strong,{children:"Testing"})," requires systematic validation across different input scenarios and edge cases."]}),"\n",(0,r.jsx)(n.h3,{id:"lifecycle-management",children:"Lifecycle Management"}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Version planning"})," should establish clear criteria for creating new versions versus minor updates. ",(0,r.jsx)(n.strong,{children:"Performance tracking"})," needs monitoring of prompt effectiveness and user satisfaction metrics. ",(0,r.jsx)(n.strong,{children:"Deployment coordination"})," requires synchronized alias updates across environments. ",(0,r.jsx)(n.strong,{children:"Archive management"})," should establish policies for managing old versions and cleanup procedures."]}),"\n",(0,r.jsx)(n.h2,{id:"getting-started-with-prompt-registry",children:"Getting Started with Prompt Registry"}),"\n",(0,r.jsx)(n.p,{children:"Creating and managing prompts involves several key steps:"}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Register your first prompt"})," using ",(0,r.jsx)(i.B,{fn:"mlflow.genai.register_prompt"})," with comprehensive metadata and clear commit messages. ",(0,r.jsx)(n.strong,{children:"Establish version workflow"})," by creating new versions for significant changes and using descriptive commit messages. ",(0,r.jsx)(n.strong,{children:"Implement alias strategy"})," by setting up aliases for different environments and use cases. ",(0,r.jsx)(n.strong,{children:"Integrate with applications"})," by loading prompts via ",(0,r.jsx)(i.B,{fn:"mlflow.genai.load_prompt"})," and formatting with dynamic variables."]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-python",children:'# Complete workflow example\nimport mlflow\n\n# 1. Register initial prompt\nprompt = mlflow.genai.register_prompt(\n    name="customer-support",\n    template="You are a helpful {{ role }}. Please {{ action }} for: {{ query }}",\n    commit_message="Initial customer support template",\n    tags={"domain": "support", "language": "en"},\n)\n\n# 2. Create production alias\nmlflow.set_registered_prompt_alias("customer-support", "production", 1)\n\n# 3. Load and use in application\nproduction_prompt = mlflow.genai.load_prompt("prompts:/customer-support@production")\nformatted = production_prompt.format(\n    role="customer service agent",\n    action="provide assistance",\n    query="How do I reset my password?",\n)\n'})}),"\n",(0,r.jsx)(n.h2,{id:"next-steps",children:"Next Steps"}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:(0,r.jsx)(n.a,{href:"/genai/prompt-version-mgmt/prompt-registry/",children:"Prompt Management Guide"})})," provides comprehensive guidance on creating, versioning, and managing prompts effectively. ",(0,r.jsx)(n.strong,{children:(0,r.jsx)(n.a,{href:"/genai/tracing/observe-with-traces/ui",children:"MLflow UI Navigation"})})," helps you master the interface for exploring and managing prompts."]}),"\n",(0,r.jsx)(n.p,{children:"MLflow Prompt Registry provides the essential framework for systematic prompt engineering, enabling teams to build, version, and deploy high-quality prompt templates with confidence and collaboration."})]})}function h(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(f,{...e})}):f(e)}},28453:(e,n,t)=>{t.d(n,{R:()=>i,x:()=>l});var a=t(96540);const r={},o=a.createContext(r);function i(e){const n=a.useContext(o);return a.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:i(e.components),a.createElement(o.Provider,{value:n},e.children)}},49374:(e,n,t)=>{t.d(n,{B:()=>s});t(96540);const a=JSON.parse('{"mlflow.anthropic":"api_reference/python_api/mlflow.anthropic.html","mlflow.artifacts":"api_reference/python_api/mlflow.artifacts.html","mlflow.ag2":"api_reference/python_api/mlflow.ag2.html","mlflow.autogen":"api_reference/python_api/mlflow.autogen.html","mlflow.bedrock":"api_reference/python_api/mlflow.bedrock.html","mlflow.catboost":"api_reference/python_api/mlflow.catboost.html","mlflow.client":"api_reference/python_api/mlflow.client.html","mlflow.config":"api_reference/python_api/mlflow.config.html","mlflow.crewai":"api_reference/python_api/mlflow.crewai.html","mlflow.data":"api_reference/python_api/mlflow.data.html","mlflow.deployments":"api_reference/python_api/mlflow.deployments.html","mlflow.diviner":"api_reference/python_api/mlflow.diviner.html","mlflow.dspy":"api_reference/python_api/mlflow.dspy.html","mlflow.entities":"api_reference/python_api/mlflow.entities.html","mlflow.environment_variables":"api_reference/python_api/mlflow.environment_variables.html","mlflow.gateway":"api_reference/python_api/mlflow.gateway.html","mlflow.gemini":"api_reference/python_api/mlflow.gemini.html","mlflow.groq":"api_reference/python_api/mlflow.groq.html","mlflow.h2o":"api_reference/python_api/mlflow.h2o.html","mlflow.johnsnowlabs":"api_reference/python_api/mlflow.johnsnowlabs.html","mlflow.keras":"api_reference/python_api/mlflow.keras.html","mlflow.langchain":"api_reference/python_api/mlflow.langchain.html","mlflow.lightgbm":"api_reference/python_api/mlflow.lightgbm.html","mlflow.litellm":"api_reference/python_api/mlflow.litellm.html","mlflow.llama_index":"api_reference/python_api/mlflow.llama_index.html","mlflow.metrics":"api_reference/python_api/mlflow.metrics.html","mlflow.mistral":"api_reference/python_api/mlflow.mistral.html","mlflow.models":"api_reference/python_api/mlflow.models.html","mlflow.onnx":"api_reference/python_api/mlflow.onnx.html","mlflow.openai":"api_reference/python_api/mlflow.openai.html","mlflow.paddle":"api_reference/python_api/mlflow.paddle.html","mlflow.pmdarima":"api_reference/python_api/mlflow.pmdarima.html","mlflow.projects":"api_reference/python_api/mlflow.projects.html","mlflow.promptflow":"api_reference/python_api/mlflow.promptflow.html","mlflow.prophet":"api_reference/python_api/mlflow.prophet.html","mlflow.pyfunc":"api_reference/python_api/mlflow.pyfunc.html","mlflow.pyspark.ml":"api_reference/python_api/mlflow.pyspark.ml.html","mlflow.pytorch":"api_reference/python_api/mlflow.pytorch.html","mlflow":"api_reference/python_api/mlflow.html","mlflow.sagemaker":"api_reference/python_api/mlflow.sagemaker.html","mlflow.sentence_transformers":"api_reference/python_api/mlflow.sentence_transformers.html","mlflow.server":"api_reference/python_api/mlflow.server.html","mlflow.shap":"api_reference/python_api/mlflow.shap.html","mlflow.sklearn":"api_reference/python_api/mlflow.sklearn.html","mlflow.spacy":"api_reference/python_api/mlflow.spacy.html","mlflow.spark":"api_reference/python_api/mlflow.spark.html","mlflow.statsmodels":"api_reference/python_api/mlflow.statsmodels.html","mlflow.system_metrics":"api_reference/python_api/mlflow.system_metrics.html","mlflow.tensorflow":"api_reference/python_api/mlflow.tensorflow.html","mlflow.tracing":"api_reference/python_api/mlflow.tracing.html","mlflow.transformers":"api_reference/python_api/mlflow.transformers.html","mlflow.types":"api_reference/python_api/mlflow.types.html","mlflow.utils":"api_reference/python_api/mlflow.utils.html","mlflow.xgboost":"api_reference/python_api/mlflow.xgboost.html","mlflow.server.auth":"api_reference/auth/python-api.html"}');var r=t(86025),o=t(28774),i=t(74848);const l=e=>{const n=e.split(".");for(let t=n.length;t>0;t--){const e=n.slice(0,t).join(".");if(a[e])return e}return null};function s({fn:e,children:n}){const t=l(e);if(!t)return(0,i.jsx)(i.Fragment,{children:n});const s=(0,r.Ay)(`/${a[t]}#${e}`);return(0,i.jsx)(o.A,{to:s,target:"_blank",children:n??(0,i.jsxs)("code",{children:[e,"()"]})})}}}]);