/*! For license information please see d5706f3a.8444fef6.js.LICENSE.txt */
"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[4955],{6789:(e,n,a)=>{a.d(n,{A:()=>c});a(96540);var t=a(28774),r=a(34164);const i={tileCard:"tileCard_NHsj",tileIcon:"tileIcon_pyoR",tileLink:"tileLink_iUbu",tileImage:"tileImage_O4So"};var o=a(86025),s=a(21122),l=a(74848);function c({icon:e,image:n,imageDark:a,imageWidth:c,imageHeight:d,iconSize:u=32,containerHeight:p,title:h,description:m,href:g,linkText:f="Learn more \u2192",className:v}){if(!e&&!n)throw new Error("TileCard requires either an icon or image prop");const y=p?{height:`${p}px`}:{},x={};return c&&(x.width=`${c}px`),d&&(x.height=`${d}px`),(0,l.jsxs)(t.A,{href:g,className:(0,r.A)(i.tileCard,v),children:[(0,l.jsx)("div",{className:i.tileIcon,style:y,children:e?(0,l.jsx)(e,{size:u}):a?(0,l.jsx)(s.A,{sources:{light:(0,o.Ay)(n),dark:(0,o.Ay)(a)},alt:h,className:i.tileImage,style:x}):(0,l.jsx)("img",{src:(0,o.Ay)(n),alt:h,className:i.tileImage,style:x})}),(0,l.jsx)("h3",{children:h}),(0,l.jsx)("p",{children:m}),(0,l.jsx)("div",{className:i.tileLink,children:f})]})}},11470:(e,n,a)=>{a.d(n,{A:()=>b});var t=a(96540),r=a(34164),i=a(23104),o=a(56347),s=a(205),l=a(57485),c=a(31682),d=a(70679);function u(e){return t.Children.toArray(e).filter(e=>"\n"!==e).map(e=>{if(!e||(0,t.isValidElement)(e)&&function(e){const{props:n}=e;return!!n&&"object"==typeof n&&"value"in n}(e))return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)})?.filter(Boolean)??[]}function p(e){const{values:n,children:a}=e;return(0,t.useMemo)(()=>{const e=n??function(e){return u(e).map(({props:{value:e,label:n,attributes:a,default:t}})=>({value:e,label:n,attributes:a,default:t}))}(a);return function(e){const n=(0,c.XI)(e,(e,n)=>e.value===n.value);if(n.length>0)throw new Error(`Docusaurus error: Duplicate values "${n.map(e=>e.value).join(", ")}" found in <Tabs>. Every value needs to be unique.`)}(e),e},[n,a])}function h({value:e,tabValues:n}){return n.some(n=>n.value===e)}function m({queryString:e=!1,groupId:n}){const a=(0,o.W6)(),r=function({queryString:e=!1,groupId:n}){if("string"==typeof e)return e;if(!1===e)return null;if(!0===e&&!n)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return n??null}({queryString:e,groupId:n});return[(0,l.aZ)(r),(0,t.useCallback)(e=>{if(!r)return;const n=new URLSearchParams(a.location.search);n.set(r,e),a.replace({...a.location,search:n.toString()})},[r,a])]}function g(e){const{defaultValue:n,queryString:a=!1,groupId:r}=e,i=p(e),[o,l]=(0,t.useState)(()=>function({defaultValue:e,tabValues:n}){if(0===n.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(e){if(!h({value:e,tabValues:n}))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${e}" but none of its children has the corresponding value. Available values are: ${n.map(e=>e.value).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return e}const a=n.find(e=>e.default)??n[0];if(!a)throw new Error("Unexpected error: 0 tabValues");return a.value}({defaultValue:n,tabValues:i})),[c,u]=m({queryString:a,groupId:r}),[g,f]=function({groupId:e}){const n=function(e){return e?`docusaurus.tab.${e}`:null}(e),[a,r]=(0,d.Dv)(n);return[a,(0,t.useCallback)(e=>{n&&r.set(e)},[n,r])]}({groupId:r}),v=(()=>{const e=c??g;return h({value:e,tabValues:i})?e:null})();(0,s.A)(()=>{v&&l(v)},[v]);return{selectedValue:o,selectValue:(0,t.useCallback)(e=>{if(!h({value:e,tabValues:i}))throw new Error(`Can't select invalid tab value=${e}`);l(e),u(e),f(e)},[u,f,i]),tabValues:i}}var f=a(92303);const v={tabList:"tabList__CuJ",tabItem:"tabItem_LNqP"};var y=a(74848);function x({className:e,block:n,selectedValue:a,selectValue:t,tabValues:o}){const s=[],{blockElementScrollPositionUntilNextRender:l}=(0,i.a_)(),c=e=>{const n=e.currentTarget,r=s.indexOf(n),i=o[r].value;i!==a&&(l(n),t(i))},d=e=>{let n=null;switch(e.key){case"Enter":c(e);break;case"ArrowRight":{const a=s.indexOf(e.currentTarget)+1;n=s[a]??s[0];break}case"ArrowLeft":{const a=s.indexOf(e.currentTarget)-1;n=s[a]??s[s.length-1];break}}n?.focus()};return(0,y.jsx)("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,r.A)("tabs",{"tabs--block":n},e),children:o.map(({value:e,label:n,attributes:t})=>(0,y.jsx)("li",{role:"tab",tabIndex:a===e?0:-1,"aria-selected":a===e,ref:e=>{s.push(e)},onKeyDown:d,onClick:c,...t,className:(0,r.A)("tabs__item",v.tabItem,t?.className,{"tabs__item--active":a===e}),children:n??e},e))})}function A({lazy:e,children:n,selectedValue:a}){const i=(Array.isArray(n)?n:[n]).filter(Boolean);if(e){const e=i.find(e=>e.props.value===a);return e?(0,t.cloneElement)(e,{className:(0,r.A)("margin-top--md",e.props.className)}):null}return(0,y.jsx)("div",{className:"margin-top--md",children:i.map((e,n)=>(0,t.cloneElement)(e,{key:n,hidden:e.props.value!==a}))})}function _(e){const n=g(e);return(0,y.jsxs)("div",{className:(0,r.A)("tabs-container",v.tabList),children:[(0,y.jsx)(x,{...n,...e}),(0,y.jsx)(A,{...n,...e})]})}function b(e){const n=(0,f.A)();return(0,y.jsx)(_,{...e,children:u(e.children)},String(n))}},19365:(e,n,a)=>{a.d(n,{A:()=>o});a(96540);var t=a(34164);const r={tabItem:"tabItem_Ymn6"};var i=a(74848);function o({children:e,hidden:n,className:a}){return(0,i.jsx)("div",{role:"tabpanel",className:(0,t.A)(r.tabItem,a),hidden:n,children:e})}},28453:(e,n,a)=>{a.d(n,{R:()=>o,x:()=>s});var t=a(96540);const r={},i=t.createContext(r);function o(e){const n=t.useContext(i);return t.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function s(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:o(e.components),t.createElement(i.Provider,{value:n},e.children)}},30997:(e,n,a)=>{a.r(n),a.d(n,{assets:()=>f,contentTitle:()=>g,default:()=>x,frontMatter:()=>m,metadata:()=>t,toc:()=>v});const t=JSON.parse('{"id":"governance/ai-gateway/configuration","title":"AI Gateway Configuration","description":"Configure providers, endpoints, and advanced settings for your MLflow AI Gateway.","source":"@site/docs/genai/governance/ai-gateway/configuration.mdx","sourceDirName":"governance/ai-gateway","slug":"/governance/ai-gateway/configuration","permalink":"/mlflow-website/docs/latest/genai/governance/ai-gateway/configuration","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{},"sidebar":"genAISidebar","previous":{"title":"Setup","permalink":"/mlflow-website/docs/latest/genai/governance/ai-gateway/setup"},"next":{"title":"Usage","permalink":"/mlflow-website/docs/latest/genai/governance/ai-gateway/usage"}}');var r=a(74848),i=a(28453),o=a(47020),s=a(11470),l=a(19365),c=a(65592),d=a(6789),u=a(85731),p=a(46816),h=a(45244);const m={},g="AI Gateway Configuration",f={},v=[{value:"Provider Configurations",id:"provider-configurations",level:2},{value:"Environment Variables",id:"environment-variables",level:2},{value:"Advanced Configuration",id:"advanced-configuration",level:2},{value:"Rate Limiting",id:"rate-limiting",level:3},{value:"Model Parameters",id:"model-parameters",level:3},{value:"Multiple Endpoints",id:"multiple-endpoints",level:3},{value:"Dynamic Configuration Updates",id:"dynamic-configuration-updates",level:2},{value:"Security Best Practices",id:"security-best-practices",level:2},{value:"API Key Management",id:"api-key-management",level:3},{value:"Network Security",id:"network-security",level:3},{value:"Configuration Security",id:"configuration-security",level:3},{value:"Next Steps",id:"next-steps",level:2}];function y(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",...(0,i.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.header,{children:(0,r.jsx)(n.h1,{id:"ai-gateway-configuration",children:"AI Gateway Configuration"})}),"\n","\n",(0,r.jsx)(n.p,{children:"Configure providers, endpoints, and advanced settings for your MLflow AI Gateway."}),"\n",(0,r.jsx)(n.h2,{id:"provider-configurations",children:"Provider Configurations"}),"\n",(0,r.jsx)(n.p,{children:"Configure endpoints for different LLM providers using these YAML examples:"}),"\n",(0,r.jsx)(o.A,{children:(0,r.jsxs)(s.A,{children:[(0,r.jsx)(l.A,{value:"openai",label:"OpenAI",default:!0,children:(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-yaml",children:"endpoints:\n  - name: gpt4-chat\n    endpoint_type: llm/v1/chat\n    model:\n      provider: openai\n      name: gpt-4\n      config:\n        openai_api_key: $OPENAI_API_KEY\n        openai_api_base: https://api.openai.com/v1  # Optional\n        openai_organization: your_org_id  # Optional\n"})})}),(0,r.jsx)(l.A,{value:"azure",label:"Azure OpenAI",children:(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-yaml",children:'endpoints:\n  - name: azure-chat\n    endpoint_type: llm/v1/chat\n    model:\n      provider: azuread\n      name: gpt-35-turbo\n      config:\n        openai_api_key: $AZURE_OPENAI_API_KEY\n        openai_api_base: https://your-resource.openai.azure.com/\n        openai_api_version: "2023-05-15"\n        openai_deployment_name: your-deployment-name\n'})})}),(0,r.jsx)(l.A,{value:"anthropic",label:"Anthropic",children:(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-yaml",children:"endpoints:\n  - name: claude-chat\n    endpoint_type: llm/v1/chat\n    model:\n      provider: anthropic\n      name: claude-2\n      config:\n        anthropic_api_key: $ANTHROPIC_API_KEY\n"})})}),(0,r.jsx)(l.A,{value:"bedrock",label:"AWS Bedrock",children:(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-yaml",children:"endpoints:\n  - name: bedrock-chat\n    endpoint_type: llm/v1/chat\n    model:\n      provider: bedrock\n      name: anthropic.claude-instant-v1\n      config:\n        aws_config:\n          aws_access_key_id: $AWS_ACCESS_KEY_ID\n          aws_secret_access_key: $AWS_SECRET_ACCESS_KEY\n          aws_region: us-east-1\n"})})}),(0,r.jsx)(l.A,{value:"cohere",label:"Cohere",children:(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-yaml",children:"endpoints:\n  - name: cohere-completions\n    endpoint_type: llm/v1/completions\n    model:\n      provider: cohere\n      name: command\n      config:\n        cohere_api_key: $COHERE_API_KEY\n\n  - name: cohere-embeddings\n    endpoint_type: llm/v1/embeddings\n    model:\n      provider: cohere\n      name: embed-english-v2.0\n      config:\n        cohere_api_key: $COHERE_API_KEY\n"})})}),(0,r.jsx)(l.A,{value:"mosaicai",label:"MosaicAI",children:(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-yaml",children:"endpoints:\n  - name: mosaicai-chat\n    endpoint_type: llm/v1/chat\n    model:\n      provider: mosaicai\n      name: llama2-70b-chat\n      config:\n        mosaicai_api_key: $MOSAICAI_API_KEY\n"})})}),(0,r.jsxs)(l.A,{value:"databricks",label:"Databricks",children:[(0,r.jsxs)(n.p,{children:["Databricks ",(0,r.jsx)(n.a,{href:"https://docs.databricks.com/aws/en/machine-learning/foundation-model-apis/",children:"Foundation Models APIs"})," are compatible with the OpenAI Chat Completions API, so you can use them with ",(0,r.jsx)(n.code,{children:"openai"})," provider in the AI Gateway. Specify the endpoint name (e.g., ",(0,r.jsx)(n.code,{children:"databricks-claude-sonnet-4"}),") in the ",(0,r.jsx)(n.code,{children:"name"})," field and set the host and token as OpenAI API key and base URL respectively."]}),(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-yaml",children:"endpoints:\n  - name: databricks-chat\n    endpoint_type: llm/v1/chat\n    model:\n      provider: openai\n      name: databricks-claude-sonnet-4\n      config:\n        openai_api_key: $DATABRICKS_TOKEN\n        openai_api_base: https://your-workspace.cloud.databricks.com/serving-endpoints/  # Replace with your Databricks workspace URL\n"})})]}),(0,r.jsx)(l.A,{value:"mlflow",label:"MLflow Models",children:(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-yaml",children:"endpoints:\n  - name: custom-model\n    endpoint_type: llm/v1/chat\n    model:\n      provider: mlflow-model-serving\n      name: my-model\n      config:\n        model_server_url: http://localhost:5001\n"})})})]})}),"\n",(0,r.jsx)(n.h2,{id:"environment-variables",children:"Environment Variables"}),"\n",(0,r.jsx)(n.p,{children:"Store API keys as environment variables for security:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"# OpenAI\nexport OPENAI_API_KEY=sk-...\n\n# Azure OpenAI\nexport AZURE_OPENAI_API_KEY=your-azure-key\nexport AZURE_OPENAI_ENDPOINT=https://your-resource.openai.azure.com/\n\n# Anthropic\nexport ANTHROPIC_API_KEY=sk-ant-...\n\n# AWS Bedrock\nexport AWS_ACCESS_KEY_ID=AKIA...\nexport AWS_SECRET_ACCESS_KEY=...\nexport AWS_REGION=us-east-1\n\n# Cohere\nexport COHERE_API_KEY=...\n"})}),"\n",(0,r.jsx)(n.h2,{id:"advanced-configuration",children:"Advanced Configuration"}),"\n",(0,r.jsx)(n.h3,{id:"rate-limiting",children:"Rate Limiting"}),"\n",(0,r.jsx)(n.p,{children:"Configure rate limits per endpoint:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-yaml",children:"endpoints:\n  - name: rate-limited-chat\n    endpoint_type: llm/v1/chat\n    model:\n      provider: openai\n      name: gpt-3.5-turbo\n      config:\n        openai_api_key: $OPENAI_API_KEY\n    limit:\n      renewal_period: minute\n      calls: 100  # max calls per renewal period\n"})}),"\n",(0,r.jsx)(n.h3,{id:"model-parameters",children:"Model Parameters"}),"\n",(0,r.jsx)(n.p,{children:"Set default model parameters:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-yaml",children:"endpoints:\n  - name: configured-chat\n    endpoint_type: llm/v1/chat\n    model:\n      provider: openai\n      name: gpt-3.5-turbo\n      config:\n        openai_api_key: $OPENAI_API_KEY\n        temperature: 0.7\n        max_tokens: 1000\n        top_p: 0.9\n"})}),"\n",(0,r.jsx)(n.h3,{id:"multiple-endpoints",children:"Multiple Endpoints"}),"\n",(0,r.jsx)(n.p,{children:"Configure multiple endpoints for different use cases:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-yaml",children:"endpoints:\n  # Fast, cost-effective endpoint\n  - name: fast-chat\n    endpoint_type: llm/v1/chat\n    model:\n      provider: openai\n      name: gpt-3.5-turbo\n      config:\n        openai_api_key: $OPENAI_API_KEY\n\n  # High-quality endpoint\n  - name: quality-chat\n    endpoint_type: llm/v1/chat\n    model:\n      provider: openai\n      name: gpt-4\n      config:\n        openai_api_key: $OPENAI_API_KEY\n\n  # Embeddings endpoint\n  - name: embeddings\n    endpoint_type: llm/v1/embeddings\n    model:\n      provider: openai\n      name: text-embedding-ada-002\n      config:\n        openai_api_key: $OPENAI_API_KEY\n"})}),"\n",(0,r.jsx)(n.h2,{id:"dynamic-configuration-updates",children:"Dynamic Configuration Updates"}),"\n",(0,r.jsx)(n.p,{children:"The AI Gateway supports hot-reloading of configurations without server restart. Simply update your config.yaml file and changes are detected automatically."}),"\n",(0,r.jsx)(n.h2,{id:"security-best-practices",children:"Security Best Practices"}),"\n",(0,r.jsx)(n.h3,{id:"api-key-management",children:"API Key Management"}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Never commit API keys"})," to version control"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Use environment variables"})," for all sensitive credentials"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Rotate keys regularly"})," and update environment variables"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Use separate keys"})," for development and production"]}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"network-security",children:"Network Security"}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Use HTTPS"})," in production with proper TLS certificates"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Implement authentication"})," and authorization layers"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Configure firewalls"})," to restrict access to the gateway"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Monitor and log"})," all gateway requests for audit trails"]}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"configuration-security",children:"Configuration Security"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-yaml",children:"# Secure configuration example\nendpoints:\n  - name: production-chat\n    endpoint_type: llm/v1/chat\n    model:\n      provider: openai\n      name: gpt-4\n      config:\n        openai_api_key: $OPENAI_API_KEY  # From environment\n    limit:\n      renewal_period: minute\n      calls: 1000\n"})}),"\n",(0,r.jsx)(n.h2,{id:"next-steps",children:"Next Steps"}),"\n",(0,r.jsx)(n.p,{children:"Now that your providers are configured, learn how to use and integrate your gateway:"}),"\n",(0,r.jsxs)(c.A,{children:[(0,r.jsx)(d.A,{icon:u.A,title:"Usage Guide",description:"Query endpoints with Python client and REST APIs",href:"/genai/governance/ai-gateway/usage",linkText:"Start using \u2192"}),(0,r.jsx)(d.A,{icon:p.A,title:"Integration Guide",description:"Integrate with applications, frameworks, and production systems",href:"/genai/governance/ai-gateway/integration",linkText:"Learn integrations \u2192"}),(0,r.jsx)(d.A,{icon:h.A,title:"Tutorial",description:"Step-by-step walkthrough with examples",href:"/genai/governance/ai-gateway/guides",linkText:"Follow tutorial \u2192"})]})]})}function x(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(y,{...e})}):y(e)}},45244:(e,n,a)=>{a.d(n,{A:()=>t});const t=(0,a(84722).A)("book",[["path",{d:"M4 19.5v-15A2.5 2.5 0 0 1 6.5 2H19a1 1 0 0 1 1 1v18a1 1 0 0 1-1 1H6.5a1 1 0 0 1 0-5H20",key:"k3hazp"}]])},46816:(e,n,a)=>{a.d(n,{A:()=>t});const t=(0,a(84722).A)("wrench",[["path",{d:"M14.7 6.3a1 1 0 0 0 0 1.4l1.6 1.6a1 1 0 0 0 1.4 0l3.77-3.77a6 6 0 0 1-7.94 7.94l-6.91 6.91a2.12 2.12 0 0 1-3-3l6.91-6.91a6 6 0 0 1 7.94-7.94l-3.76 3.76z",key:"cbrjhi"}]])},47020:(e,n,a)=>{a.d(n,{A:()=>i});a(96540);const t={wrapper:"wrapper_sf5q"};var r=a(74848);function i({children:e}){return(0,r.jsx)("div",{className:t.wrapper,children:e})}},65592:(e,n,a)=>{a.d(n,{A:()=>o});a(96540);var t=a(34164);const r={tilesGrid:"tilesGrid_hB9N"};var i=a(74848);function o({children:e,className:n}){return(0,i.jsx)("div",{className:(0,t.A)(r.tilesGrid,n),children:e})}},84722:(e,n,a)=>{a.d(n,{A:()=>c});var t=a(96540);const r=e=>{const n=(e=>e.replace(/^([A-Z])|[\s-_]+(\w)/g,(e,n,a)=>a?a.toUpperCase():n.toLowerCase()))(e);return n.charAt(0).toUpperCase()+n.slice(1)},i=(...e)=>e.filter((e,n,a)=>Boolean(e)&&""!==e.trim()&&a.indexOf(e)===n).join(" ").trim(),o=e=>{for(const n in e)if(n.startsWith("aria-")||"role"===n||"title"===n)return!0};var s={xmlns:"http://www.w3.org/2000/svg",width:24,height:24,viewBox:"0 0 24 24",fill:"none",stroke:"currentColor",strokeWidth:2,strokeLinecap:"round",strokeLinejoin:"round"};const l=(0,t.forwardRef)(({color:e="currentColor",size:n=24,strokeWidth:a=2,absoluteStrokeWidth:r,className:l="",children:c,iconNode:d,...u},p)=>(0,t.createElement)("svg",{ref:p,...s,width:n,height:n,stroke:e,strokeWidth:r?24*Number(a)/Number(n):a,className:i("lucide",l),...!c&&!o(u)&&{"aria-hidden":"true"},...u},[...d.map(([e,n])=>(0,t.createElement)(e,n)),...Array.isArray(c)?c:[c]])),c=(e,n)=>{const a=(0,t.forwardRef)(({className:a,...o},s)=>{return(0,t.createElement)(l,{ref:s,iconNode:n,className:i(`lucide-${c=r(e),c.replace(/([a-z0-9])([A-Z])/g,"$1-$2").toLowerCase()}`,`lucide-${e}`,a),...o});var c});return a.displayName=r(e),a}},85731:(e,n,a)=>{a.d(n,{A:()=>t});const t=(0,a(84722).A)("play",[["polygon",{points:"6 3 20 12 6 21 6 3",key:"1oa8hb"}]])}}]);