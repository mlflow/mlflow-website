"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[9928],{2371:(e,t,n)=>{n.d(t,{A:()=>r});const r=n.p+"assets/images/compare-prompt-versions-2082121aeaca4be99a0cf968535141ed.png"},11470:(e,t,n)=>{n.d(t,{A:()=>x});var r=n(96540),a=n(34164),o=n(23104),l=n(56347),i=n(205),s=n(57485),p=n(31682),m=n(70679);function c(e){return r.Children.toArray(e).filter(e=>"\n"!==e).map(e=>{if(!e||(0,r.isValidElement)(e)&&function(e){const{props:t}=e;return!!t&&"object"==typeof t&&"value"in t}(e))return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)})?.filter(Boolean)??[]}function h(e){const{values:t,children:n}=e;return(0,r.useMemo)(()=>{const e=t??function(e){return c(e).map(({props:{value:e,label:t,attributes:n,default:r}})=>({value:e,label:t,attributes:n,default:r}))}(n);return function(e){const t=(0,p.XI)(e,(e,t)=>e.value===t.value);if(t.length>0)throw new Error(`Docusaurus error: Duplicate values "${t.map(e=>e.value).join(", ")}" found in <Tabs>. Every value needs to be unique.`)}(e),e},[t,n])}function f({value:e,tabValues:t}){return t.some(t=>t.value===e)}function d({queryString:e=!1,groupId:t}){const n=(0,l.W6)(),a=function({queryString:e=!1,groupId:t}){if("string"==typeof e)return e;if(!1===e)return null;if(!0===e&&!t)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return t??null}({queryString:e,groupId:t});return[(0,s.aZ)(a),(0,r.useCallback)(e=>{if(!a)return;const t=new URLSearchParams(n.location.search);t.set(a,e),n.replace({...n.location,search:t.toString()})},[a,n])]}function u(e){const{defaultValue:t,queryString:n=!1,groupId:a}=e,o=h(e),[l,s]=(0,r.useState)(()=>function({defaultValue:e,tabValues:t}){if(0===t.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(e){if(!f({value:e,tabValues:t}))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${e}" but none of its children has the corresponding value. Available values are: ${t.map(e=>e.value).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return e}const n=t.find(e=>e.default)??t[0];if(!n)throw new Error("Unexpected error: 0 tabValues");return n.value}({defaultValue:t,tabValues:o})),[p,c]=d({queryString:n,groupId:a}),[u,w]=function({groupId:e}){const t=function(e){return e?`docusaurus.tab.${e}`:null}(e),[n,a]=(0,m.Dv)(t);return[n,(0,r.useCallback)(e=>{t&&a.set(e)},[t,a])]}({groupId:a}),g=(()=>{const e=p??u;return f({value:e,tabValues:o})?e:null})();(0,i.A)(()=>{g&&s(g)},[g]);return{selectedValue:l,selectValue:(0,r.useCallback)(e=>{if(!f({value:e,tabValues:o}))throw new Error(`Can't select invalid tab value=${e}`);s(e),c(e),w(e)},[c,w,o]),tabValues:o}}var w=n(92303);const g={tabList:"tabList__CuJ",tabItem:"tabItem_LNqP"};var y=n(74848);function _({className:e,block:t,selectedValue:n,selectValue:r,tabValues:l}){const i=[],{blockElementScrollPositionUntilNextRender:s}=(0,o.a_)(),p=e=>{const t=e.currentTarget,a=i.indexOf(t),o=l[a].value;o!==n&&(s(t),r(o))},m=e=>{let t=null;switch(e.key){case"Enter":p(e);break;case"ArrowRight":{const n=i.indexOf(e.currentTarget)+1;t=i[n]??i[0];break}case"ArrowLeft":{const n=i.indexOf(e.currentTarget)-1;t=i[n]??i[i.length-1];break}}t?.focus()};return(0,y.jsx)("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,a.A)("tabs",{"tabs--block":t},e),children:l.map(({value:e,label:t,attributes:r})=>(0,y.jsx)("li",{role:"tab",tabIndex:n===e?0:-1,"aria-selected":n===e,ref:e=>{i.push(e)},onKeyDown:m,onClick:p,...r,className:(0,a.A)("tabs__item",g.tabItem,r?.className,{"tabs__item--active":n===e}),children:t??e},e))})}function v({lazy:e,children:t,selectedValue:n}){const o=(Array.isArray(t)?t:[t]).filter(Boolean);if(e){const e=o.find(e=>e.props.value===n);return e?(0,r.cloneElement)(e,{className:(0,a.A)("margin-top--md",e.props.className)}):null}return(0,y.jsx)("div",{className:"margin-top--md",children:o.map((e,t)=>(0,r.cloneElement)(e,{key:t,hidden:e.props.value!==n}))})}function b(e){const t=u(e);return(0,y.jsxs)("div",{className:(0,a.A)("tabs-container",g.tabList),children:[(0,y.jsx)(_,{...t,...e}),(0,y.jsx)(v,{...t,...e})]})}function x(e){const t=(0,w.A)();return(0,y.jsx)(b,{...e,children:c(e.children)},String(t))}},19365:(e,t,n)=>{n.d(t,{A:()=>l});n(96540);var r=n(34164);const a={tabItem:"tabItem_Ymn6"};var o=n(74848);function l({children:e,hidden:t,className:n}){return(0,o.jsx)("div",{role:"tabpanel",className:(0,r.A)(a.tabItem,n),hidden:t,children:e})}},28453:(e,t,n)=>{n.d(t,{R:()=>l,x:()=>i});var r=n(96540);const a={},o=r.createContext(a);function l(e){const t=r.useContext(o);return r.useMemo(function(){return"function"==typeof e?e(t):{...t,...e}},[t,e])}function i(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:l(e.components),r.createElement(o.Provider,{value:t},e.children)}},29483:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>h,contentTitle:()=>c,default:()=>u,frontMatter:()=>m,metadata:()=>r,toc:()=>f});const r=JSON.parse('{"id":"prompt-registry/create-and-edit-prompts","title":"Create and Edit Prompts","description":"Learn how to create new prompts and edit existing ones in the MLflow Prompt Registry using both the UI and Python APIs.","source":"@site/docs/genai/prompt-registry/create-and-edit-prompts.mdx","sourceDirName":"prompt-registry","slug":"/prompt-registry/create-and-edit-prompts","permalink":"/mlflow-website/docs/latest/genai/prompt-registry/create-and-edit-prompts","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{"title":"Create and Edit Prompts","description":"Learn how to create new prompts and edit existing ones in the MLflow Prompt Registry using both the UI and Python APIs."},"sidebar":"genAISidebar","previous":{"title":"Prompt Registry","permalink":"/mlflow-website/docs/latest/genai/prompt-registry/"},"next":{"title":"Evaluating Prompts","permalink":"/mlflow-website/docs/latest/genai/prompt-registry/evaluate-prompts"}}');var a=n(74848),o=n(28453),l=n(11470),i=n(19365),s=n(49374),p=n(47020);const m={title:"Create and Edit Prompts",description:"Learn how to create new prompts and edit existing ones in the MLflow Prompt Registry using both the UI and Python APIs."},c="Create and Edit Prompts",h={},f=[{value:"Creating a New Prompt",id:"creating-a-new-prompt",level:2},{value:"Editing an Existing Prompt (Creating New Versions)",id:"editing-an-existing-prompt-creating-new-versions",level:2},{value:"Understanding Immutability",id:"understanding-immutability",level:2},{value:"Comparing Prompt Versions",id:"comparing-prompt-versions",level:2}];function d(e){const t={code:"code",em:"em",h1:"h1",h2:"h2",header:"header",img:"img",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",...(0,o.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(t.header,{children:(0,a.jsx)(t.h1,{id:"create-and-edit-prompts",children:"Create and Edit Prompts"})}),"\n",(0,a.jsx)(t.p,{children:"This guide walks you through the process of creating new prompts and managing their versions within the MLflow Prompt Registry."}),"\n",(0,a.jsx)(t.h2,{id:"creating-a-new-prompt",children:"Creating a New Prompt"}),"\n",(0,a.jsx)(t.p,{children:"You can initiate a new prompt in the MLflow Prompt Registry in two primary ways: through the MLflow UI or programmatically using the Python SDK."}),"\n",(0,a.jsx)(p.A,{children:(0,a.jsxs)(l.A,{children:[(0,a.jsx)(i.A,{value:"ui",label:"UI",default:!0,children:(0,a.jsxs)("div",{class:"flex-column",children:[(0,a.jsxs)(t.ol,{children:["\n",(0,a.jsx)(t.li,{children:"Navigate to the Prompt Registry section in your MLflow instance."}),"\n",(0,a.jsx)(t.li,{children:'Click on the "Create Prompt" (or similar) button.'}),"\n",(0,a.jsx)(t.li,{children:"Fill in the prompt details such as name, prompt template text, and commit message (optional)"}),"\n"]}),(0,a.jsx)(t.p,{children:(0,a.jsx)(t.img,{alt:"Registered Prompt in UI",src:n(72406).A+"",width:"1287",height:"616"})})]})}),(0,a.jsx)(i.A,{value:"python",label:"Python",children:(0,a.jsxs)("div",{class:"flex-column",children:[(0,a.jsxs)(t.p,{children:["To create a new prompt programmatically, use the ",(0,a.jsx)(s.B,{fn:"mlflow.genai.register_prompt"})," function. This is particularly useful for automating prompt creation or managing prompts as part of a larger script."]}),(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-python",children:'import mlflow\n\n# Use double curly braces for variables in the template\ninitial_template = """\\\nSummarize content you are provided with in {{ num_sentences }} sentences.\n\nSentences: {{ sentences }}\n"""\n\n# Chat Style template\ninitial_template = [\n    {\n        "role": "system",\n        "content": "Summarize content you are provided with in {{ num_sentences }} sentences.",\n    },\n    {"role": "user", "content": "Sentences: {{ sentences }}"},\n]\n\n# Optional Response Format\nfrom pydantic import BaseModel, Field\n\n\nclass ResponseFormat:\n    summary: str = Field(..., description="Summary of the content")\n\n\n# Register a new prompt\nprompt = mlflow.genai.register_prompt(\n    name="summarization-prompt",\n    template=initial_template,\n    # Optional: Provide Response Format to get structured output\n    response_format=ResponseFormat,\n    # Optional: Provide a commit message to describe the changes\n    commit_message="Initial commit",\n    # Optional: Set tags applies to the prompt (across versions)\n    tags={\n        "author": "author@example.com",\n        "task": "summarization",\n        "language": "en",\n    },\n)\n\n# The prompt object contains information about the registered prompt\nprint(f"Created prompt \'{prompt.name}\' (version {prompt.version})")\n'})})]})})]})}),"\n",(0,a.jsx)(t.h2,{id:"editing-an-existing-prompt-creating-new-versions",children:"Editing an Existing Prompt (Creating New Versions)"}),"\n",(0,a.jsxs)(t.p,{children:["Once a prompt version is created, its template and initial metadata are ",(0,a.jsx)(t.strong,{children:"immutable"}),". Editing an existing prompt means creating a ",(0,a.jsx)(t.em,{children:"new version"})," of that prompt with your changes. This Git-like behavior ensures a complete history and allows you to revert to previous versions if needed."]}),"\n",(0,a.jsx)(p.A,{children:(0,a.jsxs)(l.A,{children:[(0,a.jsx)(i.A,{value:"ui",label:"UI",default:!0,children:(0,a.jsxs)("div",{class:"flex-column",children:[(0,a.jsxs)(t.ol,{children:["\n",(0,a.jsx)(t.li,{children:"Navigate to the specific prompt you wish to edit in the Prompt Registry."}),"\n",(0,a.jsx)(t.li,{children:"Select the version you want to base your new version on (often the latest)."}),"\n",(0,a.jsx)(t.li,{children:'Look for an "Edit Prompt" or "Create New Version" button.'}),"\n",(0,a.jsx)(t.li,{children:"Modify the template, update metadata, or change tags as needed."}),"\n",(0,a.jsxs)(t.li,{children:["Provide a new ",(0,a.jsx)(t.strong,{children:"Commit Message"})," describing the changes you made for this new version."]}),"\n"]}),(0,a.jsx)(t.p,{children:(0,a.jsx)(t.img,{alt:"Update Prompt UI",src:n(53296).A+"",width:"1150",height:"594"})})]})}),(0,a.jsx)(i.A,{value:"python",label:"Python",children:(0,a.jsxs)("div",{class:"flex-column",children:[(0,a.jsxs)(t.p,{children:["To create a new version of an existing prompt, you again use the ",(0,a.jsx)(s.B,{fn:"mlflow.genai.register_prompt"})," function, but this time, you provide the ",(0,a.jsx)(t.code,{children:"name"})," of an existing prompt. MLflow will automatically increment the version number."]}),(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-python",children:'import mlflow\n\nnew_template = """\\\nYou are an expert summarizer. Condense the following content into exactly {{ num_sentences }} clear and informative sentences that capture the key points.\n\nSentences: {{ sentences }}\n\nYour summary should:\n- Contain exactly {{ num_sentences }} sentences\n- Include only the most important information\n- Be written in a neutral, objective tone\n- Maintain the same level of formality as the original text\n"""\n\n# Register a new version of an existing prompt\nupdated_prompt = mlflow.genai.register_prompt(\n    name="summarization-prompt",  # Specify the existing prompt name\n    template=new_template,\n    commit_message="Improvement",\n    tags={\n        "author": "author@example.com",\n    },\n)\n'})})]})})]})}),"\n",(0,a.jsx)(t.h2,{id:"understanding-immutability",children:"Understanding Immutability"}),"\n",(0,a.jsxs)(t.p,{children:["It's crucial to remember that prompt versions in the MLflow Prompt Registry are immutable. Once ",(0,a.jsx)(t.code,{children:"mlflow.genai.register_prompt()"})," is called and a version is created (or a new version of an existing prompt is made), the template, initial commit message, and initial metadata for ",(0,a.jsx)(t.em,{children:"that specific version"})," cannot be altered. This design choice provides strong guarantees for reproducibility and lineage tracking."]}),"\n",(0,a.jsx)(t.p,{children:"If you need to change a prompt, you always create a new version."}),"\n",(0,a.jsx)(t.h2,{id:"comparing-prompt-versions",children:"Comparing Prompt Versions"}),"\n",(0,a.jsx)(t.p,{children:"The MLflow UI provides tools to compare different versions of a prompt. This typically includes a side-by-side diff view, allowing you to easily see what changed in the template text, metadata, or tags between versions."}),"\n",(0,a.jsx)(t.p,{children:(0,a.jsx)(t.img,{alt:"Compare Prompt Versions",src:n(2371).A+"",width:"1267",height:"713"})})]})}function u(e={}){const{wrapper:t}={...(0,o.R)(),...e.components};return t?(0,a.jsx)(t,{...e,children:(0,a.jsx)(d,{...e})}):d(e)}},47020:(e,t,n)=>{n.d(t,{A:()=>o});n(96540);const r={wrapper:"wrapper_sf5q"};var a=n(74848);function o({children:e}){return(0,a.jsx)("div",{className:r.wrapper,children:e})}},49374:(e,t,n)=>{n.d(t,{B:()=>i});n(96540);const r=JSON.parse('{"mlflow.ag2":"api_reference/python_api/mlflow.ag2.html","mlflow.anthropic":"api_reference/python_api/mlflow.anthropic.html","mlflow.artifacts":"api_reference/python_api/mlflow.artifacts.html","mlflow.autogen":"api_reference/python_api/mlflow.autogen.html","mlflow.bedrock":"api_reference/python_api/mlflow.bedrock.html","mlflow.catboost":"api_reference/python_api/mlflow.catboost.html","mlflow.client":"api_reference/python_api/mlflow.client.html","mlflow.config":"api_reference/python_api/mlflow.config.html","mlflow.crewai":"api_reference/python_api/mlflow.crewai.html","mlflow.data":"api_reference/python_api/mlflow.data.html","mlflow.deployments":"api_reference/python_api/mlflow.deployments.html","mlflow.diviner":"api_reference/python_api/mlflow.diviner.html","mlflow.dspy":"api_reference/python_api/mlflow.dspy.html","mlflow.entities":"api_reference/python_api/mlflow.entities.html","mlflow.environment_variables":"api_reference/python_api/mlflow.environment_variables.html","mlflow.gateway":"api_reference/python_api/mlflow.gateway.html","mlflow.gemini":"api_reference/python_api/mlflow.gemini.html","mlflow.genai":"api_reference/python_api/mlflow.genai.html","mlflow.groq":"api_reference/python_api/mlflow.groq.html","mlflow.h2o":"api_reference/python_api/mlflow.h2o.html","mlflow.johnsnowlabs":"api_reference/python_api/mlflow.johnsnowlabs.html","mlflow.keras":"api_reference/python_api/mlflow.keras.html","mlflow.langchain":"api_reference/python_api/mlflow.langchain.html","mlflow.lightgbm":"api_reference/python_api/mlflow.lightgbm.html","mlflow.litellm":"api_reference/python_api/mlflow.litellm.html","mlflow.llama_index":"api_reference/python_api/mlflow.llama_index.html","mlflow.metrics":"api_reference/python_api/mlflow.metrics.html","mlflow.mistral":"api_reference/python_api/mlflow.mistral.html","mlflow.models":"api_reference/python_api/mlflow.models.html","mlflow.onnx":"api_reference/python_api/mlflow.onnx.html","mlflow.openai":"api_reference/python_api/mlflow.openai.html","mlflow.paddle":"api_reference/python_api/mlflow.paddle.html","mlflow.pmdarima":"api_reference/python_api/mlflow.pmdarima.html","mlflow.projects":"api_reference/python_api/mlflow.projects.html","mlflow.promptflow":"api_reference/python_api/mlflow.promptflow.html","mlflow.prophet":"api_reference/python_api/mlflow.prophet.html","mlflow.pydantic_ai":"api_reference/python_api/mlflow.pydantic_ai.html","mlflow.pyfunc":"api_reference/python_api/mlflow.pyfunc.html","mlflow.pyspark.ml":"api_reference/python_api/mlflow.pyspark.ml.html","mlflow.pytorch":"api_reference/python_api/mlflow.pytorch.html","mlflow":"api_reference/python_api/mlflow.html","mlflow.sagemaker":"api_reference/python_api/mlflow.sagemaker.html","mlflow.sentence_transformers":"api_reference/python_api/mlflow.sentence_transformers.html","mlflow.server":"api_reference/python_api/mlflow.server.html","mlflow.shap":"api_reference/python_api/mlflow.shap.html","mlflow.sklearn":"api_reference/python_api/mlflow.sklearn.html","mlflow.smolagents":"api_reference/python_api/mlflow.smolagents.html","mlflow.spacy":"api_reference/python_api/mlflow.spacy.html","mlflow.spark":"api_reference/python_api/mlflow.spark.html","mlflow.statsmodels":"api_reference/python_api/mlflow.statsmodels.html","mlflow.system_metrics":"api_reference/python_api/mlflow.system_metrics.html","mlflow.tensorflow":"api_reference/python_api/mlflow.tensorflow.html","mlflow.tracing":"api_reference/python_api/mlflow.tracing.html","mlflow.transformers":"api_reference/python_api/mlflow.transformers.html","mlflow.types":"api_reference/python_api/mlflow.types.html","mlflow.utils":"api_reference/python_api/mlflow.utils.html","mlflow.xgboost":"api_reference/python_api/mlflow.xgboost.html","mlflow.server.auth":"api_reference/auth/python-api.html","mlflow.server.cli":"api_reference/cli.html","mlflow.r":"api_reference/R-api.html","mlflow.java":"api_reference/java_api/index.html","mlflow.python":"api_reference/python_api/index.html","mlflow.rest":"api_reference/rest-api.html","mlflow.llms.deployments.api":"api_reference/llms/deployments/api.html"}');var a=n(86025),o=n(74848);const l=e=>{const t=e.split(".");for(let n=t.length;n>0;n--){const e=t.slice(0,n).join(".");if(r[e])return e}return null};function i({fn:e,children:t,hash:n}){const i=l(e);if(!i)return(0,o.jsx)(o.Fragment,{children:t});const s=(0,a.Ay)(`/${r[i]}#${n??e}`);return(0,o.jsx)("a",{href:s,target:"_blank",children:t??(0,o.jsxs)("code",{children:[e,"()"]})})}},53296:(e,t,n)=>{n.d(t,{A:()=>r});const r=n.p+"assets/images/update-prompt-ui-74a489e65098893bbffe253f43fb210d.png"},72406:(e,t,n)=>{n.d(t,{A:()=>r});const r=n.p+"assets/images/registered-prompt-b8d47ff0d061d8703b61a9a6e94a77c3.png"}}]);