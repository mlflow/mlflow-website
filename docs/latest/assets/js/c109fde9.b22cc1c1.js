"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[1938],{28453:(e,n,t)=>{t.d(n,{R:()=>a,x:()=>r});var l=t(96540);const o={},i=l.createContext(o);function a(e){const n=l.useContext(i);return l.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function r(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:a(e.components),l.createElement(i.Provider,{value:n},e.children)}},49374:(e,n,t)=>{t.d(n,{B:()=>s});t(96540);const l=JSON.parse('{"mlflow.anthropic":"api_reference/python_api/mlflow.anthropic.html","mlflow.artifacts":"api_reference/python_api/mlflow.artifacts.html","mlflow.ag2":"api_reference/python_api/mlflow.ag2.html","mlflow.autogen":"api_reference/python_api/mlflow.autogen.html","mlflow.bedrock":"api_reference/python_api/mlflow.bedrock.html","mlflow.catboost":"api_reference/python_api/mlflow.catboost.html","mlflow.client":"api_reference/python_api/mlflow.client.html","mlflow.config":"api_reference/python_api/mlflow.config.html","mlflow.crewai":"api_reference/python_api/mlflow.crewai.html","mlflow.data":"api_reference/python_api/mlflow.data.html","mlflow.deployments":"api_reference/python_api/mlflow.deployments.html","mlflow.diviner":"api_reference/python_api/mlflow.diviner.html","mlflow.dspy":"api_reference/python_api/mlflow.dspy.html","mlflow.entities":"api_reference/python_api/mlflow.entities.html","mlflow.environment_variables":"api_reference/python_api/mlflow.environment_variables.html","mlflow.gateway":"api_reference/python_api/mlflow.gateway.html","mlflow.gemini":"api_reference/python_api/mlflow.gemini.html","mlflow.groq":"api_reference/python_api/mlflow.groq.html","mlflow.h2o":"api_reference/python_api/mlflow.h2o.html","mlflow.johnsnowlabs":"api_reference/python_api/mlflow.johnsnowlabs.html","mlflow.keras":"api_reference/python_api/mlflow.keras.html","mlflow.langchain":"api_reference/python_api/mlflow.langchain.html","mlflow.lightgbm":"api_reference/python_api/mlflow.lightgbm.html","mlflow.litellm":"api_reference/python_api/mlflow.litellm.html","mlflow.llama_index":"api_reference/python_api/mlflow.llama_index.html","mlflow.metrics":"api_reference/python_api/mlflow.metrics.html","mlflow.mistral":"api_reference/python_api/mlflow.mistral.html","mlflow.models":"api_reference/python_api/mlflow.models.html","mlflow.onnx":"api_reference/python_api/mlflow.onnx.html","mlflow.openai":"api_reference/python_api/mlflow.openai.html","mlflow.paddle":"api_reference/python_api/mlflow.paddle.html","mlflow.pmdarima":"api_reference/python_api/mlflow.pmdarima.html","mlflow.projects":"api_reference/python_api/mlflow.projects.html","mlflow.promptflow":"api_reference/python_api/mlflow.promptflow.html","mlflow.prophet":"api_reference/python_api/mlflow.prophet.html","mlflow.pyfunc":"api_reference/python_api/mlflow.pyfunc.html","mlflow.pyspark.ml":"api_reference/python_api/mlflow.pyspark.ml.html","mlflow.pytorch":"api_reference/python_api/mlflow.pytorch.html","mlflow":"api_reference/python_api/mlflow.html","mlflow.sagemaker":"api_reference/python_api/mlflow.sagemaker.html","mlflow.sentence_transformers":"api_reference/python_api/mlflow.sentence_transformers.html","mlflow.server":"api_reference/python_api/mlflow.server.html","mlflow.shap":"api_reference/python_api/mlflow.shap.html","mlflow.sklearn":"api_reference/python_api/mlflow.sklearn.html","mlflow.spacy":"api_reference/python_api/mlflow.spacy.html","mlflow.spark":"api_reference/python_api/mlflow.spark.html","mlflow.statsmodels":"api_reference/python_api/mlflow.statsmodels.html","mlflow.system_metrics":"api_reference/python_api/mlflow.system_metrics.html","mlflow.tensorflow":"api_reference/python_api/mlflow.tensorflow.html","mlflow.tracing":"api_reference/python_api/mlflow.tracing.html","mlflow.transformers":"api_reference/python_api/mlflow.transformers.html","mlflow.types":"api_reference/python_api/mlflow.types.html","mlflow.utils":"api_reference/python_api/mlflow.utils.html","mlflow.xgboost":"api_reference/python_api/mlflow.xgboost.html","mlflow.server.auth":"api_reference/auth/python-api.html"}');var o=t(86025),i=t(28774),a=t(74848);const r=e=>{const n=e.split(".");for(let t=n.length;t>0;t--){const e=n.slice(0,t).join(".");if(l[e])return e}return null};function s({fn:e,children:n}){const t=r(e);if(!t)return(0,a.jsx)(a.Fragment,{children:n});const s=(0,o.Ay)(`/${l[t]}#${e}`);return(0,a.jsx)(i.A,{to:s,target:"_blank",children:n??(0,a.jsxs)("code",{children:[e,"()"]})})}},94435:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>d,contentTitle:()=>s,default:()=>p,frontMatter:()=>r,metadata:()=>l,toc:()=>c});const l=JSON.parse('{"id":"data-model/logged-model","title":"MLflow LoggedModel Data Model for GenAI","description":"MLflow LoggedModel represents a first-class entity for tracking and managing AI models, agents, and generative AI applications within MLflow Experiments. A LoggedModel provides comprehensive model lifecycle management, from development through production, with integrated observability and evaluation capabilities.","source":"@site/docs/genai/data-model/logged-model.mdx","sourceDirName":"data-model","slug":"/data-model/logged-model","permalink":"/docs/latest/genai/data-model/logged-model","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{},"sidebar":"genAISidebar","previous":{"title":"Experiments","permalink":"/docs/latest/genai/data-model/experiments"},"next":{"title":"Runs","permalink":"/docs/latest/genai/data-model/runs"}}');var o=t(74848),i=t(28453),a=t(49374);const r={},s="MLflow LoggedModel Data Model for GenAI",d={},c=[{value:"Overview",id:"overview",level:2},{value:"LoggedModel as a First-Class Entity",id:"loggedmodel-as-a-first-class-entity",level:2},{value:"Unified Model Representation",id:"unified-model-representation",level:3},{value:"Integrated Lifecycle Management",id:"integrated-lifecycle-management",level:3},{value:"Comprehensive Observability",id:"comprehensive-observability",level:3},{value:"LoggedModel Core Properties",id:"loggedmodel-core-properties",level:2},{value:"Model Identity",id:"model-identity",level:3},{value:"Model Artifacts and Configuration",id:"model-artifacts-and-configuration",level:3},{value:"LoggedModel Relationship to Traces",id:"loggedmodel-relationship-to-traces",level:2},{value:"Automatic Trace Linking",id:"automatic-trace-linking",level:3},{value:"Trace Management",id:"trace-management",level:3},{value:"LoggedModel Evaluation Integration",id:"loggedmodel-evaluation-integration",level:2},{value:"Metrics and Assessment",id:"metrics-and-assessment",level:3},{value:"Metrics Storage and Display",id:"metrics-storage-and-display",level:3},{value:"LoggedModel Creation Patterns",id:"loggedmodel-creation-patterns",level:2},{value:"Creation Methods",id:"creation-methods",level:3},{value:"Active Model Pattern",id:"active-model-pattern",level:3},{value:"LoggedModel Lifecycle Management",id:"loggedmodel-lifecycle-management",level:2},{value:"Development to Production",id:"development-to-production",level:3},{value:"Version Management",id:"version-management",level:3},{value:"LoggedModel UI Integration",id:"loggedmodel-ui-integration",level:2},{value:"User Interface Features",id:"user-interface-features",level:3},{value:"Benefits of LoggedModel-Centric Organization",id:"benefits-of-loggedmodel-centric-organization",level:2},{value:"Unified Model Management",id:"unified-model-management",level:3},{value:"Enhanced Development Experience",id:"enhanced-development-experience",level:3},{value:"Production Readiness",id:"production-readiness",level:3},{value:"LoggedModel Best Practices",id:"loggedmodel-best-practices",level:2},{value:"Organization Strategy",id:"organization-strategy",level:3},{value:"Development Workflow",id:"development-workflow",level:3},{value:"Production Management",id:"production-management",level:3},{value:"Getting Started with LoggedModel",id:"getting-started-with-loggedmodel",level:2},{value:"Next Steps",id:"next-steps",level:2}];function m(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",mermaid:"mermaid",p:"p",strong:"strong",ul:"ul",...(0,i.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(n.header,{children:(0,o.jsx)(n.h1,{id:"mlflow-loggedmodel-data-model-for-genai",children:"MLflow LoggedModel Data Model for GenAI"})}),"\n",(0,o.jsxs)(n.p,{children:["MLflow ",(0,o.jsx)(n.strong,{children:"LoggedModel"})," represents a first-class entity for tracking and managing AI models, agents, and generative AI applications within MLflow Experiments. A LoggedModel provides comprehensive model lifecycle management, from development through production, with integrated observability and evaluation capabilities."]}),"\n",(0,o.jsx)(n.h2,{id:"overview",children:"Overview"}),"\n",(0,o.jsx)(n.p,{children:"The LoggedModel serves as the central entity that connects model artifacts, execution traces, evaluation metrics, and metadata under a unified framework for your AI applications."}),"\n",(0,o.jsx)(n.mermaid,{value:"graph TD\n    subgraph LM[\ud83e\udd16 MLflow LoggedModel]\n        direction TB\n        TITLE[\ud83c\udfaf AI Model/Agent Container]\n\n        subgraph CORE[\ud83d\udcca Core Properties]\n            ID[\ud83c\udd94 Model ID]\n            NAME[\ud83d\udcdd Name]\n            TYPE[\ud83c\udff7\ufe0f Model Type]\n            STATUS[\u26a1 Status]\n        end\n\n        subgraph DATA[\ud83d\udccb Associated Data]\n            ARTIFACTS[\ud83d\udce6 Model Artifacts]\n            PARAMS[\u2699\ufe0f Parameters]\n            METRICS[\ud83d\udcc8 Metrics]\n            TAGS[\ud83c\udff7\ufe0f Tags]\n        end\n\n        subgraph TRACKING[\ud83d\udcca Execution Tracking]\n            TRACES[\ud83d\udcdd Linked Traces]\n            RUNS[\ud83d\ude80 Source Runs]\n            EVALS[\ud83e\uddea Evaluation Results]\n        end\n\n        TITLE -.-> CORE\n        TITLE -.-> DATA\n        TITLE -.-> TRACKING\n    end\n\n    classDef modelStyle fill:#e8f5e8,stroke:#2e7d32,stroke-width:3px,color:#000\n    classDef coreStyle fill:#e3f2fd,stroke:#0277bd,stroke-width:2px,color:#000\n    classDef dataStyle fill:#fff3e0,stroke:#ef6c00,stroke-width:2px,color:#000\n    classDef trackingStyle fill:#f3e5f5,stroke:#7b1fa2,stroke-width:2px,color:#000\n    classDef titleStyle fill:#f5f5f5,stroke:#424242,stroke-width:2px,color:#000\n\n    class LM modelStyle\n    class CORE,ID,NAME,TYPE,STATUS coreStyle\n    class DATA,ARTIFACTS,PARAMS,METRICS,TAGS dataStyle\n    class TRACKING,TRACES,RUNS,EVALS trackingStyle\n    class TITLE titleStyle"}),"\n",(0,o.jsx)(n.h2,{id:"loggedmodel-as-a-first-class-entity",children:"LoggedModel as a First-Class Entity"}),"\n",(0,o.jsx)(n.h3,{id:"unified-model-representation",children:"Unified Model Representation"}),"\n",(0,o.jsx)(n.p,{children:"LoggedModel provides a single abstraction for all types of AI models, from traditional ML models to complex GenAI agents and applications. Each LoggedModel maintains its own identity, metadata, and execution history."}),"\n",(0,o.jsx)(n.h3,{id:"integrated-lifecycle-management",children:"Integrated Lifecycle Management"}),"\n",(0,o.jsx)(n.p,{children:"LoggedModel connects development, evaluation, and production phases through a unified entity that tracks model evolution, performance metrics, and deployment status."}),"\n",(0,o.jsx)(n.h3,{id:"comprehensive-observability",children:"Comprehensive Observability"}),"\n",(0,o.jsxs)(n.p,{children:["When a LoggedModel is set as active using ",(0,o.jsx)(a.B,{fn:"mlflow.set_active_model"}),", MLflow automatically links all execution traces, evaluation results, and performance metrics to that model, providing comprehensive visibility into its behavior."]}),"\n",(0,o.jsx)(n.h2,{id:"loggedmodel-core-properties",children:"LoggedModel Core Properties"}),"\n",(0,o.jsx)(n.h3,{id:"model-identity",children:"Model Identity"}),"\n",(0,o.jsx)(n.p,{children:"Every LoggedModel has unique identification and organizational properties:"}),"\n",(0,o.jsx)(n.mermaid,{value:"graph TB\n    IDENTITY[\ud83c\udd94 Model Identity]\n    METADATA[\ud83d\udccb Model Metadata]\n    LINEAGE[\ud83d\udd04 Model Lineage]\n\n    subgraph ID_DETAILS[Identity Details]\n        direction TB\n        MID[Model ID: m-123802d4ba324f4d8baa456eb8b5c061]\n        NAME[Name: basic_chain]\n        EXP[Experiment ID: Associated Experiment]\n        URI[Model URI: models:/model_id]\n    end\n\n    subgraph META_DETAILS[Metadata Details]\n        direction TB\n        TYPE[Model Type: agent or classifier or llm]\n        STATUS[Status: READY or PENDING or FAILED]\n        CREATED[Creation Timestamp]\n        UPDATED[Last Updated Timestamp]\n    end\n\n    subgraph LINEAGE_DETAILS[Lineage Details]\n        direction TB\n        SOURCE[Source Run ID]\n        ARTIFACTS[Artifact Location]\n        VERSION[Version Information]\n    end\n\n    IDENTITY --\x3e ID_DETAILS\n    METADATA --\x3e META_DETAILS\n    LINEAGE --\x3e LINEAGE_DETAILS\n\n    classDef identityStyle fill:#e3f2fd,stroke:#0277bd,stroke-width:2px,color:#000\n    classDef metadataStyle fill:#fff3e0,stroke:#ef6c00,stroke-width:2px,color:#000\n    classDef lineageStyle fill:#f3e5f5,stroke:#7b1fa2,stroke-width:2px,color:#000\n\n    class IDENTITY,ID_DETAILS,MID,NAME,EXP,URI identityStyle\n    class METADATA,META_DETAILS,TYPE,STATUS,CREATED,UPDATED metadataStyle\n    class LINEAGE,LINEAGE_DETAILS,SOURCE,ARTIFACTS,VERSION lineageStyle"}),"\n",(0,o.jsx)(n.h3,{id:"model-artifacts-and-configuration",children:"Model Artifacts and Configuration"}),"\n",(0,o.jsx)(n.p,{children:"LoggedModel stores comprehensive model information:"}),"\n",(0,o.jsx)(n.mermaid,{value:"graph TB\n    LM[\ud83e\udd16 LoggedModel]\n\n    ARTIFACTS[\ud83d\udce6 Model Artifacts]\n    CONFIG[\u2699\ufe0f Configuration]\n    EXAMPLES[\ud83d\udcdd Usage Examples]\n\n    subgraph ARTIFACT_DETAILS[Artifact Details]\n        direction TB\n        MODEL_FILE[\ud83d\udd27 Model Files]\n        DEPS[\ud83d\udccb Dependencies]\n        CONDA[\ud83d\udc0d Environment]\n        SIGNATURE[\ud83d\udcdd Model Signature]\n    end\n\n    subgraph CONFIG_DETAILS[Configuration Details]\n        direction TB\n        PARAMS[\ud83d\udcca Parameters]\n        TAGS[\ud83c\udff7\ufe0f Tags]\n        METADATA[\ud83d\udccb Metadata]\n    end\n\n    subgraph EXAMPLE_DETAILS[Example Details]\n        direction TB\n        INPUT_EX[\ud83d\udce5 Input Example]\n        OUTPUT_EX[\ud83d\udce4 Output Example]\n    end\n\n    LM --\x3e ARTIFACTS\n    LM --\x3e CONFIG\n    LM --\x3e EXAMPLES\n\n    ARTIFACTS --\x3e ARTIFACT_DETAILS\n    CONFIG --\x3e CONFIG_DETAILS\n    EXAMPLES --\x3e EXAMPLE_DETAILS\n\n    classDef modelStyle fill:#e8f5e8,stroke:#2e7d32,stroke-width:3px,color:#000\n    classDef artifactStyle fill:#e3f2fd,stroke:#0277bd,stroke-width:2px,color:#000\n    classDef configStyle fill:#fff3e0,stroke:#ef6c00,stroke-width:2px,color:#000\n    classDef exampleStyle fill:#f3e5f5,stroke:#7b1fa2,stroke-width:2px,color:#000\n\n    class LM modelStyle\n    class ARTIFACTS,ARTIFACT_DETAILS,MODEL_FILE,DEPS,CONDA,SIGNATURE artifactStyle\n    class CONFIG,CONFIG_DETAILS,PARAMS,TAGS,METADATA configStyle\n    class EXAMPLES,EXAMPLE_DETAILS,INPUT_EX,OUTPUT_EX exampleStyle"}),"\n",(0,o.jsx)(n.h2,{id:"loggedmodel-relationship-to-traces",children:"LoggedModel Relationship to Traces"}),"\n",(0,o.jsx)(n.h3,{id:"automatic-trace-linking",children:"Automatic Trace Linking"}),"\n",(0,o.jsx)(n.p,{children:"When autologging is enabled, all execution traces are automatically linked to the active LoggedModel:"}),"\n",(0,o.jsx)(n.mermaid,{value:"graph TB\n    subgraph WORKFLOW[\ud83d\udd04 Trace Linking Workflow]\n        direction TB\n\n        subgraph SETUP[\u2699\ufe0f Setup Phase]\n            CREATE[\ud83e\udd16 Create/Load LoggedModel]\n            AUTOLOG[\ud83d\udcca Enable Autologging]\n            SET_ACTIVE[\ud83c\udfaf Set Active Model]\n        end\n\n        subgraph EXECUTION[\ud83d\ude80 Execution Phase]\n            INVOKE[\ud83d\udcac Model Invocation]\n            TRACE_GEN[\ud83d\udcdd Trace Generation]\n            AUTO_LINK[\ud83d\udd17 Automatic Linking]\n        end\n\n        subgraph RESULT[\ud83d\udcca Result]\n            LINKED_TRACES[\ud83d\udcdd Traces Linked to LoggedModel]\n            UI_VIEW[\ud83d\udda5\ufe0f View in Model's Traces Tab]\n        end\n\n        CREATE --\x3e AUTOLOG\n        AUTOLOG --\x3e SET_ACTIVE\n        SET_ACTIVE --\x3e INVOKE\n        INVOKE --\x3e TRACE_GEN\n        TRACE_GEN --\x3e AUTO_LINK\n        AUTO_LINK --\x3e LINKED_TRACES\n        LINKED_TRACES --\x3e UI_VIEW\n    end\n\n    classDef setupStyle fill:#e3f2fd,stroke:#0277bd,stroke-width:2px,color:#000\n    classDef executionStyle fill:#fff3e0,stroke:#ef6c00,stroke-width:2px,color:#000\n    classDef resultStyle fill:#e8f5e8,stroke:#2e7d32,stroke-width:2px,color:#000\n\n    class SETUP,CREATE,AUTOLOG,SET_ACTIVE setupStyle\n    class EXECUTION,INVOKE,TRACE_GEN,AUTO_LINK executionStyle\n    class RESULT,LINKED_TRACES,UI_VIEW resultStyle"}),"\n",(0,o.jsx)(n.h3,{id:"trace-management",children:"Trace Management"}),"\n",(0,o.jsx)(n.p,{children:"LoggedModel provides comprehensive trace organization and analysis:"}),"\n",(0,o.jsx)(n.mermaid,{value:"graph TB\n    LM[\ud83e\udd16 LoggedModel: basic_chain]\n\n    subgraph TRACES[\ud83d\udcdd Trace Types]\n        DEV[\ud83d\udd27 Development Traces]\n        EVAL[\ud83e\uddea Evaluation Traces]\n        PROD[\ud83d\ude80 Production Traces]\n        INTERACTIVE[\ud83d\udcac Interactive Queries]\n    end\n\n    subgraph DATA[\ud83d\udcca Trace Data]\n        INPUTS[\ud83d\udce5 Input Data]\n        OUTPUTS[\ud83d\udce4 Output Data]\n        TIMING[\u23f1\ufe0f Performance Metrics]\n        METADATA[\ud83d\udccb Execution Metadata]\n    end\n\n    subgraph ANALYSIS[\ud83d\udcc8 Analysis Capabilities]\n        SEARCH[\ud83d\udd0d Search & Filter]\n        PATTERNS[\ud83d\udcca Pattern Analysis]\n        QUALITY[\u2b50 Quality Assessment]\n    end\n\n    LM --\x3e TRACES\n    LM --\x3e DATA\n    LM --\x3e ANALYSIS\n\n    classDef modelStyle fill:#e8f5e8,stroke:#2e7d32,stroke-width:3px,color:#000\n    classDef traceStyle fill:#e3f2fd,stroke:#0277bd,stroke-width:2px,color:#000\n    classDef dataStyle fill:#fff3e0,stroke:#ef6c00,stroke-width:2px,color:#000\n    classDef analysisStyle fill:#f3e5f5,stroke:#7b1fa2,stroke-width:2px,color:#000\n\n    class LM modelStyle\n    class TRACES,DEV,EVAL,PROD,INTERACTIVE traceStyle\n    class DATA,INPUTS,OUTPUTS,TIMING,METADATA dataStyle\n    class ANALYSIS,SEARCH,PATTERNS,QUALITY analysisStyle"}),"\n",(0,o.jsx)(n.h2,{id:"loggedmodel-evaluation-integration",children:"LoggedModel Evaluation Integration"}),"\n",(0,o.jsx)(n.h3,{id:"metrics-and-assessment",children:"Metrics and Assessment"}),"\n",(0,o.jsx)(n.p,{children:"LoggedModel seamlessly integrates with MLflow's evaluation framework:"}),"\n",(0,o.jsx)(n.mermaid,{value:"graph LR\n    subgraph EVAL_FLOW[\ud83e\uddea Evaluation Workflow]\n        direction TB\n\n        subgraph INPUT[\ud83d\udce5 Evaluation Input]\n            direction TB\n            DATASET[\ud83d\udccb Evaluation Dataset]\n            MODEL[\ud83e\udd16 LoggedModel]\n            METRICS[\ud83d\udcca Evaluation Metrics]\n        end\n\n        subgraph PROCESS[\u2699\ufe0f Evaluation Process]\n            direction TB\n            RUN_EVAL[\ud83d\ude80 Run Evaluation]\n            GENERATE[\ud83d\udcdd Generate Traces]\n            SCORE[\ud83c\udfaf Calculate Scores]\n        end\n\n        subgraph OUTPUT[\ud83d\udce4 Evaluation Output]\n            direction TB\n            EVAL_METRICS[\ud83d\udcc8 Model Metrics]\n            EVAL_TRACES[\ud83d\udcdd Evaluation Traces]\n            REPORTS[\ud83d\udccb Evaluation Reports]\n        end\n\n        INPUT --\x3e PROCESS\n        PROCESS --\x3e OUTPUT\n    end\n\n    classDef inputStyle fill:#e3f2fd,stroke:#0277bd,stroke-width:2px,color:#000\n    classDef processStyle fill:#fff3e0,stroke:#ef6c00,stroke-width:2px,color:#000\n    classDef outputStyle fill:#e8f5e8,stroke:#2e7d32,stroke-width:2px,color:#000\n\n    class INPUT,DATASET,MODEL,METRICS inputStyle\n    class PROCESS,RUN_EVAL,GENERATE,SCORE processStyle\n    class OUTPUT,EVAL_METRICS,EVAL_TRACES,REPORTS outputStyle"}),"\n",(0,o.jsx)(n.h3,{id:"metrics-storage-and-display",children:"Metrics Storage and Display"}),"\n",(0,o.jsx)(n.p,{children:"Evaluation metrics are directly associated with LoggedModel:"}),"\n",(0,o.jsx)(n.mermaid,{value:"graph TB\n    subgraph METRICS_INTEGRATION[\ud83d\udcca Metrics Integration]\n        direction TB\n\n        subgraph METRIC_TYPES[\ud83d\udcc8 Metric Types]\n            direction TB\n            GENAI[\ud83e\udd16 GenAI Metrics]\n            PERF[\u26a1 Performance Metrics]\n            QUALITY[\u2b50 Quality Metrics]\n            CUSTOM[\ud83d\udd27 Custom Metrics]\n        end\n\n        subgraph STORAGE[\ud83d\udcbe Metric Storage]\n            direction TB\n            MODEL_METRICS[\ud83d\udcca Model-Level Metrics]\n            RUN_METRICS[\ud83d\ude80 Run-Level Metrics]\n            TRACE_METRICS[\ud83d\udcdd Trace-Level Metrics]\n        end\n\n        subgraph DISPLAY[\ud83d\udda5\ufe0f Metric Display]\n            direction TB\n            MODEL_PAGE[\ud83d\udcf1 Model Details Page]\n            COMPARISON[\u2696\ufe0f Model Comparison]\n            TRENDS[\ud83d\udcc8 Trend Analysis]\n        end\n\n        METRIC_TYPES --\x3e STORAGE\n        STORAGE --\x3e DISPLAY\n    end\n\n    classDef metricStyle fill:#e3f2fd,stroke:#0277bd,stroke-width:2px,color:#000\n    classDef storageStyle fill:#fff3e0,stroke:#ef6c00,stroke-width:2px,color:#000\n    classDef displayStyle fill:#e8f5e8,stroke:#2e7d32,stroke-width:2px,color:#000\n\n    class METRIC_TYPES,GENAI,PERF,QUALITY,CUSTOM metricStyle\n    class STORAGE,MODEL_METRICS,RUN_METRICS,TRACE_METRICS storageStyle\n    class DISPLAY,MODEL_PAGE,COMPARISON,TRENDS displayStyle"}),"\n",(0,o.jsx)(n.h2,{id:"loggedmodel-creation-patterns",children:"LoggedModel Creation Patterns"}),"\n",(0,o.jsx)(n.h3,{id:"creation-methods",children:"Creation Methods"}),"\n",(0,o.jsx)(n.p,{children:"LoggedModel can be created through multiple approaches:"}),"\n",(0,o.jsx)(n.mermaid,{value:"graph TB\n    CREATION[\ud83d\udd27 LoggedModel Creation Methods]\n\n    subgraph DIRECT[\ud83d\udcdd Direct Creation]\n        LOG_MODEL[mlflow.flavor.log_model API]\n        CREATE_EXT[mlflow.create_external_model API]\n        AUTO_CREATE[Auto-creation via set_active_model]\n    end\n\n    subgraph TRAINING[\ud83c\udfcb\ufe0f Training-Based]\n        CHECKPOINT[Deep Learning Checkpoints]\n        FINE_TUNE[Fine-tuning Results]\n        EXPERIMENT[Experiment Results]\n    end\n\n    subgraph IMPORT[\ud83d\udce5 Import-Based]\n        EXISTING[Import Existing Models]\n        REGISTRY[From Model Registry]\n        EXTERNAL[External Model References]\n    end\n\n    CREATION --\x3e DIRECT\n    CREATION --\x3e TRAINING\n    CREATION --\x3e IMPORT\n\n    classDef creationStyle fill:#e8f5e8,stroke:#2e7d32,stroke-width:3px,color:#000\n    classDef directStyle fill:#e3f2fd,stroke:#0277bd,stroke-width:2px,color:#000\n    classDef trainingStyle fill:#fff3e0,stroke:#ef6c00,stroke-width:2px,color:#000\n    classDef importStyle fill:#f3e5f5,stroke:#7b1fa2,stroke-width:2px,color:#000\n\n    class CREATION creationStyle\n    class DIRECT,LOG_MODEL,CREATE_EXT,AUTO_CREATE directStyle\n    class TRAINING,CHECKPOINT,FINE_TUNE,EXPERIMENT trainingStyle\n    class IMPORT,EXISTING,REGISTRY,EXTERNAL importStyle"}),"\n",(0,o.jsx)(n.h3,{id:"active-model-pattern",children:"Active Model Pattern"}),"\n",(0,o.jsx)(n.p,{children:"The active model pattern enables automatic trace linking:"}),"\n",(0,o.jsx)(n.mermaid,{value:"graph LR\n    subgraph ACTIVE_PATTERN[\ud83c\udfaf Active Model Pattern]\n        direction TB\n\n        subgraph SETUP[\u2699\ufe0f Setup]\n            SET_ACTIVE[mlflow.set_active_model with name]\n            ENABLE_AUTO[mlflow.flavor.autolog]\n        end\n\n        subgraph EXECUTION[\ud83d\ude80 Execution]\n            MODEL_INVOKE[Model Invocation]\n            TRACE_CREATE[Trace Creation]\n            AUTO_LINK[Automatic Linking]\n        end\n\n        subgraph RESULT[\ud83d\udcca Result]\n            LINKED_MODEL[LoggedModel with Traces]\n            UI_DISPLAY[UI Display & Analysis]\n        end\n\n        SETUP --\x3e EXECUTION\n        EXECUTION --\x3e RESULT\n    end\n\n    classDef setupStyle fill:#e3f2fd,stroke:#0277bd,stroke-width:2px,color:#000\n    classDef executionStyle fill:#fff3e0,stroke:#ef6c00,stroke-width:2px,color:#000\n    classDef resultStyle fill:#e8f5e8,stroke:#2e7d32,stroke-width:2px,color:#000\n\n    class SETUP,SET_ACTIVE,ENABLE_AUTO setupStyle\n    class EXECUTION,MODEL_INVOKE,TRACE_CREATE,AUTO_LINK executionStyle\n    class RESULT,LINKED_MODEL,UI_DISPLAY resultStyle"}),"\n",(0,o.jsx)(n.h2,{id:"loggedmodel-lifecycle-management",children:"LoggedModel Lifecycle Management"}),"\n",(0,o.jsx)(n.h3,{id:"development-to-production",children:"Development to Production"}),"\n",(0,o.jsx)(n.p,{children:"LoggedModel supports the complete AI model lifecycle:"}),"\n",(0,o.jsx)(n.mermaid,{value:"graph TB\n    subgraph LIFECYCLE[\ud83d\udd04 LoggedModel Lifecycle]\n        direction TB\n\n        subgraph DEV[\ud83d\udd27 Development]\n            direction TB\n            CREATE[Create LoggedModel]\n            ITERATE[Interactive Development]\n            DEV_TRACES[Development Traces]\n        end\n\n        subgraph EVAL[\ud83e\uddea Evaluation]\n            direction TB\n            SYSTEMATIC[Systematic Evaluation]\n            METRICS[Metric Collection]\n            VALIDATION[Validation Tests]\n        end\n\n        subgraph DEPLOY[\ud83d\ude80 Deployment]\n            direction TB\n            PROD_DEPLOY[Production Deployment]\n            MONITORING[Live Monitoring]\n            PROD_TRACES[Production Traces]\n        end\n\n        subgraph IMPROVE[\ud83d\udcc8 Improvement]\n            direction TB\n            ANALYSIS[Performance Analysis]\n            OPTIMIZATION[Model Optimization]\n            VERSION[New Versions]\n        end\n\n        DEV --\x3e EVAL\n        EVAL --\x3e DEPLOY\n        DEPLOY --\x3e IMPROVE\n        IMPROVE --\x3e DEV\n    end\n\n    classDef devStyle fill:#e3f2fd,stroke:#0277bd,stroke-width:2px,color:#000\n    classDef evalStyle fill:#fff3e0,stroke:#ef6c00,stroke-width:2px,color:#000\n    classDef deployStyle fill:#e8f5e8,stroke:#2e7d32,stroke-width:2px,color:#000\n    classDef improveStyle fill:#f3e5f5,stroke:#7b1fa2,stroke-width:2px,color:#000\n\n    class DEV,CREATE,ITERATE,DEV_TRACES devStyle\n    class EVAL,SYSTEMATIC,METRICS,VALIDATION evalStyle\n    class DEPLOY,PROD_DEPLOY,MONITORING,PROD_TRACES deployStyle\n    class IMPROVE,ANALYSIS,OPTIMIZATION,VERSION improveStyle"}),"\n",(0,o.jsx)(n.h3,{id:"version-management",children:"Version Management"}),"\n",(0,o.jsx)(n.p,{children:"LoggedModel supports systematic version management:"}),"\n",(0,o.jsx)(n.mermaid,{value:"graph LR\n    subgraph VERSION_MGMT[\ud83d\udcca Version Management]\n        direction TB\n\n        subgraph VERSIONING[\ud83d\udccb Model Versioning]\n            direction TB\n            V1[v1.0: Initial Model]\n            V2[v1.1: Prompt Improvements]\n            V3[v2.0: Architecture Change]\n        end\n\n        subgraph COMPARISON[\u2696\ufe0f Version Comparison]\n            direction TB\n            METRICS_COMP[Metrics Comparison]\n            TRACE_COMP[Trace Analysis]\n            PERF_COMP[Performance Comparison]\n        end\n\n        subgraph SELECTION[\ud83c\udfaf Version Selection]\n            direction TB\n            BEST_MODEL[Best Performing Version]\n            DEPLOYMENT[Deploy Selected Version]\n            ROLLBACK[Rollback Capability]\n        end\n\n        VERSIONING --\x3e COMPARISON\n        COMPARISON --\x3e SELECTION\n    end\n\n    classDef versionStyle fill:#e3f2fd,stroke:#0277bd,stroke-width:2px,color:#000\n    classDef comparisonStyle fill:#fff3e0,stroke:#ef6c00,stroke-width:2px,color:#000\n    classDef selectionStyle fill:#e8f5e8,stroke:#2e7d32,stroke-width:2px,color:#000\n\n    class VERSIONING,V1,V2,V3 versionStyle\n    class COMPARISON,METRICS_COMP,TRACE_COMP,PERF_COMP comparisonStyle\n    class SELECTION,BEST_MODEL,DEPLOYMENT,ROLLBACK selectionStyle"}),"\n",(0,o.jsx)(n.h2,{id:"loggedmodel-ui-integration",children:"LoggedModel UI Integration"}),"\n",(0,o.jsx)(n.h3,{id:"user-interface-features",children:"User Interface Features"}),"\n",(0,o.jsx)(n.p,{children:"LoggedModel provides comprehensive UI integration:"}),"\n",(0,o.jsx)(n.mermaid,{value:"graph TB\n    subgraph UI_INTEGRATION[\ud83d\udda5\ufe0f LoggedModel UI Integration]\n        direction TB\n\n        subgraph NAVIGATION[\ud83e\udded Navigation]\n            direction TB\n            MODELS_TAB[Models Tab]\n            MODEL_DETAIL[Model Detail Page]\n            BREADCRUMBS[Navigation Breadcrumbs]\n        end\n\n        subgraph VIEWS[\ud83d\udc41\ufe0f Content Views]\n            direction TB\n            OVERVIEW[Model Overview]\n            TRACES_TAB[Traces Tab]\n            METRICS_TAB[Metrics Tab]\n            ARTIFACTS_TAB[Artifacts Tab]\n        end\n\n        subgraph ACTIONS[\u26a1 Available Actions]\n            direction TB\n            LOAD_MODEL[Load Model]\n            DOWNLOAD[Download Artifacts]\n            COMPARE[Compare Models]\n            DEPLOY[Deploy to Serving]\n        end\n\n        NAVIGATION --\x3e VIEWS\n        VIEWS --\x3e ACTIONS\n    end\n\n    classDef navStyle fill:#e3f2fd,stroke:#0277bd,stroke-width:2px,color:#000\n    classDef viewStyle fill:#fff3e0,stroke:#ef6c00,stroke-width:2px,color:#000\n    classDef actionStyle fill:#e8f5e8,stroke:#2e7d32,stroke-width:2px,color:#000\n\n    class NAVIGATION,MODELS_TAB,MODEL_DETAIL,BREADCRUMBS navStyle\n    class VIEWS,OVERVIEW,TRACES_TAB,METRICS_TAB,ARTIFACTS_TAB viewStyle\n    class ACTIONS,LOAD_MODEL,DOWNLOAD,COMPARE,DEPLOY actionStyle"}),"\n",(0,o.jsx)(n.h2,{id:"benefits-of-loggedmodel-centric-organization",children:"Benefits of LoggedModel-Centric Organization"}),"\n",(0,o.jsx)(n.h3,{id:"unified-model-management",children:"Unified Model Management"}),"\n",(0,o.jsx)(n.p,{children:"LoggedModel provides comprehensive model lifecycle management through comprehensive tracking that brings together all model-related entities in one location, integrated observability with automatic trace linking and comprehensive monitoring, version control that supports systematic model evolution and comparison, and deployment continuity that maintains consistency from development through production."}),"\n",(0,o.jsx)(n.h3,{id:"enhanced-development-experience",children:"Enhanced Development Experience"}),"\n",(0,o.jsx)(n.p,{children:"The LoggedModel abstraction enables simplified workflows where developers can focus on model development while MLflow handles tracking automatically. Comprehensive visibility provides complete insight into model behavior and performance, collaborative development allows team members to easily share and review models, and data-driven decisions are supported through integrated metrics and evaluation."}),"\n",(0,o.jsx)(n.h3,{id:"production-readiness",children:"Production Readiness"}),"\n",(0,o.jsx)(n.p,{children:"LoggedModel supports production deployment through seamless deployment with direct integration to serving platforms, monitoring integration that continues observability in production, performance tracking across all environments, and quick iteration cycles supported by comprehensive tracking and evaluation."}),"\n",(0,o.jsx)(n.h2,{id:"loggedmodel-best-practices",children:"LoggedModel Best Practices"}),"\n",(0,o.jsx)(n.h3,{id:"organization-strategy",children:"Organization Strategy"}),"\n",(0,o.jsx)(n.p,{children:"Naming conventions should use descriptive, consistent names that reflect model purpose and version information. Parameter tracking must capture all relevant configuration parameters for reproducibility. Metadata management should include comprehensive tags and descriptions for model discovery. Version strategy needs clear versioning schemes that support systematic model evolution."}),"\n",(0,o.jsx)(n.h3,{id:"development-workflow",children:"Development Workflow"}),"\n",(0,o.jsx)(n.p,{children:"Active model usage involves leveraging the active model pattern for automatic trace linking during development. Systematic evaluation requires implementing comprehensive evaluation workflows before deployment. Iterative improvement uses evaluation results to guide model enhancements. Collaboration patterns enable effective team workflows through shared LoggedModel access."}),"\n",(0,o.jsx)(n.h3,{id:"production-management",children:"Production Management"}),"\n",(0,o.jsx)(n.p,{children:"Monitoring setup ensures comprehensive production observability is in place. Performance tracking monitors key metrics across all deployment environments. Quality assurance maintains standards through continuous evaluation. Rollback planning prepares for quick model version rollbacks when needed."}),"\n",(0,o.jsx)(n.h2,{id:"getting-started-with-loggedmodel",children:"Getting Started with LoggedModel"}),"\n",(0,o.jsx)(n.p,{children:"Creating and using LoggedModel for your AI applications involves several straightforward steps:"}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"Create your first LoggedModel"})," by using ",(0,o.jsx)(n.code,{children:"mlflow.flavor.log_model()"})," or ",(0,o.jsx)(a.B,{fn:"mlflow.create_external_model"})," with a descriptive name and comprehensive parameters."]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"Enable automatic tracking"})," through ",(0,o.jsx)(n.code,{children:"mlflow.set_active_model()"})," and ",(0,o.jsx)(n.code,{children:"mlflow.flavor.autolog()"})," for seamless trace linking."]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"Implement evaluation"})," using MLflow's evaluation framework to assess model performance systematically."]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"Monitor and iterate"})," by analyzing traces and metrics to guide continuous improvement."]}),"\n"]}),"\n",(0,o.jsx)(n.h2,{id:"next-steps",children:"Next Steps"}),"\n",(0,o.jsxs)(n.p,{children:[(0,o.jsx)(n.strong,{children:(0,o.jsx)(n.a,{href:"/genai/tracing",children:"Trace Management"})})," provides detailed guidance on capturing and analyzing execution traces linked to LoggedModel. ",(0,o.jsx)(n.strong,{children:(0,o.jsx)(n.a,{href:"/genai/eval-monitor",children:"Evaluation Workflows"})})," explains systematic testing and quality measurement for LoggedModel. ",(0,o.jsx)(n.strong,{children:(0,o.jsx)(n.a,{href:"/genai/tracing/observe-with-traces/ui",children:"MLflow UI Navigation"})})," helps you master the interface for exploring LoggedModel data and insights."]}),"\n",(0,o.jsx)(n.p,{children:"MLflow LoggedModel provides the essential framework for comprehensive AI model lifecycle management, enabling systematic development, evaluation, and deployment of high-quality AI applications."})]})}function p(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,o.jsx)(n,{...e,children:(0,o.jsx)(m,{...e})}):m(e)}}}]);