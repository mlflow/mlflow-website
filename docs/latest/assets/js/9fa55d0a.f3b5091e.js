"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[5602],{10493:(e,n,a)=>{a.d(n,{Zp:()=>s,AC:()=>r,WO:()=>m,_C:()=>c,$3:()=>p,jK:()=>g});var t=a(34164);const i={CardGroup:"CardGroup_P84T",NoGap:"NoGap_O9Dj",MaxThreeColumns:"MaxThreeColumns_FO1r",AutofillColumns:"AutofillColumns_fKhQ",Card:"Card_aSCR",CardBordered:"CardBordered_glGF",CardBody:"CardBody_BhRs",TextColor:"TextColor_a8Tp",BoxRoot:"BoxRoot_Etgr",FlexWrapNowrap:"FlexWrapNowrap_f60k",FlexJustifyContentFlexStart:"FlexJustifyContentFlexStart_ZYv5",FlexDirectionRow:"FlexDirectionRow_T2qL",FlexAlignItemsCenter:"FlexAlignItemsCenter_EHVM",FlexFlex:"FlexFlex__JTE",Link:"Link_fVkl",MarginLeft4:"MarginLeft4_YQSJ",MarginTop4:"MarginTop4_jXKN",PaddingBottom4:"PaddingBottom4_O9gt",LogoCardContent:"LogoCardContent_kCQm",LogoCardImage:"LogoCardImage_JdcX",SmallLogoCardContent:"SmallLogoCardContent_LxhV",SmallLogoCardRounded:"SmallLogoCardRounded_X50_",SmallLogoCardImage:"SmallLogoCardImage_tPZl",NewFeatureCardContent:"NewFeatureCardContent_Rq3d",NewFeatureCardHeading:"NewFeatureCardHeading_f6q3",NewFeatureCardHeadingSeparator:"NewFeatureCardHeadingSeparator_pSx8",NewFeatureCardTags:"NewFeatureCardTags_IFHO",NewFeatureCardWrapper:"NewFeatureCardWrapper_NQ0k",TitleCardContent:"TitleCardContent_l9MQ",TitleCardTitle:"TitleCardTitle__K8J",TitleCardSeparator:"TitleCardSeparator_IN2E",Cols1:"Cols1_Gr2U",Cols2:"Cols2_sRvc",Cols3:"Cols3_KjUS",Cols4:"Cols4_dKOj",Cols5:"Cols5_jDmj",Cols6:"Cols6_Q0OR"};var l=a(28774),o=a(74848);const r=({children:e,isSmall:n,cols:a,noGap:l})=>(0,o.jsx)("div",{className:(0,t.A)(i.CardGroup,n?i.AutofillColumns:a?i[`Cols${a}`]:i.MaxThreeColumns,l&&i.NoGap),children:e}),s=({children:e,link:n=""})=>n?(0,o.jsx)(l.A,{className:(0,t.A)(i.Link,i.Card,i.CardBordered),to:n,children:e}):(0,o.jsx)("div",{className:(0,t.A)(i.Card,i.CardBordered),children:e}),c=({headerText:e,link:n,text:a})=>(0,o.jsx)(s,{link:n,children:(0,o.jsxs)("span",{children:[(0,o.jsx)("div",{className:(0,t.A)(i.CardTitle,i.BoxRoot,i.PaddingBottom4),style:{pointerEvents:"none"},children:(0,o.jsx)("div",{className:(0,t.A)(i.BoxRoot,i.FlexFlex,i.FlexAlignItemsCenter,i.FlexDirectionRow,i.FlexJustifyContentFlexStart,i.FlexWrapNowrap),style:{marginLeft:"-4px",marginTop:"-4px"},children:(0,o.jsx)("div",{className:(0,t.A)(i.BoxRoot,i.BoxHideIfEmpty,i.MarginTop4,i.MarginLeft4),style:{pointerEvents:"auto"},children:(0,o.jsx)("span",{className:"",children:e})})})}),(0,o.jsx)("span",{className:(0,t.A)(i.TextColor,i.CardBody),children:(0,o.jsx)("p",{children:a})})]})}),m=({description:e,children:n,link:a})=>(0,o.jsx)(s,{link:a,children:(0,o.jsxs)("div",{className:i.LogoCardContent,children:[(0,o.jsx)("div",{className:i.LogoCardImage,children:n}),(0,o.jsx)("p",{className:i.TextColor,children:e})]})}),p=({children:e,link:n})=>(0,o.jsx)("div",{className:(0,t.A)(i.Card,i.CardBordered,i.SmallLogoCardRounded),children:n?(0,o.jsx)(l.A,{className:(0,t.A)(i.Link),to:n,children:(0,o.jsx)("div",{className:i.SmallLogoCardContent,children:(0,o.jsx)("div",{className:(0,t.A)("max-height-img-container",i.SmallLogoCardImage),children:e})})}):(0,o.jsx)("div",{className:i.SmallLogoCardContent,children:(0,o.jsx)("div",{className:(0,t.A)("max-height-img-container",i.SmallLogoCardImage),children:e})})}),g=({title:e,description:n,link:a=""})=>(0,o.jsx)(s,{link:a,children:(0,o.jsxs)("div",{className:i.TitleCardContent,children:[(0,o.jsx)("div",{className:(0,t.A)(i.TitleCardTitle),style:{textAlign:"left",fontWeight:"bold"},children:e}),(0,o.jsx)("hr",{className:(0,t.A)(i.TitleCardSeparator),style:{margin:"12px 0"}}),(0,o.jsx)("p",{className:(0,t.A)(i.TextColor),children:n})]})})},11470:(e,n,a)=>{a.d(n,{A:()=>C});var t=a(96540),i=a(34164),l=a(23104),o=a(56347),r=a(205),s=a(57485),c=a(31682),m=a(70679);function p(e){return t.Children.toArray(e).filter(e=>"\n"!==e).map(e=>{if(!e||(0,t.isValidElement)(e)&&function(e){const{props:n}=e;return!!n&&"object"==typeof n&&"value"in n}(e))return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)})?.filter(Boolean)??[]}function g(e){const{values:n,children:a}=e;return(0,t.useMemo)(()=>{const e=n??function(e){return p(e).map(({props:{value:e,label:n,attributes:a,default:t}})=>({value:e,label:n,attributes:a,default:t}))}(a);return function(e){const n=(0,c.XI)(e,(e,n)=>e.value===n.value);if(n.length>0)throw new Error(`Docusaurus error: Duplicate values "${n.map(e=>e.value).join(", ")}" found in <Tabs>. Every value needs to be unique.`)}(e),e},[n,a])}function d({value:e,tabValues:n}){return n.some(n=>n.value===e)}function h({queryString:e=!1,groupId:n}){const a=(0,o.W6)(),i=function({queryString:e=!1,groupId:n}){if("string"==typeof e)return e;if(!1===e)return null;if(!0===e&&!n)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return n??null}({queryString:e,groupId:n});return[(0,s.aZ)(i),(0,t.useCallback)(e=>{if(!i)return;const n=new URLSearchParams(a.location.search);n.set(i,e),a.replace({...a.location,search:n.toString()})},[i,a])]}function u(e){const{defaultValue:n,queryString:a=!1,groupId:i}=e,l=g(e),[o,s]=(0,t.useState)(()=>function({defaultValue:e,tabValues:n}){if(0===n.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(e){if(!d({value:e,tabValues:n}))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${e}" but none of its children has the corresponding value. Available values are: ${n.map(e=>e.value).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return e}const a=n.find(e=>e.default)??n[0];if(!a)throw new Error("Unexpected error: 0 tabValues");return a.value}({defaultValue:n,tabValues:l})),[c,p]=h({queryString:a,groupId:i}),[u,f]=function({groupId:e}){const n=function(e){return e?`docusaurus.tab.${e}`:null}(e),[a,i]=(0,m.Dv)(n);return[a,(0,t.useCallback)(e=>{n&&i.set(e)},[n,i])]}({groupId:i}),w=(()=>{const e=c??u;return d({value:e,tabValues:l})?e:null})();(0,r.A)(()=>{w&&s(w)},[w]);return{selectedValue:o,selectValue:(0,t.useCallback)(e=>{if(!d({value:e,tabValues:l}))throw new Error(`Can't select invalid tab value=${e}`);s(e),p(e),f(e)},[p,f,l]),tabValues:l}}var f=a(92303);const w={tabList:"tabList__CuJ",tabItem:"tabItem_LNqP"};var _=a(74848);function x({className:e,block:n,selectedValue:a,selectValue:t,tabValues:o}){const r=[],{blockElementScrollPositionUntilNextRender:s}=(0,l.a_)(),c=e=>{const n=e.currentTarget,i=r.indexOf(n),l=o[i].value;l!==a&&(s(n),t(l))},m=e=>{let n=null;switch(e.key){case"Enter":c(e);break;case"ArrowRight":{const a=r.indexOf(e.currentTarget)+1;n=r[a]??r[0];break}case"ArrowLeft":{const a=r.indexOf(e.currentTarget)-1;n=r[a]??r[r.length-1];break}}n?.focus()};return(0,_.jsx)("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,i.A)("tabs",{"tabs--block":n},e),children:o.map(({value:e,label:n,attributes:t})=>(0,_.jsx)("li",{role:"tab",tabIndex:a===e?0:-1,"aria-selected":a===e,ref:e=>{r.push(e)},onKeyDown:m,onClick:c,...t,className:(0,i.A)("tabs__item",w.tabItem,t?.className,{"tabs__item--active":a===e}),children:n??e},e))})}function y({lazy:e,children:n,selectedValue:a}){const l=(Array.isArray(n)?n:[n]).filter(Boolean);if(e){const e=l.find(e=>e.props.value===a);return e?(0,t.cloneElement)(e,{className:(0,i.A)("margin-top--md",e.props.className)}):null}return(0,_.jsx)("div",{className:"margin-top--md",children:l.map((e,n)=>(0,t.cloneElement)(e,{key:n,hidden:e.props.value!==a}))})}function b(e){const n=u(e);return(0,_.jsxs)("div",{className:(0,i.A)("tabs-container",w.tabList),children:[(0,_.jsx)(x,{...n,...e}),(0,_.jsx)(y,{...n,...e})]})}function C(e){const n=(0,f.A)();return(0,_.jsx)(b,{...e,children:p(e.children)},String(n))}},19365:(e,n,a)=>{a.d(n,{A:()=>o});a(96540);var t=a(34164);const i={tabItem:"tabItem_Ymn6"};var l=a(74848);function o({children:e,hidden:n,className:a}){return(0,l.jsx)("div",{role:"tabpanel",className:(0,t.A)(i.tabItem,a),hidden:n,children:e})}},28453:(e,n,a)=>{a.d(n,{R:()=>o,x:()=>r});var t=a(96540);const i={},l=t.createContext(i);function o(e){const n=t.useContext(l);return t.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function r(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:o(e.components),t.createElement(l.Provider,{value:n},e.children)}},48653:(e,n,a)=>{a.r(n),a.d(n,{assets:()=>p,contentTitle:()=>m,default:()=>h,frontMatter:()=>c,metadata:()=>t,toc:()=>g});const t=JSON.parse('{"id":"tracing/app-instrumentation/automatic","title":"Automatic Tracing","description":"MLflow Tracing is integrated with various GenAI libraries and provides one-line automatic tracing experience for each library (and the combination of them!). This page shows detailed examples to integrate MLflow with popular GenAI libraries.","source":"@site/docs/genai/tracing/app-instrumentation/automatic.mdx","sourceDirName":"tracing/app-instrumentation","slug":"/tracing/app-instrumentation/automatic","permalink":"/mlflow-website/docs/latest/genai/tracing/app-instrumentation/automatic","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{},"sidebar":"genAISidebar","previous":{"title":"Instrument Your App with MLflow Tracing","permalink":"/mlflow-website/docs/latest/genai/tracing/app-instrumentation/"},"next":{"title":"Manual Tracing","permalink":"/mlflow-website/docs/latest/genai/tracing/app-instrumentation/manual-tracing"}}');var i=a(74848),l=a(28453),o=a(49374),r=(a(10493),a(69576)),s=(a(11470),a(19365),a(66927));const c={},m="Automatic Tracing",p={},g=[{value:"Supported Integrations",id:"supported-integrations",level:2},{value:"Advanced Usage",id:"advanced-usage",level:2},{value:"Combining Manual and Automatic Tracing",id:"combining-manual-and-automatic-tracing",level:3},{value:"Multi-Framework Example",id:"multi-framework-example",level:3},{value:"Disabling Tracing",id:"disabling-tracing",level:2},{value:"Next Steps",id:"next-steps",level:2}];function d(e){const n={a:"a",admonition:"admonition",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",...(0,l.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.header,{children:(0,i.jsx)(n.h1,{id:"automatic-tracing",children:"Automatic Tracing"})}),"\n",(0,i.jsxs)(n.p,{children:["MLflow Tracing is integrated with various GenAI libraries and provides ",(0,i.jsx)(n.strong,{children:"one-line automatic tracing"})," experience for each library (and the combination of them!). This page shows detailed examples to integrate MLflow with popular GenAI libraries."]}),"\n",(0,i.jsx)(s.A,{src:"/images/llms/tracing/tracing-top.gif",alt:"Tracing Gateway Video"}),"\n",(0,i.jsx)(n.h2,{id:"supported-integrations",children:"Supported Integrations"}),"\n",(0,i.jsx)(n.p,{children:"Each integration automatically captures your application's logic and intermediate steps based on your implementation of the authoring framework / SDK. Click on the logo of your library to see the detailed integration guide."}),"\n",(0,i.jsx)(r.A,{cardGroupProps:{isSmall:!0}}),"\n",(0,i.jsx)("br",{}),"\n",(0,i.jsx)(n.admonition,{title:"Missing your favorite library?",type:"info",children:(0,i.jsxs)(n.p,{children:["Is your favorite library missing from the list? Consider ",(0,i.jsx)("ins",{children:(0,i.jsx)(n.a,{href:"/genai/tracing/integrations/contribute",children:"contributing to MLflow Tracing"})})," or ",(0,i.jsx)("ins",{children:(0,i.jsx)(n.a,{href:"https://github.com/mlflow/mlflow/issues/new?assignees=&labels=enhancement&projects=&template=feature_request_template.yaml&title=%5BFR%5D",children:"submitting a feature request"})})," to our Github repository."]})}),"\n",(0,i.jsx)(n.h2,{id:"advanced-usage",children:"Advanced Usage"}),"\n",(0,i.jsx)(n.h3,{id:"combining-manual-and-automatic-tracing",children:"Combining Manual and Automatic Tracing"}),"\n",(0,i.jsxs)(n.p,{children:["The ",(0,i.jsx)(n.code,{children:"@mlflow.trace"})," decorator can be used in conjunction with auto tracing to create powerful, integrated traces. This is particularly useful for:"]}),"\n",(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsxs)(n.li,{children:["\ud83d\udd04 ",(0,i.jsx)(n.strong,{children:"Complex workflows"})," that involve multiple LLM calls"]}),"\n",(0,i.jsxs)(n.li,{children:["\ud83e\udd16 ",(0,i.jsx)(n.strong,{children:"Multi-agent systems"})," where different agents use different LLM providers"]}),"\n",(0,i.jsxs)(n.li,{children:["\ud83d\udd17 ",(0,i.jsx)(n.strong,{children:"Chaining multiple LLM calls"})," together with custom logic in between"]}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:"Here's a simple example that combines OpenAI auto-tracing with manually defined spans:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-python",children:'import mlflow\nimport openai\nfrom mlflow.entities import SpanType\n\nmlflow.openai.autolog()\n\n\n@mlflow.trace(span_type=SpanType.CHAIN)\ndef run(question):\n    messages = build_messages(question)\n    # MLflow automatically generates a span for OpenAI invocation\n    response = openai.OpenAI().chat.completions.create(\n        model="gpt-4o-mini",\n        max_tokens=100,\n        messages=messages,\n    )\n    return parse_response(response)\n\n\n@mlflow.trace\ndef build_messages(question):\n    return [\n        {"role": "system", "content": "You are a helpful chatbot."},\n        {"role": "user", "content": question},\n    ]\n\n\n@mlflow.trace\ndef parse_response(response):\n    return response.choices[0].message.content\n\n\nrun("What is MLflow?")\n'})}),"\n",(0,i.jsx)(n.p,{children:"Running this code generates a single trace that combines the manual spans with the automatic OpenAI tracing."}),"\n",(0,i.jsx)(n.h3,{id:"multi-framework-example",children:"Multi-Framework Example"}),"\n",(0,i.jsx)(n.p,{children:"You can also combine different LLM providers in a single trace. For example:"}),"\n",(0,i.jsxs)(n.admonition,{type:"note",children:[(0,i.jsx)(n.p,{children:"This example requires installing LangChain in addition to the base requirements:"}),(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"pip install --upgrade langchain langchain-openai\n"})})]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-python",children:'import mlflow\nimport openai\nfrom mlflow.entities import SpanType\nfrom langchain_openai import ChatOpenAI\nfrom langchain_core.prompts import ChatPromptTemplate\n\n# Enable auto-tracing for both OpenAI and LangChain\nmlflow.openai.autolog()\nmlflow.langchain.autolog()\n\n\n@mlflow.trace(span_type=SpanType.CHAIN)\ndef multi_provider_workflow(query: str):\n    # First, use OpenAI directly for initial processing\n    analysis = openai.OpenAI().chat.completions.create(\n        model="gpt-4o-mini",\n        messages=[\n            {"role": "system", "content": "Analyze the query and extract key topics."},\n            {"role": "user", "content": query},\n        ],\n    )\n    topics = analysis.choices[0].message.content\n\n    # Then use LangChain for structured processing\n    llm = ChatOpenAI(model="gpt-4o-mini")\n    prompt = ChatPromptTemplate.from_template(\n        "Based on these topics: {topics}\\nGenerate a detailed response to: {query}"\n    )\n    chain = prompt | llm\n    response = chain.invoke({"topics": topics, "query": query})\n\n    return response\n\n\n# Run the function\nresult = multi_provider_workflow("Explain quantum computing")\n'})}),"\n",(0,i.jsx)(n.h2,{id:"disabling-tracing",children:"Disabling Tracing"}),"\n",(0,i.jsxs)(n.p,{children:["To ",(0,i.jsx)(n.strong,{children:"disable"})," tracing, the ",(0,i.jsx)(o.B,{fn:"mlflow.tracing.disable"})," API will cease the collection of trace data from within MLflow and will not log\nany data to the MLflow Tracking service regarding traces."]}),"\n",(0,i.jsxs)(n.p,{children:["To ",(0,i.jsx)(n.strong,{children:"enable"})," tracing (if it had been temporarily disabled), the ",(0,i.jsx)(o.B,{fn:"mlflow.tracing.enable"})," API will re-enable tracing functionality for instrumented models\nthat are invoked."]}),"\n",(0,i.jsx)(n.h2,{id:"next-steps",children:"Next Steps"}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.a,{href:"/genai/tracing/app-instrumentation/manual-tracing",children:"Manual Tracing"})}),": Learn how to add custom tracing to your application logic"]}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.a,{href:"/genai/tracing/integrations",children:"Integration Guides"})}),": Explore detailed guides for specific libraries and frameworks"]}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.a,{href:"/genai/tracing/observe-with-traces/ui",children:"Viewing Traces"})}),": Learn how to explore and analyze your traces in the MLflow UI"]}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.a,{href:"/genai/tracing/search-traces",children:"Querying Traces"})}),": Programmatically search and retrieve trace data for analysis"]})]})}function h(e={}){const{wrapper:n}={...(0,l.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(d,{...e})}):d(e)}},49374:(e,n,a)=>{a.d(n,{B:()=>r});a(96540);const t=JSON.parse('{"mlflow.ag2":"api_reference/python_api/mlflow.ag2.html","mlflow.anthropic":"api_reference/python_api/mlflow.anthropic.html","mlflow.artifacts":"api_reference/python_api/mlflow.artifacts.html","mlflow.autogen":"api_reference/python_api/mlflow.autogen.html","mlflow.bedrock":"api_reference/python_api/mlflow.bedrock.html","mlflow.catboost":"api_reference/python_api/mlflow.catboost.html","mlflow.client":"api_reference/python_api/mlflow.client.html","mlflow.config":"api_reference/python_api/mlflow.config.html","mlflow.crewai":"api_reference/python_api/mlflow.crewai.html","mlflow.data":"api_reference/python_api/mlflow.data.html","mlflow.deployments":"api_reference/python_api/mlflow.deployments.html","mlflow.diviner":"api_reference/python_api/mlflow.diviner.html","mlflow.dspy":"api_reference/python_api/mlflow.dspy.html","mlflow.entities":"api_reference/python_api/mlflow.entities.html","mlflow.environment_variables":"api_reference/python_api/mlflow.environment_variables.html","mlflow.gateway":"api_reference/python_api/mlflow.gateway.html","mlflow.gemini":"api_reference/python_api/mlflow.gemini.html","mlflow.genai":"api_reference/python_api/mlflow.genai.html","mlflow.groq":"api_reference/python_api/mlflow.groq.html","mlflow.h2o":"api_reference/python_api/mlflow.h2o.html","mlflow.johnsnowlabs":"api_reference/python_api/mlflow.johnsnowlabs.html","mlflow.keras":"api_reference/python_api/mlflow.keras.html","mlflow.langchain":"api_reference/python_api/mlflow.langchain.html","mlflow.lightgbm":"api_reference/python_api/mlflow.lightgbm.html","mlflow.litellm":"api_reference/python_api/mlflow.litellm.html","mlflow.llama_index":"api_reference/python_api/mlflow.llama_index.html","mlflow.metrics":"api_reference/python_api/mlflow.metrics.html","mlflow.mistral":"api_reference/python_api/mlflow.mistral.html","mlflow.models":"api_reference/python_api/mlflow.models.html","mlflow.onnx":"api_reference/python_api/mlflow.onnx.html","mlflow.openai":"api_reference/python_api/mlflow.openai.html","mlflow.paddle":"api_reference/python_api/mlflow.paddle.html","mlflow.pmdarima":"api_reference/python_api/mlflow.pmdarima.html","mlflow.projects":"api_reference/python_api/mlflow.projects.html","mlflow.promptflow":"api_reference/python_api/mlflow.promptflow.html","mlflow.prophet":"api_reference/python_api/mlflow.prophet.html","mlflow.pydantic_ai":"api_reference/python_api/mlflow.pydantic_ai.html","mlflow.pyfunc":"api_reference/python_api/mlflow.pyfunc.html","mlflow.pyspark.ml":"api_reference/python_api/mlflow.pyspark.ml.html","mlflow.pytorch":"api_reference/python_api/mlflow.pytorch.html","mlflow":"api_reference/python_api/mlflow.html","mlflow.sagemaker":"api_reference/python_api/mlflow.sagemaker.html","mlflow.sentence_transformers":"api_reference/python_api/mlflow.sentence_transformers.html","mlflow.server":"api_reference/python_api/mlflow.server.html","mlflow.shap":"api_reference/python_api/mlflow.shap.html","mlflow.sklearn":"api_reference/python_api/mlflow.sklearn.html","mlflow.smolagents":"api_reference/python_api/mlflow.smolagents.html","mlflow.spacy":"api_reference/python_api/mlflow.spacy.html","mlflow.spark":"api_reference/python_api/mlflow.spark.html","mlflow.statsmodels":"api_reference/python_api/mlflow.statsmodels.html","mlflow.system_metrics":"api_reference/python_api/mlflow.system_metrics.html","mlflow.tensorflow":"api_reference/python_api/mlflow.tensorflow.html","mlflow.tracing":"api_reference/python_api/mlflow.tracing.html","mlflow.transformers":"api_reference/python_api/mlflow.transformers.html","mlflow.types":"api_reference/python_api/mlflow.types.html","mlflow.utils":"api_reference/python_api/mlflow.utils.html","mlflow.xgboost":"api_reference/python_api/mlflow.xgboost.html","mlflow.server.auth":"api_reference/auth/python-api.html","mlflow.server.cli":"api_reference/cli.html","mlflow.r":"api_reference/R-api.html","mlflow.java":"api_reference/java_api/index.html","mlflow.python":"api_reference/python_api/index.html","mlflow.rest":"api_reference/rest-api.html","mlflow.llms.deployments.api":"api_reference/llms/deployments/api.html"}');var i=a(86025),l=a(74848);const o=e=>{const n=e.split(".");for(let a=n.length;a>0;a--){const e=n.slice(0,a).join(".");if(t[e])return e}return null};function r({fn:e,children:n,hash:a}){const r=o(e);if(!r)return(0,l.jsx)(l.Fragment,{children:n});const s=(0,i.Ay)(`/${t[r]}#${a??e}`);return(0,l.jsx)("a",{href:s,target:"_blank",children:n??(0,l.jsxs)("code",{children:[e,"()"]})})}},66927:(e,n,a)=>{a.d(n,{A:()=>o});a(96540);const t={container:"container_JwLF",imageWrapper:"imageWrapper_RfGN",image:"image_bwOA",caption:"caption_jo2G"};var i=a(86025),l=a(74848);function o({src:e,alt:n,width:a,caption:o,className:r}){return(0,l.jsxs)("div",{className:`${t.container} ${r||""}`,children:[(0,l.jsx)("div",{className:t.imageWrapper,style:a?{width:a}:{},children:(0,l.jsx)("img",{src:(0,i.Ay)(e),alt:n,className:t.image})}),o&&(0,l.jsx)("p",{className:t.caption,children:o})]})}},69576:(e,n,a)=>{a.d(n,{A:()=>r});a(96540);var t=a(10493),i=a(86025),l=a(74848);const o=[{id:"openai",name:"OpenAI",logoPath:"/images/logos/openai-logo.png",link:"/genai/tracing/integrations/listing/openai"},{id:"langchain",name:"LangChain",logoPath:"/images/logos/langchain-logo.png",link:"/genai/tracing/integrations/listing/langchain"},{id:"langgraph",name:"LangGraph",logoPath:"/images/logos/langgraph-logo.png",link:"/genai/tracing/integrations/listing/langgraph"},{id:"llama_index",name:"LlamaIndex",logoPath:"/images/logos/llamaindex-logo.svg",link:"/genai/tracing/integrations/listing/llama_index"},{id:"anthropic",name:"Anthropic",logoPath:"/images/logos/anthropic-logo.svg",link:"/genai/tracing/integrations/listing/anthropic"},{id:"dspy",name:"DSPy",logoPath:"/images/logos/dspy-logo.png",link:"/genai/tracing/integrations/listing/dspy"},{id:"bedrock",name:"Bedrock",logoPath:"/images/logos/bedrock-logo.png",link:"/genai/tracing/integrations/listing/bedrock"},{id:"semantic_kernel",name:"Semantic Kernel",logoPath:"/images/logos/semantic-kernel-logo.png",link:"/genai/tracing/integrations/listing/semantic_kernel"},{id:"autogen",name:"AutoGen",logoPath:"/images/logos/autogen-logo.png",link:"/genai/tracing/integrations/listing/autogen"},{id:"ag2",name:"AG2",logoPath:"/images/logos/ag2-logo.png",link:"/genai/tracing/integrations/listing/ag2"},{id:"gemini",name:"Gemini",logoPath:"/images/logos/google-gemini-logo.svg",link:"/genai/tracing/integrations/listing/gemini"},{id:"litellm",name:"LiteLLM",logoPath:"/images/logos/litellm-logo.jpg",link:"/genai/tracing/integrations/listing/litellm"},{id:"crewai",name:"CrewAI",logoPath:"/images/logos/crewai-logo.png",link:"/genai/tracing/integrations/listing/crewai"},{id:"openai-agent",name:"OpenAI Agent",logoPath:"/images/logos/openai-agent-logo.png",link:"/genai/tracing/integrations/listing/openai-agent"},{id:"ollama",name:"Ollama",logoPath:"/images/logos/ollama-logo.png",link:"/genai/tracing/integrations/listing/ollama"},{id:"pydantic_ai",name:"PydanticAI",logoPath:"/images/logos/pydanticai-logo.png",link:"/genai/tracing/integrations/listing/pydantic_ai"},{id:"agno",name:"Agno",logoPath:"/images/logos/agno-logo.png",link:"/genai/tracing/integrations/listing/agno"},{id:"smolagents",name:"Smolagents",logoPath:"/images/logos/smolagents-logo.png",link:"/genai/tracing/integrations/listing/smolagents"},{id:"groq",name:"Groq",logoPath:"/images/logos/groq-logo.svg",link:"/genai/tracing/integrations/listing/groq"},{id:"mistral",name:"Mistral",logoPath:"/images/logos/mistral-ai-logo.svg",link:"/genai/tracing/integrations/listing/mistral"},{id:"instructor",name:"Instructor",logoPath:"/images/logos/instructor-logo.svg",link:"/genai/tracing/integrations/listing/instructor"},{id:"strands",name:"Strands Agent SDK",logoPath:"/images/logos/strands-logo.png",link:"/genai/tracing/integrations/listing/strands"},{id:"deepseek",name:"DeepSeek",logoPath:"/images/logos/deepseek-logo.png",link:"/genai/tracing/integrations/listing/deepseek"},{id:"txtai",name:"txtai",logoPath:"/images/logos/txtai-logo.png",link:"/genai/tracing/integrations/listing/txtai"}],r=({cardGroupProps:e={}})=>(0,l.jsx)(t.AC,{...e,children:o.map(e=>(0,l.jsx)(t.$3,{link:e.link,children:(0,l.jsx)("span",{children:(0,l.jsx)("img",{src:(0,i.Ay)(e.logoPath),alt:`${e.name} Logo`})})},e.id))})}}]);