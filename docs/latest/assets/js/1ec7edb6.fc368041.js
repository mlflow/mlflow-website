"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[8804],{28453:(e,t,n)=>{n.d(t,{R:()=>o,x:()=>l});var i=n(96540);const s={},r=i.createContext(s);function o(e){const t=i.useContext(r);return i.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function l(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:o(e.components),i.createElement(r.Provider,{value:t},e.children)}},35364:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>d,contentTitle:()=>a,default:()=>m,frontMatter:()=>l,metadata:()=>i,toc:()=>c});const i=JSON.parse('{"id":"getting-started/registering-first-model/index","title":"Tutorial Overview","description":"The MLflow Model Registry has several core components:","source":"@site/docs/getting-started/registering-first-model/index.mdx","sourceDirName":"getting-started/registering-first-model","slug":"/getting-started/registering-first-model/","permalink":"/docs/latest/getting-started/registering-first-model/","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{},"sidebar":"docsSidebar","previous":{"title":"Hyperparameter Tuning Tutorial","permalink":"/docs/latest/getting-started/quickstart-2/"},"next":{"title":"Register a Model","permalink":"/docs/latest/getting-started/registering-first-model/step1-register-model/"}}');var s=n(74848),r=n(28453),o=n(56289);const l={},a="Tutorial Overview",d={},c=[];function g(e){const t={h1:"h1",header:"header",li:"li",p:"p",strong:"strong",ul:"ul",...(0,r.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(t.header,{children:(0,s.jsx)(t.h1,{id:"tutorial-overview",children:"Tutorial Overview"})}),"\n",(0,s.jsx)(t.p,{children:"The MLflow Model Registry has several core components:"}),"\n",(0,s.jsxs)(t.ul,{children:["\n",(0,s.jsxs)(t.li,{children:["A ",(0,s.jsx)(t.strong,{children:"Centralized Model Store"})," is a single location for your MLflow models, facilitating model\nversioning, sharing, and deployment in a consistent and efficient manner."]}),"\n",(0,s.jsxs)(t.li,{children:["A ",(0,s.jsx)(t.strong,{children:"Set of APIs"})," that allow you to programmatically create, read, update, and delete models."]}),"\n",(0,s.jsxs)(t.li,{children:["A ",(0,s.jsx)(t.strong,{children:"GUI"})," that allows you to manually view and manage models in the centralized model store."]}),"\n"]}),"\n",(0,s.jsx)(t.p,{children:"The MLflow Model Registry provides some additional functionality that is relevant to model\ndevelopment and deployment:"}),"\n",(0,s.jsxs)(t.ul,{children:["\n",(0,s.jsxs)(t.li,{children:[(0,s.jsx)(t.strong,{children:"Model Versioning"})," refers to logging different iterations of a model to facilitate comparison\nand serving. By default, models are versioned with a monotonically increasing ID, but you can also\nalias model versions."]}),"\n",(0,s.jsxs)(t.li,{children:[(0,s.jsx)(t.strong,{children:"Model Aliasing"})," allows you to assign mutable, named references to particular versions of a\nmodel, simplifying model deployment."]}),"\n",(0,s.jsxs)(t.li,{children:[(0,s.jsx)(t.strong,{children:"Model Tagging"})," allows users to label models with custom key-value pairs, facilitating\ndocumentation and categorization."]}),"\n",(0,s.jsxs)(t.li,{children:[(0,s.jsx)(t.strong,{children:"Model Annotations"})," are descriptive notes added to a model."]}),"\n"]}),"\n",(0,s.jsx)(t.p,{children:"In this tutorial, you will get up and running with the MLflow model registry in the least amount of\nsteps possible. The topics in this tutorial cover:"}),"\n",(0,s.jsxs)(t.ul,{children:["\n",(0,s.jsx)(t.li,{children:"Registering a model programmatically to the Model Registry while logging."}),"\n",(0,s.jsx)(t.li,{children:"Viewing the registered model in the MLflow UI."}),"\n",(0,s.jsx)(t.li,{children:"Loading a registered model for inference."}),"\n"]}),"\n",(0,s.jsx)(o.A,{className:"button button--primary",to:"step1-register-model",children:(0,s.jsx)("span",{children:"View the tutorial"})})]})}function m(e={}){const{wrapper:t}={...(0,r.R)(),...e.components};return t?(0,s.jsx)(t,{...e,children:(0,s.jsx)(g,{...e})}):g(e)}}}]);