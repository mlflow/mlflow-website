"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[5801],{2896:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>s,default:()=>h,frontMatter:()=>r,metadata:()=>a,toc:()=>c});const a=JSON.parse('{"id":"tracking/tutorials/local-database/index","title":"Tracking Experiments with Local Database","description":"In this tutorial, you will learn how to use a local database to track your experiment metadata with MLflow.","source":"@site/docs/classic-ml/tracking/tutorials/local-database/index.mdx","sourceDirName":"tracking/tutorials/local-database","slug":"/tracking/tutorials/local-database/","permalink":"/docs/latest/ml/tracking/tutorials/local-database/","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{},"sidebar":"classicMLSidebar","previous":{"title":"Backend Store \ud83d\uddc4\ufe0f","permalink":"/docs/latest/ml/tracking/backend-stores/"},"next":{"title":"Remote Experiment Tracking with MLflow Tracking Server","permalink":"/docs/latest/ml/tracking/tutorials/remote-server/"}}');var o=n(74848),i=n(28453);const r={},s="Tracking Experiments with Local Database",l={},c=[{value:"Step 1. Get MLflow",id:"step-1-get-mlflow",level:2},{value:"Step 2. Configure MLflow to Log to SQLite Database",id:"step-2-configure-mlflow-to-log-to-sqlite-database",level:2},{value:"Step 3. Start Logging",id:"step-3-start-logging",level:2},{value:"Step 4. View Your Logged Run in Tracking UI",id:"step-4-view-your-logged-run-in-tracking-ui",level:2},{value:"What&#39;s Next?",id:"whats-next",level:2}];function d(e){const t={a:"a",admonition:"admonition",code:"code",em:"em",h1:"h1",h2:"h2",header:"header",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,i.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(t.header,{children:(0,o.jsx)(t.h1,{id:"tracking-experiments-with-local-database",children:"Tracking Experiments with Local Database"})}),"\n",(0,o.jsx)(t.p,{children:"In this tutorial, you will learn how to use a local database to track your experiment metadata with MLflow."}),"\n",(0,o.jsxs)(t.p,{children:["By default, MLflow Tracking logs (",(0,o.jsx)(t.em,{children:"writes"}),") run data to local files,\nwhich may cause some frustration due to fractured small files and the lack of a simple access interface. Also, if you are using Python, you can use SQLite that runs\nupon your local file system (e.g. ",(0,o.jsx)(t.code,{children:"mlruns.db"}),") and has a built-in client ",(0,o.jsx)(t.code,{children:"sqlite3"}),", eliminating the effort to install any additional dependencies and setting up database server."]}),"\n",(0,o.jsx)(t.h2,{id:"step-1-get-mlflow",children:"Step 1. Get MLflow"}),"\n",(0,o.jsx)(t.p,{children:"MLflow is available on PyPI. If you don't already have it installed on your local machine, you can install it with:"}),"\n",(0,o.jsx)(t.pre,{children:(0,o.jsx)(t.code,{className:"language-bash",children:"pip install mlflow\n"})}),"\n",(0,o.jsx)(t.h2,{id:"step-2-configure-mlflow-to-log-to-sqlite-database",children:"Step 2. Configure MLflow to Log to SQLite Database"}),"\n",(0,o.jsxs)(t.p,{children:["To point MLflow to your local SQLite database, you need to set the environment variable ",(0,o.jsx)(t.code,{children:"MLFLOW_TRACKING_URI"})," (e.g., ",(0,o.jsx)(t.code,{children:"sqlite:///mlruns.db"}),").\nThis will create a SQLite database file (",(0,o.jsx)(t.code,{children:"mlruns.db"}),") in the current directory. Specify a different path if you want to store the database file in a different location."]}),"\n",(0,o.jsx)(t.pre,{children:(0,o.jsx)(t.code,{className:"language-bash",children:"export MLFLOW_TRACKING_URI=sqlite:///mlruns.db\n"})}),"\n",(0,o.jsx)(t.p,{children:"If you are in a notebook, run the following cell instead:"}),"\n",(0,o.jsx)(t.pre,{children:(0,o.jsx)(t.code,{children:"%env MLFLOW_TRACKING_URI=sqlite:///mlruns.db\n"})}),"\n",(0,o.jsx)(t.admonition,{type:"note",children:(0,o.jsx)(t.p,{children:"For using a SQLite database, MLflow automatically creates a new database if it does not exist. If you want to use a different database, you need to create the database first."})}),"\n",(0,o.jsx)(t.h2,{id:"step-3-start-logging",children:"Step 3. Start Logging"}),"\n",(0,o.jsx)(t.p,{children:"Now you are ready to start logging your experiment runs. For example, the following code runs training for a scikit-learn RandomForest model on the diabetes dataset:"}),"\n",(0,o.jsx)(t.pre,{children:(0,o.jsx)(t.code,{className:"language-python",children:"import mlflow\n\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.datasets import load_diabetes\nfrom sklearn.ensemble import RandomForestRegressor\n\nmlflow.sklearn.autolog()\n\ndb = load_diabetes()\nX_train, X_test, y_train, y_test = train_test_split(db.data, db.target)\n\n# Create and train models.\nrf = RandomForestRegressor(n_estimators=100, max_depth=6, max_features=3)\nrf.fit(X_train, y_train)\n\n# Use the model to make predictions on the test dataset.\npredictions = rf.predict(X_test)\n"})}),"\n",(0,o.jsx)(t.h2,{id:"step-4-view-your-logged-run-in-tracking-ui",children:"Step 4. View Your Logged Run in Tracking UI"}),"\n",(0,o.jsxs)(t.p,{children:["Once your training job finishes, you can run the following command to launch the MLflow UI (You will have to specify the path to SQLite database file with ",(0,o.jsx)(t.code,{children:"--backend-store-uri"})," option):"]}),"\n",(0,o.jsx)(t.pre,{children:(0,o.jsx)(t.code,{className:"language-bash",children:"mlflow ui --port 8080 --backend-store-uri sqlite:///mlruns.db\n"})}),"\n",(0,o.jsxs)(t.p,{children:["Then, navigate to ",(0,o.jsx)(t.a,{href:"http://localhost:8080",children:(0,o.jsx)(t.code,{children:"http://localhost:8080"})})," in your browser to view the results."]}),"\n",(0,o.jsx)(t.h2,{id:"whats-next",children:"What's Next?"}),"\n",(0,o.jsx)(t.p,{children:"You've now learned how to connect MLflow Tracking with a remote storage and a database."}),"\n",(0,o.jsx)(t.p,{children:"There are a couple of more advanced topics you can explore:"}),"\n",(0,o.jsxs)(t.ul,{children:["\n",(0,o.jsxs)(t.li,{children:[(0,o.jsx)(t.strong,{children:"Remote environment setup for team development"}),": While storing runs and experiments data in local machine is perfectly fine for solo development, you should\nconsider using ",(0,o.jsx)(t.a,{href:"/ml/tracking#tracking_server",children:"MLflow Tracking Server"})," when you set up a team collaboration environment with MLflow Tracking. Read the\n",(0,o.jsx)(t.a,{href:"/ml/tracking/tutorials/remote-server",children:"Remote Experiment Tracking with MLflow Tracking Server"})," tutorial to learn more."]}),"\n"]})]})}function h(e={}){const{wrapper:t}={...(0,i.R)(),...e.components};return t?(0,o.jsx)(t,{...e,children:(0,o.jsx)(d,{...e})}):d(e)}},28453:(e,t,n)=>{n.d(t,{R:()=>r,x:()=>s});var a=n(96540);const o={},i=a.createContext(o);function r(e){const t=a.useContext(i);return a.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function s(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:r(e.components),a.createElement(i.Provider,{value:t},e.children)}}}]);