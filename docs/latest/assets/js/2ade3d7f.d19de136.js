/*! For license information please see 2ade3d7f.d19de136.js.LICENSE.txt */
"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[9379],{6789:(e,t,n)=>{n.d(t,{A:()=>c});n(96540);var a=n(28774),l=n(34164);const o={tileCard:"tileCard_NHsj",tileIcon:"tileIcon_pyoR",tileLink:"tileLink_iUbu",tileImage:"tileImage_O4So"};var r=n(86025),i=n(21122),s=n(74848);function c({icon:e,image:t,imageDark:n,imageWidth:c,imageHeight:p,iconSize:h=32,containerHeight:u,title:d,description:m,href:f,linkText:g="Learn more \u2192",className:w}){if(!e&&!t)throw new Error("TileCard requires either an icon or image prop");const v=u?{height:`${u}px`}:{},y={};return c&&(y.width=`${c}px`),p&&(y.height=`${p}px`),(0,s.jsxs)(a.A,{href:f,className:(0,l.A)(o.tileCard,w),children:[(0,s.jsx)("div",{className:o.tileIcon,style:v,children:e?(0,s.jsx)(e,{size:h}):n?(0,s.jsx)(i.A,{sources:{light:(0,r.Ay)(t),dark:(0,r.Ay)(n)},alt:d,className:o.tileImage,style:y}):(0,s.jsx)("img",{src:(0,r.Ay)(t),alt:d,className:o.tileImage,style:y})}),(0,s.jsx)("h3",{children:d}),(0,s.jsx)("p",{children:m}),(0,s.jsx)("div",{className:o.tileLink,children:g})]})}},11470:(e,t,n)=>{n.d(t,{A:()=>b});var a=n(96540),l=n(34164),o=n(23104),r=n(56347),i=n(205),s=n(57485),c=n(31682),p=n(70679);function h(e){return a.Children.toArray(e).filter(e=>"\n"!==e).map(e=>{if(!e||(0,a.isValidElement)(e)&&function(e){const{props:t}=e;return!!t&&"object"==typeof t&&"value"in t}(e))return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)})?.filter(Boolean)??[]}function u(e){const{values:t,children:n}=e;return(0,a.useMemo)(()=>{const e=t??function(e){return h(e).map(({props:{value:e,label:t,attributes:n,default:a}})=>({value:e,label:t,attributes:n,default:a}))}(n);return function(e){const t=(0,c.XI)(e,(e,t)=>e.value===t.value);if(t.length>0)throw new Error(`Docusaurus error: Duplicate values "${t.map(e=>e.value).join(", ")}" found in <Tabs>. Every value needs to be unique.`)}(e),e},[t,n])}function d({value:e,tabValues:t}){return t.some(t=>t.value===e)}function m({queryString:e=!1,groupId:t}){const n=(0,r.W6)(),l=function({queryString:e=!1,groupId:t}){if("string"==typeof e)return e;if(!1===e)return null;if(!0===e&&!t)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return t??null}({queryString:e,groupId:t});return[(0,s.aZ)(l),(0,a.useCallback)(e=>{if(!l)return;const t=new URLSearchParams(n.location.search);t.set(l,e),n.replace({...n.location,search:t.toString()})},[l,n])]}function f(e){const{defaultValue:t,queryString:n=!1,groupId:l}=e,o=u(e),[r,s]=(0,a.useState)(()=>function({defaultValue:e,tabValues:t}){if(0===t.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(e){if(!d({value:e,tabValues:t}))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${e}" but none of its children has the corresponding value. Available values are: ${t.map(e=>e.value).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return e}const n=t.find(e=>e.default)??t[0];if(!n)throw new Error("Unexpected error: 0 tabValues");return n.value}({defaultValue:t,tabValues:o})),[c,h]=m({queryString:n,groupId:l}),[f,g]=function({groupId:e}){const t=function(e){return e?`docusaurus.tab.${e}`:null}(e),[n,l]=(0,p.Dv)(t);return[n,(0,a.useCallback)(e=>{t&&l.set(e)},[t,l])]}({groupId:l}),w=(()=>{const e=c??f;return d({value:e,tabValues:o})?e:null})();(0,i.A)(()=>{w&&s(w)},[w]);return{selectedValue:r,selectValue:(0,a.useCallback)(e=>{if(!d({value:e,tabValues:o}))throw new Error(`Can't select invalid tab value=${e}`);s(e),h(e),g(e)},[h,g,o]),tabValues:o}}var g=n(92303);const w={tabList:"tabList__CuJ",tabItem:"tabItem_LNqP"};var v=n(74848);function y({className:e,block:t,selectedValue:n,selectValue:a,tabValues:r}){const i=[],{blockElementScrollPositionUntilNextRender:s}=(0,o.a_)(),c=e=>{const t=e.currentTarget,l=i.indexOf(t),o=r[l].value;o!==n&&(s(t),a(o))},p=e=>{let t=null;switch(e.key){case"Enter":c(e);break;case"ArrowRight":{const n=i.indexOf(e.currentTarget)+1;t=i[n]??i[0];break}case"ArrowLeft":{const n=i.indexOf(e.currentTarget)-1;t=i[n]??i[i.length-1];break}}t?.focus()};return(0,v.jsx)("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,l.A)("tabs",{"tabs--block":t},e),children:r.map(({value:e,label:t,attributes:a})=>(0,v.jsx)("li",{role:"tab",tabIndex:n===e?0:-1,"aria-selected":n===e,ref:e=>{i.push(e)},onKeyDown:p,onClick:c,...a,className:(0,l.A)("tabs__item",w.tabItem,a?.className,{"tabs__item--active":n===e}),children:t??e},e))})}function _({lazy:e,children:t,selectedValue:n}){const o=(Array.isArray(t)?t:[t]).filter(Boolean);if(e){const e=o.find(e=>e.props.value===n);return e?(0,a.cloneElement)(e,{className:(0,l.A)("margin-top--md",e.props.className)}):null}return(0,v.jsx)("div",{className:"margin-top--md",children:o.map((e,t)=>(0,a.cloneElement)(e,{key:t,hidden:e.props.value!==n}))})}function x(e){const t=f(e);return(0,v.jsxs)("div",{className:(0,l.A)("tabs-container",w.tabList),children:[(0,v.jsx)(y,{...t,...e}),(0,v.jsx)(_,{...t,...e})]})}function b(e){const t=(0,g.A)();return(0,v.jsx)(x,{...e,children:h(e.children)},String(t))}},19365:(e,t,n)=>{n.d(t,{A:()=>r});n(96540);var a=n(34164);const l={tabItem:"tabItem_Ymn6"};var o=n(74848);function r({children:e,hidden:t,className:n}){return(0,o.jsx)("div",{role:"tabpanel",className:(0,a.A)(l.tabItem,n),hidden:t,children:e})}},28453:(e,t,n)=>{n.d(t,{R:()=>r,x:()=>i});var a=n(96540);const l={},o=a.createContext(l);function r(e){const t=a.useContext(o);return a.useMemo(function(){return"function"==typeof e?e(t):{...t,...e}},[t,e])}function i(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(l):e.components||l:r(e.components),a.createElement(o.Provider,{value:t},e.children)}},42292:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>x,contentTitle:()=>_,default:()=>k,frontMatter:()=>y,metadata:()=>a,toc:()=>b});const a=JSON.parse('{"id":"eval-monitor/running-evaluation/agents","title":"Evaluating Agents","description":"AI Agents are an emerging pattern of GenAI applications that can use tools, make decisions, and execute multi-step workflows. However, evaluating the performance of those complex agents is challenging. MLflow provides a powerful toolkit to systematically evaluate the agent behavior precisely using traces and scorers.","source":"@site/docs/genai/eval-monitor/running-evaluation/agents.mdx","sourceDirName":"eval-monitor/running-evaluation","slug":"/eval-monitor/running-evaluation/agents","permalink":"/mlflow-website/docs/latest/genai/eval-monitor/running-evaluation/agents","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{},"sidebar":"genAISidebar","previous":{"title":"Evaluate Prompts","permalink":"/mlflow-website/docs/latest/genai/eval-monitor/running-evaluation/prompts"},"next":{"title":"Evaluate Traces","permalink":"/mlflow-website/docs/latest/genai/eval-monitor/running-evaluation/traces"}}');var l=n(74848),o=n(28453),r=(n(11470),n(19365),n(49374)),i=n(66927),s=(n(47020),n(96869)),c=n(65592),p=n(6789),h=n(42640),u=n(51004),d=n(47792),m=n(85731),f=n(93164),g=n(96844),w=n(47504),v=n(51307);const y={},_="Evaluating Agents",x={},b=[{value:"Workflow",id:"workflow",level:2},{value:"Example: Evaluating a Tool-Calling Agent",id:"example-evaluating-a-tool-calling-agent",level:2},{value:"Prerequisites",id:"prerequisites",level:3},...v.RM,{value:"Step 1: Build an agent",id:"step-1-build-an-agent",level:3},{value:"Step 2: Create evaluation dataset",id:"step-2-create-evaluation-dataset",level:3},{value:"Step 3: Define agent-specific scorers",id:"step-3-define-agent-specific-scorers",level:3},{value:"Step 4: Run the evaluation",id:"step-4-run-the-evaluation",level:3},{value:"Configure parallelization",id:"configure-parallelization",level:2},{value:"Evaluating MLflow Models",id:"evaluating-mlflow-models",level:2},{value:"Next steps",id:"next-steps",level:2}];function j(e){const t={a:"a",admonition:"admonition",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",p:"p",pre:"pre",strong:"strong",...(0,o.R)(),...e.components};return(0,l.jsxs)(l.Fragment,{children:[(0,l.jsx)(t.header,{children:(0,l.jsx)(t.h1,{id:"evaluating-agents",children:"Evaluating Agents"})}),"\n",(0,l.jsx)(t.p,{children:"AI Agents are an emerging pattern of GenAI applications that can use tools, make decisions, and execute multi-step workflows. However, evaluating the performance of those complex agents is challenging. MLflow provides a powerful toolkit to systematically evaluate the agent behavior precisely using traces and scorers."}),"\n",(0,l.jsx)(i.A,{src:"/images/mlflow-3/eval-monitor/agent-evaluation-hero.png",alt:"Agent Evaluation",width:"95%"}),"\n",(0,l.jsx)(t.h2,{id:"workflow",children:"Workflow"}),"\n",(0,l.jsx)(s.A,{steps:[{icon:h.A,title:"Build your agent",description:"Create an AI agent with tools, instructions, and capabilities for your specific use case."},{icon:u.A,title:"Create evaluation dataset",description:"Design test cases with inputs and expectations for both outputs and agent behaviors like tool usage."},{icon:d.A,title:"Define agent-specific scorers",description:"Create scorers that evaluate multi-step agent behaviors using traces."},{icon:m.A,title:"Run evaluation",description:"Execute the evaluation and analyze both final outputs and intermediate agent behaviors in MLflow UI."}]}),"\n",(0,l.jsx)(t.h2,{id:"example-evaluating-a-tool-calling-agent",children:"Example: Evaluating a Tool-Calling Agent"}),"\n",(0,l.jsx)(t.h3,{id:"prerequisites",children:"Prerequisites"}),"\n",(0,l.jsx)(t.p,{children:"First, install the required packages by running the following command:"}),"\n",(0,l.jsx)(t.pre,{children:(0,l.jsx)(t.code,{className:"language-bash",children:"pip install --upgrade mlflow>=3.3 openai\n"})}),"\n",(0,l.jsx)(t.p,{children:"MLflow stores evaluation results in a tracking server. Connect your local environment to the tracking server by one of the following methods."}),"\n",(0,l.jsx)(v.Ay,{}),"\n",(0,l.jsx)(t.h3,{id:"step-1-build-an-agent",children:"Step 1: Build an agent"}),"\n",(0,l.jsxs)(t.p,{children:["Create a math agent that can use tools to answer questions. We use ",(0,l.jsx)(t.a,{href:"/genai/tracing/integrations/listing/openai-agent",children:"OpenAI Agents"})," to build the tool-calling agent in a few lines of code."]}),"\n",(0,l.jsx)(t.pre,{children:(0,l.jsx)(t.code,{className:"language-python",children:'from agents import Agent, Runner, function_tool\n\n\n@function_tool\ndef add(a: float, b: float) -> float:\n    """Adds two numbers."""\n    return a + b\n\n\n@function_tool\ndef multiply(a: float, b: float) -> float:\n    """Multiply two numbers."""\n    return a * b\n\n\n@function_tool\ndef modular(a: int, b: int) -> int:\n    """Modular arithmetic"""\n    return a % b\n\n\nagent = Agent(\n    name="Math Agent",\n    instructions=(\n        "You will be given a math question. Calculate the answer using the given calculator tools. "\n        "Return the final number only as an integer."\n    ),\n    tools=[add, multiply, modular],\n)\n'})}),"\n",(0,l.jsx)(t.p,{children:"Make sure you can run the agent locally."}),"\n",(0,l.jsx)(t.pre,{children:(0,l.jsx)(t.code,{className:"language-python",children:'from agents import Runner\n\nresult = await Runner.run(agent, "What is 15% of 240?")\nprint(result.final_output)\n# 36\n'})}),"\n",(0,l.jsx)(t.p,{children:"Lastly, let's wrap it in a function that MLflow can call. Note that MLflow runs each prediction in a threadpool,\nso using a synchronous function does not slow down the evaluation."}),"\n",(0,l.jsx)(t.pre,{children:(0,l.jsx)(t.code,{className:"language-python",children:"from openai import OpenAI\n\n# If you are using Jupyter Notebook, you need to apply nest_asyncio.\n# import nest_asyncio\n# nest_asyncio.apply()\n\n\ndef predict_fn(question: str) -> str:\n    return Runner.run_sync(agent, question).final_output\n"})}),"\n",(0,l.jsx)(t.h3,{id:"step-2-create-evaluation-dataset",children:"Step 2: Create evaluation dataset"}),"\n",(0,l.jsxs)(t.p,{children:["Design test cases as a list of dictionaries, each with an ",(0,l.jsx)(t.code,{children:"inputs"})," and ",(0,l.jsx)(t.code,{children:"expectations"})," field. We would like to evaluate the correctness of the output, but also the tool calls used by the agent."]}),"\n",(0,l.jsx)(t.pre,{children:(0,l.jsx)(t.code,{className:"language-python",children:'eval_dataset = [\n    {\n        "inputs": {"task": "What is 15% of 240?"},\n        "expectations": {"answer": 36, "tool_calls": ["multiply"]},\n    },\n    {\n        "inputs": {\n            "task": "I have 8 cookies and 3 friends. How many more cookies should I buy to share equally?"\n        },\n        "expectations": {"answer": 1, "tool_calls": ["modular", "add"]},\n    },\n    {\n        "inputs": {\n            "task": "I bought 2 shares of stock at $100 each. It\'s now worth $150. How much profit did I make?"\n        },\n        "expectations": {"answer": 100, "tool_calls": ["add", "multiply"]},\n    },\n]\n'})}),"\n",(0,l.jsx)(t.h3,{id:"step-3-define-agent-specific-scorers",children:"Step 3: Define agent-specific scorers"}),"\n",(0,l.jsx)(t.p,{children:"Create scorers that evaluate agent-specific behaviors."}),"\n",(0,l.jsxs)(t.admonition,{type:"tip",children:[(0,l.jsxs)(t.p,{children:["MLflow's scorer can take the ",(0,l.jsx)(t.strong,{children:"Trace"})," from the agent execution. Trace is a powerful way to evaluate the agent's behavior precisely, not only the final output. For example, here we use the ",(0,l.jsx)(r.B,{fn:"mlflow.entities.Trace.search_spans",children:(0,l.jsx)(t.code,{children:"Trace.search_spans"})})," method to extract the order of tool calls and compare it with the expected tool calls."]}),(0,l.jsxs)(t.p,{children:["For more details, see the ",(0,l.jsx)("ins",{children:(0,l.jsx)(t.a,{href:"/genai/eval-monitor/running-evaluation/traces",children:"Evaluate Traces"})})," guide."]})]}),"\n",(0,l.jsx)(t.pre,{children:(0,l.jsx)(t.code,{className:"language-python",children:'from mlflow.entities import Feedback, SpanType, Trace\nfrom mlflow.genai import scorer\n\n\n@scorer\ndef exact_match(outputs, expectations) -> bool:\n    return int(outputs) == expectations["answer"]\n\n\n@scorer\ndef uses_correct_tools(trace: Trace, expectations: dict) -> Feedback:\n    """Evaluate if agent used tools appropriately"""\n    expected_tools = expectations["tool_calls"]\n\n    # Parse the trace to get the actual tool calls\n    tool_spans = trace.search_spans(span_type=SpanType.TOOL)\n    tool_names = [span.name for span in tool_spans]\n\n    score = "yes" if tool_names == expected_tools else "no"\n    rationale = (\n        "The agent used the correct tools."\n        if tool_names == expected_tools\n        else f"The agent used the incorrect tools: {tool_names}"\n    )\n    # Return a Feedback object with the score and rationale\n    return Feedback(value=score, rationale=rationale)\n'})}),"\n",(0,l.jsx)(t.h3,{id:"step-4-run-the-evaluation",children:"Step 4: Run the evaluation"}),"\n",(0,l.jsx)(t.p,{children:"Now we are ready to run the evaluation!"}),"\n",(0,l.jsx)(t.pre,{children:(0,l.jsx)(t.code,{className:"language-python",children:"results = mlflow.genai.evaluate(\n    data=eval_dataset, predict_fn=predict_fn, scorers=[exact_match, uses_correct_tools]\n)\n"})}),"\n",(0,l.jsx)(t.p,{children:"Once the evaluation is done, open the MLflow UI in your browser and navigate to the experiment page. You should see MLflow creates a new Run and logs the evaluation results."}),"\n",(0,l.jsx)(i.A,{src:"/images/mlflow-3/eval-monitor/agent-evaluation-result.png",alt:"Agent Evaluation",width:"95%"}),"\n",(0,l.jsxs)(t.p,{children:["It seems the agent does not call tools in the correct order for the second test case. Let's click on the row to ",(0,l.jsx)(t.strong,{children:"open the trace and inspect what happened under the hood"}),"."]}),"\n",(0,l.jsx)(i.A,{src:"/images/mlflow-3/eval-monitor/agent-evaluation-trace.png",alt:"Agent Evaluation",width:"95%"}),"\n",(0,l.jsx)(t.p,{children:"By looking at the trace, we can figure out the agent computes the answer in three steps (1) compute 100 _ 2 (2) compute 150 _ 2 (3) subtract the two results. However, the more effective way is (1) subtract 100 from 150 (2) multiply the result by 2. In the next version, we can update the system instruction to use tools in a more effective way."}),"\n",(0,l.jsx)(t.h2,{id:"configure-parallelization",children:"Configure parallelization"}),"\n",(0,l.jsxs)(t.p,{children:["Running a complex agent can take a long time. MLflow by default uses background threadpool to speed up the evaluation process. You can configure the number of workers to use by setting the ",(0,l.jsx)(t.code,{children:"MLFLOW_GENAI_EVAL_MAX_WORKERS"})," environment variable."]}),"\n",(0,l.jsx)(t.pre,{children:(0,l.jsx)(t.code,{className:"language-bash",children:"export MLFLOW_GENAI_EVAL_MAX_WORKERS=10\n"})}),"\n",(0,l.jsx)(t.h2,{id:"evaluating-mlflow-models",children:"Evaluating MLflow Models"}),"\n",(0,l.jsxs)(t.p,{children:["In MLflow 2.x, you can pass the model URI directly to the ",(0,l.jsx)(t.code,{children:"model"})," argument of the legacy ",(0,l.jsx)(r.B,{fn:"mlflow.evaluate"})," API (deprecated). The new GenAI evaluation API in MLflow ",(0,l.jsx)(t.strong,{children:"3.x"})," still support evaluating MLflow Models, but the workflow is slightly different."]}),"\n",(0,l.jsx)(t.pre,{children:(0,l.jsx)(t.code,{className:"language-python",children:'import mlflow\n\n# Load the model **outside** the prediction function.\nmodel = mlflow.pyfunc.load_model("models:/math_agent/1")\n\n\n# Wrap the model in a function that MLflow can call.\ndef predict_fn(question: str) -> str:\n    return model.predict(question)\n\n\n# Run the evaluation as usual.\nmlflow.genai.evaluate(\n    data=eval_dataset, predict_fn=predict_fn, scorers=[exact_match, uses_correct_tools]\n)\n'})}),"\n",(0,l.jsx)(t.h2,{id:"next-steps",children:"Next steps"}),"\n",(0,l.jsxs)(c.A,{children:[(0,l.jsx)(p.A,{icon:f.A,iconSize:48,title:"Customize Scorers",description:"Build advanced evaluation criteria and metrics specifically designed for agent behaviors and tool usage patterns.",href:"/genai/eval-monitor/scorers",linkText:"Create custom scorers \u2192",containerHeight:64}),(0,l.jsx)(p.A,{icon:g.A,iconSize:48,title:"Evaluate Production Traces",description:"Analyze real agent executions in production environments to understand performance and identify improvement opportunities.",href:"/genai/eval-monitor/running-evaluation/traces",linkText:"Analyze traces \u2192",containerHeight:64}),(0,l.jsx)(p.A,{icon:w.A,iconSize:48,title:"Collect User Feedback",description:"Gather human feedback on agent performance to create training data and improve evaluation accuracy.",href:"/genai/assessments/feedback",linkText:"Start collecting \u2192",containerHeight:64})]})]})}function k(e={}){const{wrapper:t}={...(0,o.R)(),...e.components};return t?(0,l.jsx)(t,{...e,children:(0,l.jsx)(j,{...e})}):j(e)}},42640:(e,t,n)=>{n.d(t,{A:()=>a});const a=(0,n(84722).A)("bot",[["path",{d:"M12 8V4H8",key:"hb8ula"}],["rect",{width:"16",height:"12",x:"4",y:"8",rx:"2",key:"enze0r"}],["path",{d:"M2 14h2",key:"vft8re"}],["path",{d:"M20 14h2",key:"4cs60a"}],["path",{d:"M15 13v2",key:"1xurst"}],["path",{d:"M9 13v2",key:"rq6x2g"}]])},47020:(e,t,n)=>{n.d(t,{A:()=>o});n(96540);const a={wrapper:"wrapper_sf5q"};var l=n(74848);function o({children:e}){return(0,l.jsx)("div",{className:a.wrapper,children:e})}},47504:(e,t,n)=>{n.d(t,{A:()=>a});const a=(0,n(84722).A)("message-square",[["path",{d:"M21 15a2 2 0 0 1-2 2H7l-4 4V5a2 2 0 0 1 2-2h14a2 2 0 0 1 2 2z",key:"1lielz"}]])},47792:(e,t,n)=>{n.d(t,{A:()=>a});const a=(0,n(84722).A)("target",[["circle",{cx:"12",cy:"12",r:"10",key:"1mglay"}],["circle",{cx:"12",cy:"12",r:"6",key:"1vlfrh"}],["circle",{cx:"12",cy:"12",r:"2",key:"1c9p78"}]])},49374:(e,t,n)=>{n.d(t,{B:()=>i});n(96540);const a=JSON.parse('{"mlflow.ag2":"api_reference/python_api/mlflow.ag2.html","mlflow.anthropic":"api_reference/python_api/mlflow.anthropic.html","mlflow.artifacts":"api_reference/python_api/mlflow.artifacts.html","mlflow.autogen":"api_reference/python_api/mlflow.autogen.html","mlflow.bedrock":"api_reference/python_api/mlflow.bedrock.html","mlflow.catboost":"api_reference/python_api/mlflow.catboost.html","mlflow.client":"api_reference/python_api/mlflow.client.html","mlflow.config":"api_reference/python_api/mlflow.config.html","mlflow.crewai":"api_reference/python_api/mlflow.crewai.html","mlflow.data":"api_reference/python_api/mlflow.data.html","mlflow.deployments":"api_reference/python_api/mlflow.deployments.html","mlflow.diviner":"api_reference/python_api/mlflow.diviner.html","mlflow.dspy":"api_reference/python_api/mlflow.dspy.html","mlflow.entities":"api_reference/python_api/mlflow.entities.html","mlflow.environment_variables":"api_reference/python_api/mlflow.environment_variables.html","mlflow.gateway":"api_reference/python_api/mlflow.gateway.html","mlflow.gemini":"api_reference/python_api/mlflow.gemini.html","mlflow.genai":"api_reference/python_api/mlflow.genai.html","mlflow.groq":"api_reference/python_api/mlflow.groq.html","mlflow.h2o":"api_reference/python_api/mlflow.h2o.html","mlflow.johnsnowlabs":"api_reference/python_api/mlflow.johnsnowlabs.html","mlflow.keras":"api_reference/python_api/mlflow.keras.html","mlflow.langchain":"api_reference/python_api/mlflow.langchain.html","mlflow.lightgbm":"api_reference/python_api/mlflow.lightgbm.html","mlflow.litellm":"api_reference/python_api/mlflow.litellm.html","mlflow.llama_index":"api_reference/python_api/mlflow.llama_index.html","mlflow.metrics":"api_reference/python_api/mlflow.metrics.html","mlflow.mistral":"api_reference/python_api/mlflow.mistral.html","mlflow.models":"api_reference/python_api/mlflow.models.html","mlflow.onnx":"api_reference/python_api/mlflow.onnx.html","mlflow.openai":"api_reference/python_api/mlflow.openai.html","mlflow.paddle":"api_reference/python_api/mlflow.paddle.html","mlflow.pmdarima":"api_reference/python_api/mlflow.pmdarima.html","mlflow.projects":"api_reference/python_api/mlflow.projects.html","mlflow.promptflow":"api_reference/python_api/mlflow.promptflow.html","mlflow.prophet":"api_reference/python_api/mlflow.prophet.html","mlflow.pydantic_ai":"api_reference/python_api/mlflow.pydantic_ai.html","mlflow.pyfunc":"api_reference/python_api/mlflow.pyfunc.html","mlflow.pyspark.ml":"api_reference/python_api/mlflow.pyspark.ml.html","mlflow.pytorch":"api_reference/python_api/mlflow.pytorch.html","mlflow":"api_reference/python_api/mlflow.html","mlflow.sagemaker":"api_reference/python_api/mlflow.sagemaker.html","mlflow.sentence_transformers":"api_reference/python_api/mlflow.sentence_transformers.html","mlflow.server":"api_reference/python_api/mlflow.server.html","mlflow.shap":"api_reference/python_api/mlflow.shap.html","mlflow.sklearn":"api_reference/python_api/mlflow.sklearn.html","mlflow.smolagents":"api_reference/python_api/mlflow.smolagents.html","mlflow.spacy":"api_reference/python_api/mlflow.spacy.html","mlflow.spark":"api_reference/python_api/mlflow.spark.html","mlflow.statsmodels":"api_reference/python_api/mlflow.statsmodels.html","mlflow.system_metrics":"api_reference/python_api/mlflow.system_metrics.html","mlflow.tensorflow":"api_reference/python_api/mlflow.tensorflow.html","mlflow.tracing":"api_reference/python_api/mlflow.tracing.html","mlflow.transformers":"api_reference/python_api/mlflow.transformers.html","mlflow.types":"api_reference/python_api/mlflow.types.html","mlflow.utils":"api_reference/python_api/mlflow.utils.html","mlflow.xgboost":"api_reference/python_api/mlflow.xgboost.html","mlflow.server.auth":"api_reference/auth/python-api.html","mlflow.server.cli":"api_reference/cli.html","mlflow.r":"api_reference/R-api.html","mlflow.java":"api_reference/java_api/index.html","mlflow.python":"api_reference/python_api/index.html","mlflow.rest":"api_reference/rest-api.html","mlflow.llms.deployments.api":"api_reference/llms/deployments/api.html"}');var l=n(86025),o=n(74848);const r=e=>{const t=e.split(".");for(let n=t.length;n>0;n--){const e=t.slice(0,n).join(".");if(a[e])return e}return null};function i({fn:e,children:t,hash:n}){const i=r(e);if(!i)return(0,o.jsx)(o.Fragment,{children:t});const s=(0,l.Ay)(`/${a[i]}#${n??e}`);return(0,o.jsx)("a",{href:s,target:"_blank",children:t??(0,o.jsxs)("code",{children:[e,"()"]})})}},51004:(e,t,n)=>{n.d(t,{A:()=>a});const a=(0,n(84722).A)("database",[["ellipse",{cx:"12",cy:"5",rx:"9",ry:"3",key:"msslwz"}],["path",{d:"M3 5V19A9 3 0 0 0 21 19V5",key:"1wlel7"}],["path",{d:"M3 12A9 3 0 0 0 21 12",key:"mv7ke4"}]])},51307:(e,t,n)=>{n.d(t,{Ay:()=>p,RM:()=>s});var a=n(74848),l=n(28453),o=n(11470),r=n(19365),i=n(47020);const s=[];function c(e){const t={a:"a",admonition:"admonition",code:"code",p:"p",pre:"pre",...(0,l.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(i.A,{children:(0,a.jsxs)(o.A,{children:[(0,a.jsxs)(r.A,{value:"local",label:"Local (pip)",default:!0,children:[(0,a.jsxs)(t.p,{children:["For the fastest setup, you can install the ",(0,a.jsx)(t.a,{href:"https://pypi.org/project/mlflow/",children:"mlflow"})," Python package and run MLflow locally:"]}),(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-bash",children:"mlflow ui --backend-store-uri sqlite:///mlflow.db --port 5000\n"})}),(0,a.jsxs)(t.p,{children:["This will start the server at port 5000 on your local machine. Connect your notebook/IDE to the server by setting the tracking URI. You can also access to the MLflow UI at ",(0,a.jsx)(t.a,{href:"http://localhost:5000",children:"http://localhost:5000"}),"."]}),(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-python",children:'import mlflow\n\nmlflow.set_tracking_uri("http://localhost:5000")\n'})}),(0,a.jsxs)(t.p,{children:["You can also brows the MLflow UI at ",(0,a.jsx)(t.a,{href:"http://localhost:5000",children:"http://localhost:5000"}),"."]})]}),(0,a.jsxs)(r.A,{value:"docker",label:"Local (docker)",children:[(0,a.jsx)(t.p,{children:"MLflow provides a Docker Compose file to start a local MLflow server with a postgres database and a minio server."}),(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-bash",children:"git clone https://github.com/mlflow/mlflow.git\ncd docker-compose\ncp .env.dev.example .env\ndocker compose up -d\n"})}),(0,a.jsxs)(t.p,{children:["This will start the server at port 5000 on your local machine. Connect your notebook/IDE to the server by setting the tracking URI. You can also access to the MLflow UI at ",(0,a.jsx)(t.a,{href:"http://localhost:5000",children:"http://localhost:5000"}),"."]}),(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-python",children:'import mlflow\n\nmlflow.set_tracking_uri("http://localhost:5000")\n'})}),(0,a.jsxs)(t.p,{children:["Refer to the ",(0,a.jsx)(t.a,{href:"https://github.com/mlflow/mlflow/tree/master/docker-compose/README.md",children:"instruction"})," for more details, e.g., overriding the default environment variables."]})]}),(0,a.jsxs)(r.A,{value:"remote",label:"Remote MLflow Server",children:[(0,a.jsx)(t.p,{children:"If you have a remote MLflow tracking server, configure the connection:"}),(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-python",children:'import os\nimport mlflow\n\n# Set your MLflow tracking URI\nos.environ["MLFLOW_TRACKING_URI"] = "http://your-mlflow-server:5000"\n# Or directly in code\nmlflow.set_tracking_uri("http://your-mlflow-server:5000")\n'})})]}),(0,a.jsxs)(r.A,{value:"databricks",label:"Databricks",children:[(0,a.jsx)(t.p,{children:"If you have a Databricks account, configure the connection:"}),(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-python",children:"import mlflow\n\nmlflow.login()\n"})}),(0,a.jsx)(t.p,{children:"This will prompt you for your configuration details (Databricks Host url and a PAT)."})]})]})}),"\n",(0,a.jsx)(t.admonition,{type:"tip",children:(0,a.jsxs)(t.p,{children:["If you are unsure about how to set up an MLflow tracking server, you can start with the cloud-based MLflow powered by Databricks: ",(0,a.jsx)("ins",{children:(0,a.jsx)(t.a,{href:"https://login.databricks.com/?destination_url=%2Fml%2Fexperiments-signup%3Fsource%3DTRY_MLFLOW&dbx_source=TRY_MLFLOW&signup_experience_step=EXPRESS&provider=MLFLOW&utm_source=mlflow_org&tuuid=a9534f33-78bf-4b81-becc-4334e993251d&rl_aid=e6685d78-9f85-4fed-b64f-08e247f53547&intent=SIGN_UP",children:"Sign up for free \u2192"})})]})})]})}function p(e={}){const{wrapper:t}={...(0,l.R)(),...e.components};return t?(0,a.jsx)(t,{...e,children:(0,a.jsx)(c,{...e})}):c(e)}},65592:(e,t,n)=>{n.d(t,{A:()=>r});n(96540);var a=n(34164);const l={tilesGrid:"tilesGrid_hB9N"};var o=n(74848);function r({children:e,className:t}){return(0,o.jsx)("div",{className:(0,a.A)(l.tilesGrid,t),children:e})}},66927:(e,t,n)=>{n.d(t,{A:()=>r});n(96540);const a={container:"container_JwLF",imageWrapper:"imageWrapper_RfGN",image:"image_bwOA",caption:"caption_jo2G"};var l=n(86025),o=n(74848);function r({src:e,alt:t,width:n,caption:r,className:i}){return(0,o.jsxs)("div",{className:`${a.container} ${i||""}`,children:[(0,o.jsx)("div",{className:a.imageWrapper,style:n?{width:n}:{},children:(0,o.jsx)("img",{src:(0,l.Ay)(e),alt:t,className:a.image})}),r&&(0,o.jsx)("p",{className:a.caption,children:r})]})}},84722:(e,t,n)=>{n.d(t,{A:()=>c});var a=n(96540);const l=e=>{const t=(e=>e.replace(/^([A-Z])|[\s-_]+(\w)/g,(e,t,n)=>n?n.toUpperCase():t.toLowerCase()))(e);return t.charAt(0).toUpperCase()+t.slice(1)},o=(...e)=>e.filter((e,t,n)=>Boolean(e)&&""!==e.trim()&&n.indexOf(e)===t).join(" ").trim(),r=e=>{for(const t in e)if(t.startsWith("aria-")||"role"===t||"title"===t)return!0};var i={xmlns:"http://www.w3.org/2000/svg",width:24,height:24,viewBox:"0 0 24 24",fill:"none",stroke:"currentColor",strokeWidth:2,strokeLinecap:"round",strokeLinejoin:"round"};const s=(0,a.forwardRef)(({color:e="currentColor",size:t=24,strokeWidth:n=2,absoluteStrokeWidth:l,className:s="",children:c,iconNode:p,...h},u)=>(0,a.createElement)("svg",{ref:u,...i,width:t,height:t,stroke:e,strokeWidth:l?24*Number(n)/Number(t):n,className:o("lucide",s),...!c&&!r(h)&&{"aria-hidden":"true"},...h},[...p.map(([e,t])=>(0,a.createElement)(e,t)),...Array.isArray(c)?c:[c]])),c=(e,t)=>{const n=(0,a.forwardRef)(({className:n,...r},i)=>{return(0,a.createElement)(s,{ref:i,iconNode:t,className:o(`lucide-${c=l(e),c.replace(/([a-z0-9])([A-Z])/g,"$1-$2").toLowerCase()}`,`lucide-${e}`,n),...r});var c});return n.displayName=l(e),n}},85731:(e,t,n)=>{n.d(t,{A:()=>a});const a=(0,n(84722).A)("play",[["polygon",{points:"6 3 20 12 6 21 6 3",key:"1oa8hb"}]])},93164:(e,t,n)=>{n.d(t,{A:()=>a});const a=(0,n(84722).A)("code",[["path",{d:"m16 18 6-6-6-6",key:"eg8j8"}],["path",{d:"m8 6-6 6 6 6",key:"ppft3o"}]])},96844:(e,t,n)=>{n.d(t,{A:()=>a});const a=(0,n(84722).A)("activity",[["path",{d:"M22 12h-2.48a2 2 0 0 0-1.93 1.46l-2.35 8.36a.25.25 0 0 1-.48 0L9.24 2.18a.25.25 0 0 0-.48 0l-2.35 8.36A2 2 0 0 1 4.49 12H2",key:"169zse"}]])},96869:(e,t,n)=>{n.d(t,{A:()=>w});n(96540);const a="workflowContainer__N1v",l="workflowTitle_QrAr",o="stepsContainer_IGeu",r="screenshotContainer_OwzZ",i="stepItem_GyHJ",s="stepIndicator_U2Wb",c="stepNumber_vINc",p="stepNumberText_eLd7",h="stepConnector_Si86",u="stepContent_D0CA",d="stepTitle_wujx",m="stepDescription_PIaE";var f=n(66927),g=n(74848);const w=({steps:e,title:t,screenshot:n})=>(0,g.jsxs)("div",{className:a,children:[t&&(0,g.jsx)("h3",{className:l,children:t}),n&&(0,g.jsx)("div",{className:r,children:(0,g.jsx)(f.A,{src:n.src,alt:n.alt,width:n.width||"90%"})}),(0,g.jsx)("div",{className:o,children:e.map((t,n)=>(0,g.jsxs)("div",{className:i,children:[(0,g.jsxs)("div",{className:s,children:[(0,g.jsx)("div",{className:c,children:t.icon?(0,g.jsx)(t.icon,{size:16}):(0,g.jsx)("span",{className:p,children:n+1})}),n<e.length-1&&(0,g.jsx)("div",{className:h})]}),(0,g.jsxs)("div",{className:u,children:[(0,g.jsx)("h4",{className:d,children:t.title}),(0,g.jsx)("p",{className:m,children:t.description})]})]},n))})]})}}]);