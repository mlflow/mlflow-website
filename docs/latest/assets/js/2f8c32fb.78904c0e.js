/*! For license information please see 2f8c32fb.78904c0e.js.LICENSE.txt */
"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[1871],{3160:(e,n,i)=>{i.d(n,{A:()=>t});const t=(0,i(84722).A)("eye",[["path",{d:"M2.062 12.348a1 1 0 0 1 0-.696 10.75 10.75 0 0 1 19.876 0 1 1 0 0 1 0 .696 10.75 10.75 0 0 1-19.876 0",key:"1nclc0"}],["circle",{cx:"12",cy:"12",r:"3",key:"1v7zrd"}]])},6789:(e,n,i)=>{i.d(n,{A:()=>c});i(96540);var t=i(28774),o=i(34164);const l={tileCard:"tileCard_NHsj",tileIcon:"tileIcon_pyoR",tileLink:"tileLink_iUbu",tileImage:"tileImage_O4So"};var r=i(86025),a=i(21122),s=i(74848);function c({icon:e,image:n,imageDark:i,imageWidth:c,imageHeight:p,iconSize:m=32,containerHeight:d,title:h,description:f,href:g,linkText:w="Learn more \u2192",className:y}){if(!e&&!n)throw new Error("TileCard requires either an icon or image prop");const u=d?{height:`${d}px`}:{},_={};return c&&(_.width=`${c}px`),p&&(_.height=`${p}px`),(0,s.jsxs)(t.A,{href:g,className:(0,o.A)(l.tileCard,y),children:[(0,s.jsx)("div",{className:l.tileIcon,style:u,children:e?(0,s.jsx)(e,{size:m}):i?(0,s.jsx)(a.A,{sources:{light:(0,r.Ay)(n),dark:(0,r.Ay)(i)},alt:h,className:l.tileImage,style:_}):(0,s.jsx)("img",{src:(0,r.Ay)(n),alt:h,className:l.tileImage,style:_})}),(0,s.jsx)("h3",{children:h}),(0,s.jsx)("p",{children:f}),(0,s.jsx)("div",{className:l.tileLink,children:w})]})}},22492:(e,n,i)=>{i.d(n,{A:()=>t});const t=(0,i(84722).A)("shield",[["path",{d:"M20 13c0 5-3.5 7.5-7.66 8.95a1 1 0 0 1-.67-.01C7.5 20.5 4 18 4 13V6a1 1 0 0 1 1-1c2 0 4.5-1.2 6.24-2.72a1.17 1.17 0 0 1 1.52 0C14.51 3.81 17 5 19 5a1 1 0 0 1 1 1z",key:"oel41y"}]])},28453:(e,n,i)=>{i.d(n,{R:()=>r,x:()=>a});var t=i(96540);const o={},l=t.createContext(o);function r(e){const n=t.useContext(l);return t.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:r(e.components),t.createElement(l.Provider,{value:n},e.children)}},47792:(e,n,i)=>{i.d(n,{A:()=>t});const t=(0,i(84722).A)("target",[["circle",{cx:"12",cy:"12",r:"10",key:"1mglay"}],["circle",{cx:"12",cy:"12",r:"6",key:"1vlfrh"}],["circle",{cx:"12",cy:"12",r:"2",key:"1c9p78"}]])},49374:(e,n,i)=>{i.d(n,{B:()=>a});i(96540);const t=JSON.parse('{"mlflow.ag2":"api_reference/python_api/mlflow.ag2.html","mlflow.anthropic":"api_reference/python_api/mlflow.anthropic.html","mlflow.artifacts":"api_reference/python_api/mlflow.artifacts.html","mlflow.autogen":"api_reference/python_api/mlflow.autogen.html","mlflow.bedrock":"api_reference/python_api/mlflow.bedrock.html","mlflow.catboost":"api_reference/python_api/mlflow.catboost.html","mlflow.client":"api_reference/python_api/mlflow.client.html","mlflow.config":"api_reference/python_api/mlflow.config.html","mlflow.crewai":"api_reference/python_api/mlflow.crewai.html","mlflow.data":"api_reference/python_api/mlflow.data.html","mlflow.deployments":"api_reference/python_api/mlflow.deployments.html","mlflow.diviner":"api_reference/python_api/mlflow.diviner.html","mlflow.dspy":"api_reference/python_api/mlflow.dspy.html","mlflow.entities":"api_reference/python_api/mlflow.entities.html","mlflow.environment_variables":"api_reference/python_api/mlflow.environment_variables.html","mlflow.gateway":"api_reference/python_api/mlflow.gateway.html","mlflow.gemini":"api_reference/python_api/mlflow.gemini.html","mlflow.genai":"api_reference/python_api/mlflow.genai.html","mlflow.groq":"api_reference/python_api/mlflow.groq.html","mlflow.h2o":"api_reference/python_api/mlflow.h2o.html","mlflow.johnsnowlabs":"api_reference/python_api/mlflow.johnsnowlabs.html","mlflow.keras":"api_reference/python_api/mlflow.keras.html","mlflow.langchain":"api_reference/python_api/mlflow.langchain.html","mlflow.lightgbm":"api_reference/python_api/mlflow.lightgbm.html","mlflow.litellm":"api_reference/python_api/mlflow.litellm.html","mlflow.llama_index":"api_reference/python_api/mlflow.llama_index.html","mlflow.metrics":"api_reference/python_api/mlflow.metrics.html","mlflow.mistral":"api_reference/python_api/mlflow.mistral.html","mlflow.models":"api_reference/python_api/mlflow.models.html","mlflow.onnx":"api_reference/python_api/mlflow.onnx.html","mlflow.openai":"api_reference/python_api/mlflow.openai.html","mlflow.paddle":"api_reference/python_api/mlflow.paddle.html","mlflow.pmdarima":"api_reference/python_api/mlflow.pmdarima.html","mlflow.projects":"api_reference/python_api/mlflow.projects.html","mlflow.promptflow":"api_reference/python_api/mlflow.promptflow.html","mlflow.prophet":"api_reference/python_api/mlflow.prophet.html","mlflow.pydantic_ai":"api_reference/python_api/mlflow.pydantic_ai.html","mlflow.pyfunc":"api_reference/python_api/mlflow.pyfunc.html","mlflow.pyspark.ml":"api_reference/python_api/mlflow.pyspark.ml.html","mlflow.pytorch":"api_reference/python_api/mlflow.pytorch.html","mlflow":"api_reference/python_api/mlflow.html","mlflow.sagemaker":"api_reference/python_api/mlflow.sagemaker.html","mlflow.sentence_transformers":"api_reference/python_api/mlflow.sentence_transformers.html","mlflow.server":"api_reference/python_api/mlflow.server.html","mlflow.shap":"api_reference/python_api/mlflow.shap.html","mlflow.sklearn":"api_reference/python_api/mlflow.sklearn.html","mlflow.smolagents":"api_reference/python_api/mlflow.smolagents.html","mlflow.spacy":"api_reference/python_api/mlflow.spacy.html","mlflow.spark":"api_reference/python_api/mlflow.spark.html","mlflow.statsmodels":"api_reference/python_api/mlflow.statsmodels.html","mlflow.system_metrics":"api_reference/python_api/mlflow.system_metrics.html","mlflow.tensorflow":"api_reference/python_api/mlflow.tensorflow.html","mlflow.tracing":"api_reference/python_api/mlflow.tracing.html","mlflow.transformers":"api_reference/python_api/mlflow.transformers.html","mlflow.types":"api_reference/python_api/mlflow.types.html","mlflow.utils":"api_reference/python_api/mlflow.utils.html","mlflow.xgboost":"api_reference/python_api/mlflow.xgboost.html","mlflow.server.auth":"api_reference/auth/python-api.html","mlflow.server.cli":"api_reference/cli.html","mlflow.r":"api_reference/R-api.html","mlflow.java":"api_reference/java_api/index.html","mlflow.python":"api_reference/python_api/index.html","mlflow.rest":"api_reference/rest-api.html","mlflow.llms.deployments.api":"api_reference/llms/deployments/api.html"}');var o=i(86025),l=i(74848);const r=e=>{const n=e.split(".");for(let i=n.length;i>0;i--){const e=n.slice(0,i).join(".");if(t[e])return e}return null};function a({fn:e,children:n,hash:i}){const a=r(e);if(!a)return(0,l.jsx)(l.Fragment,{children:n});const s=(0,o.Ay)(`/${t[a]}#${i??e}`);return(0,l.jsx)("a",{href:s,target:"_blank",children:n??(0,l.jsxs)("code",{children:[e,"()"]})})}},51004:(e,n,i)=>{i.d(n,{A:()=>t});const t=(0,i(84722).A)("database",[["ellipse",{cx:"12",cy:"5",rx:"9",ry:"3",key:"msslwz"}],["path",{d:"M3 5V19A9 3 0 0 0 21 19V5",key:"1wlel7"}],["path",{d:"M3 12A9 3 0 0 0 21 12",key:"mv7ke4"}]])},60665:(e,n,i)=>{i.d(n,{A:()=>t});const t=(0,i(84722).A)("book-open",[["path",{d:"M12 7v14",key:"1akyts"}],["path",{d:"M3 18a1 1 0 0 1-1-1V4a1 1 0 0 1 1-1h5a4 4 0 0 1 4 4 4 4 0 0 1 4-4h5a1 1 0 0 1 1 1v13a1 1 0 0 1-1 1h-6a3 3 0 0 0-3 3 3 3 0 0 0-3-3z",key:"ruj8y"}]])},61878:(e,n,i)=>{i.d(n,{A:()=>t});const t=(0,i(84722).A)("git-branch",[["line",{x1:"6",x2:"6",y1:"3",y2:"15",key:"17qcm7"}],["circle",{cx:"18",cy:"6",r:"3",key:"1h7g24"}],["circle",{cx:"6",cy:"18",r:"3",key:"fqmcym"}],["path",{d:"M18 9a9 9 0 0 1-9 9",key:"n2h4wq"}]])},65592:(e,n,i)=>{i.d(n,{A:()=>r});i(96540);var t=i(34164);const o={tilesGrid:"tilesGrid_hB9N"};var l=i(74848);function r({children:e,className:n}){return(0,l.jsx)("div",{className:(0,t.A)(o.tilesGrid,n),children:e})}},76316:(e,n,i)=>{i.d(n,{A:()=>t});const t=(0,i(84722).A)("trending-up",[["path",{d:"M16 7h6v6",key:"box55l"}],["path",{d:"m22 7-8.5 8.5-5-5L2 17",key:"1t1m79"}]])},79206:(e,n,i)=>{i.d(n,{A:()=>l});i(96540);const t={conceptOverview:"conceptOverview_x8T_",overviewTitle:"overviewTitle_HyAI",conceptGrid:"conceptGrid_uJNV",conceptCard:"conceptCard_oday",conceptHeader:"conceptHeader_HCk5",conceptIcon:"conceptIcon_gejw",conceptTitle:"conceptTitle_TGMM",conceptDescription:"conceptDescription_ZyDn"};var o=i(74848);function l({concepts:e,title:n}){return(0,o.jsxs)("div",{className:t.conceptOverview,children:[n&&(0,o.jsx)("h3",{className:t.overviewTitle,children:n}),(0,o.jsx)("div",{className:t.conceptGrid,children:e.map((e,n)=>(0,o.jsxs)("div",{className:t.conceptCard,children:[(0,o.jsxs)("div",{className:t.conceptHeader,children:[e.icon&&(0,o.jsx)("div",{className:t.conceptIcon,children:(0,o.jsx)(e.icon,{size:20})}),(0,o.jsx)("h4",{className:t.conceptTitle,children:e.title})]}),(0,o.jsx)("p",{className:t.conceptDescription,children:e.description})]},n))})]})}},80964:(e,n,i)=>{i.d(n,{A:()=>t});const t=(0,i(84722).A)("settings",[["path",{d:"M12.22 2h-.44a2 2 0 0 0-2 2v.18a2 2 0 0 1-1 1.73l-.43.25a2 2 0 0 1-2 0l-.15-.08a2 2 0 0 0-2.73.73l-.22.38a2 2 0 0 0 .73 2.73l.15.1a2 2 0 0 1 1 1.72v.51a2 2 0 0 1-1 1.74l-.15.09a2 2 0 0 0-.73 2.73l.22.38a2 2 0 0 0 2.73.73l.15-.08a2 2 0 0 1 2 0l.43.25a2 2 0 0 1 1 1.73V20a2 2 0 0 0 2 2h.44a2 2 0 0 0 2-2v-.18a2 2 0 0 1 1-1.73l.43-.25a2 2 0 0 1 2 0l.15.08a2 2 0 0 0 2.73-.73l.22-.39a2 2 0 0 0-.73-2.73l-.15-.08a2 2 0 0 1-1-1.74v-.5a2 2 0 0 1 1-1.74l.15-.09a2 2 0 0 0 .73-2.73l-.22-.38a2 2 0 0 0-2.73-.73l-.15.08a2 2 0 0 1-2 0l-.43-.25a2 2 0 0 1-1-1.73V4a2 2 0 0 0-2-2z",key:"1qme2f"}],["circle",{cx:"12",cy:"12",r:"3",key:"1v7zrd"}]])},82238:(e,n,i)=>{i.d(n,{A:()=>l});i(96540);const t={featureHighlights:"featureHighlights_Ardf",highlightItem:"highlightItem_XPnN",highlightIcon:"highlightIcon_SUR8",highlightContent:"highlightContent_d0XP"};var o=i(74848);function l({features:e}){return(0,o.jsx)("div",{className:t.featureHighlights,children:e.map((e,n)=>(0,o.jsxs)("div",{className:t.highlightItem,children:[e.icon&&(0,o.jsx)("div",{className:t.highlightIcon,children:(0,o.jsx)(e.icon,{size:24})}),(0,o.jsxs)("div",{className:t.highlightContent,children:[(0,o.jsx)("h4",{children:e.title}),(0,o.jsx)("p",{children:e.description})]})]},n))})}},84722:(e,n,i)=>{i.d(n,{A:()=>c});var t=i(96540);const o=e=>{const n=(e=>e.replace(/^([A-Z])|[\s-_]+(\w)/g,(e,n,i)=>i?i.toUpperCase():n.toLowerCase()))(e);return n.charAt(0).toUpperCase()+n.slice(1)},l=(...e)=>e.filter((e,n,i)=>Boolean(e)&&""!==e.trim()&&i.indexOf(e)===n).join(" ").trim(),r=e=>{for(const n in e)if(n.startsWith("aria-")||"role"===n||"title"===n)return!0};var a={xmlns:"http://www.w3.org/2000/svg",width:24,height:24,viewBox:"0 0 24 24",fill:"none",stroke:"currentColor",strokeWidth:2,strokeLinecap:"round",strokeLinejoin:"round"};const s=(0,t.forwardRef)(({color:e="currentColor",size:n=24,strokeWidth:i=2,absoluteStrokeWidth:o,className:s="",children:c,iconNode:p,...m},d)=>(0,t.createElement)("svg",{ref:d,...a,width:n,height:n,stroke:e,strokeWidth:o?24*Number(i)/Number(n):i,className:l("lucide",s),...!c&&!r(m)&&{"aria-hidden":"true"},...m},[...p.map(([e,n])=>(0,t.createElement)(e,n)),...Array.isArray(c)?c:[c]])),c=(e,n)=>{const i=(0,t.forwardRef)(({className:i,...r},a)=>{return(0,t.createElement)(s,{ref:a,iconNode:n,className:l(`lucide-${c=o(e),c.replace(/([a-z0-9])([A-Z])/g,"$1-$2").toLowerCase()}`,`lucide-${e}`,i),...r});var c});return i.displayName=o(e),i}},88017:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>j,contentTitle:()=>k,default:()=>I,frontMatter:()=>x,metadata:()=>t,toc:()=>A});const t=JSON.parse('{"id":"version-tracking/index","title":"Version Tracking for GenAI Applications","description":"Understand how MLflow enables version tracking for your complete GenAI applications using LoggedModels, linking code, configurations, evaluations, and traces.","source":"@site/docs/genai/version-tracking/index.mdx","sourceDirName":"version-tracking","slug":"/version-tracking/","permalink":"/mlflow-website/docs/latest/genai/version-tracking/","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{"title":"Version Tracking for GenAI Applications","description":"Understand how MLflow enables version tracking for your complete GenAI applications using LoggedModels, linking code, configurations, evaluations, and traces.","last_update":{"date":"2025-05-23T00:00:00.000Z"}},"sidebar":"genAISidebar","previous":{"title":"Prompt Engineering UI","permalink":"/mlflow-website/docs/latest/genai/prompt-registry/prompt-engineering"},"next":{"title":"Quickstart","permalink":"/mlflow-website/docs/latest/genai/version-tracking/quickstart"}}');var o=i(74848),l=i(28453),r=i(82238),a=i(79206),s=i(65592),c=i(6789),p=i(49374),m=i(86025),d=i(22492),h=i(76316),f=i(3160),g=i(51004),w=i(61878),y=i(93672),u=i(80964),_=i(47792),v=i(60665);const x={title:"Version Tracking for GenAI Applications",description:"Understand how MLflow enables version tracking for your complete GenAI applications using LoggedModels, linking code, configurations, evaluations, and traces.",last_update:{date:new Date("2025-05-23T00:00:00.000Z")}},k="Version Tracking for GenAI Applications",j={},A=[{value:"Why Version Control Matters for GenAI",id:"why-version-control-matters-for-genai",level:2},{value:"How LoggedModel Powers GenAI Version Control",id:"how-loggedmodel-powers-genai-version-control",level:2},{value:"Start Version Tracking in 5 Minutes",id:"start-version-tracking-in-5-minutes",level:2},{value:"Automatic Version Tracking with Git Integration",id:"automatic-version-tracking-with-git-integration",level:3},{value:"Version Management Made Simple",id:"version-management-made-simple",level:3},{value:"Compare Versions Systematically",id:"compare-versions-systematically",level:3},{value:"Prerequisites",id:"prerequisites",level:2},{value:"Advanced Version Tracking Capabilities",id:"advanced-version-tracking-capabilities",level:2}];function b(e){const n={admonition:"admonition",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",hr:"hr",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,l.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(n.header,{children:(0,o.jsx)(n.h1,{id:"version-tracking-for-genai-applications",children:"Version Tracking for GenAI Applications"})}),"\n",(0,o.jsxs)(n.p,{children:["MLflow's ",(0,o.jsx)(n.strong,{children:(0,o.jsx)(p.B,{fn:"mlflow.entities.LoggedModel",children:"LoggedModel"})})," provides systematic version control for your entire GenAI application\u2014code, configurations, evaluations, and traces. Stop losing track of what works and start building with confidence through complete application lifecycle management."]}),"\n",(0,o.jsx)("div",{style:{margin:"2rem 0",textAlign:"center"},children:(0,o.jsx)("img",{src:(0,m.Ay)("/images/mlflow-3/genai/logged_model_autolog_traces.png"),alt:"MLflow UI showing LoggedModel with linked traces for version tracking",style:{maxWidth:"100%",borderRadius:"8px",boxShadow:"0 4px 12px rgba(0, 0, 0, 0.15)"}})}),"\n",(0,o.jsx)(n.h2,{id:"why-version-control-matters-for-genai",children:"Why Version Control Matters for GenAI"}),"\n",(0,o.jsx)(n.p,{children:"GenAI applications are complex systems with interdependent components. Without systematic versioning, development becomes chaotic and deployments risky."}),"\n",(0,o.jsx)(r.A,{features:[{icon:d.A,title:"Eliminate 'It Worked Yesterday' Syndrome",description:"Know exactly which combination of code, prompts, and configurations produced any result. Reproduce successes and debug failures with complete context."},{icon:h.A,title:"Deploy with Data-Driven Confidence",description:"Compare application versions objectively using metrics like quality scores, cost, and latency. Choose the best performer based on evidence, not intuition."},{icon:f.A,title:"Track Every Change's Impact",description:"Link code commits, configuration changes, and evaluation results. When quality drops, pinpoint exactly what changed and when."},{icon:g.A,title:"Maintain Production Auditability",description:"Know exactly what version was deployed when. Essential for compliance, incident response, and regulatory requirements."}]}),"\n",(0,o.jsx)(n.h2,{id:"how-loggedmodel-powers-genai-version-control",children:"How LoggedModel Powers GenAI Version Control"}),"\n",(0,o.jsx)(n.p,{children:"MLflow's LoggedModel adapts traditional ML model versioning for GenAI applications. Instead of just tracking model weights, it becomes a comprehensive metadata hub that coordinates all the moving parts of your AI system."}),"\n",(0,o.jsx)(a.A,{concepts:[{icon:w.A,title:"Application State Snapshots",description:"Each LoggedModel version captures a complete application state\u2014code references, configurations, dependencies, and performance data in one versioned entity."},{icon:y.A,title:"Flexible Code Management",description:"Link to external git commits for lightweight versioning, or bundle code directly for deployment. Choose the approach that fits your workflow."},{icon:u.A,title:"Automatic Trace Association",description:"When you set an active model context, all subsequent traces automatically link to that version. No manual bookkeeping required."}]}),"\n",(0,o.jsx)(n.h2,{id:"start-version-tracking-in-5-minutes",children:"Start Version Tracking in 5 Minutes"}),"\n",(0,o.jsx)(n.p,{children:"Transform chaotic GenAI development into systematic version control with just a few lines of code."}),"\n",(0,o.jsx)(n.h3,{id:"automatic-version-tracking-with-git-integration",children:"Automatic Version Tracking with Git Integration"}),"\n",(0,o.jsx)(n.p,{children:"Link your application versions to git commits for complete traceability:"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-python",children:'import mlflow\nimport openai\nimport os\n\n# Fix: Added missing import\nos.environ["OPENAI_API_KEY"] = "your-api-key-here"\n\n# Configure MLflow experiment\nmlflow.set_experiment("customer-support-agent")\n\n# Get current git commit using MLflow\'s built-in utilities\nfrom mlflow.utils.git_utils import get_git_commit\n\ngit_commit = get_git_commit(".")\nif git_commit:\n    git_commit = git_commit[:8]  # Use short hash\nelse:\n    git_commit = "local-dev"  # Fallback if not in git repo\n\n# Create version identifier\napp_name = "customer_support_agent"\nversion_name = f"{app_name}-{git_commit}"\n\n# Set active model context - all traces will link to this version\nmlflow.set_active_model(name=version_name)\n\n# Enable automatic tracing\nmlflow.openai.autolog()\n\n# Your application code - now automatically versioned and traced\nclient = openai.OpenAI()\ntest_questions = [\n    "How do I reset my password?",\n    "What are your business hours?",\n    "Can I get a refund for my order?",\n]\n\nfor question in test_questions:\n    response = client.chat.completions.create(\n        model="gpt-4o-mini",\n        messages=[{"role": "user", "content": question}],\n        temperature=0.7,\n        max_tokens=1000,\n    )\n    # \u2705 Automatically: traced, versioned, and linked to git commit\n'})}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.strong,{children:"What happens automatically:"})}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsx)(n.li,{children:"Every LLM call generates a detailed trace"}),"\n",(0,o.jsx)(n.li,{children:"All traces link to your specific application version"}),"\n",(0,o.jsx)(n.li,{children:"Git commit provides exact code reproducibility"}),"\n",(0,o.jsx)(n.li,{children:"Version performance can be compared objectively"}),"\n"]}),"\n",(0,o.jsx)(n.h3,{id:"version-management-made-simple",children:"Version Management Made Simple"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-python",children:'# Create a new version for experimentation\nwith mlflow.set_active_model(name=f"agent-v2-{new_commit}"):\n    # Test new prompt engineering approach\n    improved_response = client.chat.completions.create(\n        model="gpt-4o-mini",\n        messages=[\n            {\n                "role": "system",\n                "content": "You are a helpful customer support agent. Be concise and actionable.",\n            },\n            {"role": "user", "content": question},\n        ],\n        temperature=0.3,  # Lower temperature for consistency\n        max_tokens=500,  # More focused responses\n    )\n    # \u2705 New version automatically tracked with different configurations\n'})}),"\n",(0,o.jsx)(n.p,{children:"Context manager automatically handles version switching\u2014clean, explicit, and error-free."}),"\n",(0,o.jsx)(n.h3,{id:"compare-versions-systematically",children:"Compare Versions Systematically"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-python",children:'import pandas as pd\n\n# Evaluate multiple versions against the same test set\neval_data = pd.DataFrame(\n    {\n        "inputs": test_questions,\n        "expected_categories": ["account", "business_info", "billing"],\n    }\n)\n\n# Version A: Original configuration\nresults_v1 = mlflow.evaluate(\n    model_uri=f"models:/{app_name}-{commit_v1}",\n    data=eval_data,\n    extra_metrics=[\n        mlflow.metrics.toxicity(),\n        mlflow.metrics.latency(),\n        mlflow.metrics.flesch_kincaid_grade_level(),\n    ],\n)\n\n# Version B: Improved prompts\nresults_v2 = mlflow.evaluate(\n    model_uri=f"models:/{app_name}-{commit_v2}",\n    data=eval_data,\n    extra_metrics=[\n        mlflow.metrics.toxicity(),\n        mlflow.metrics.latency(),\n        mlflow.metrics.flesch_kincaid_grade_level(),\n    ],\n)\n\n# \u2705 Side-by-side comparison shows which version performs better\n'})}),"\n",(0,o.jsx)(n.p,{children:"Objective metrics remove guesswork from version selection."}),"\n",(0,o.jsx)(n.h2,{id:"prerequisites",children:"Prerequisites"}),"\n",(0,o.jsx)(n.p,{children:"Ready to implement systematic version tracking? You'll need:"}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"MLflow 3.0+"})," (",(0,o.jsx)(n.code,{children:'pip install --upgrade "mlflow>=3.1"'}),")"]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"Git repository"})," for your application code"]}),"\n",(0,o.jsx)(n.li,{children:(0,o.jsx)(n.strong,{children:"Python 3.10+"})}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"LLM API access"})," (OpenAI, Anthropic, etc.)"]}),"\n"]}),"\n",(0,o.jsx)(n.admonition,{type:"tip",children:(0,o.jsxs)(n.p,{children:["For Databricks-hosted MLflow Tracking: ",(0,o.jsx)(n.code,{children:'pip install --upgrade "mlflow[databricks]>=3.1"'})]})}),"\n",(0,o.jsx)(n.hr,{}),"\n",(0,o.jsx)(n.h2,{id:"advanced-version-tracking-capabilities",children:"Advanced Version Tracking Capabilities"}),"\n",(0,o.jsx)(n.p,{children:"Once you've mastered basic version tracking, explore these advanced patterns for production GenAI applications."}),"\n",(0,o.jsxs)(s.A,{children:[(0,o.jsx)(c.A,{icon:_.A,iconSize:48,title:"Track Application Versions",description:"Learn comprehensive patterns for versioning complex GenAI applications with external code management",href:"/genai/version-tracking/track-application-versions-with-mlflow",linkText:"Master versioning \u2192",containerHeight:64}),(0,o.jsx)(c.A,{icon:v.A,iconSize:48,title:"Deployment Strategies",description:"Deploy versioned applications with confidence using MLflow's serving capabilities",href:"/genai/serving",linkText:"Deploy versions \u2192",containerHeight:64})]}),"\n",(0,o.jsx)(n.p,{children:"Start with the code examples above, then explore the advanced capabilities as your application grows in complexity."})]})}function I(e={}){const{wrapper:n}={...(0,l.R)(),...e.components};return n?(0,o.jsx)(n,{...e,children:(0,o.jsx)(b,{...e})}):b(e)}},93672:(e,n,i)=>{i.d(n,{A:()=>t});const t=(0,i(84722).A)("code-xml",[["path",{d:"m18 16 4-4-4-4",key:"1inbqp"}],["path",{d:"m6 8-4 4 4 4",key:"15zrgr"}],["path",{d:"m14.5 4-5 16",key:"e7oirm"}]])}}]);