"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[1920],{6789:(e,t,n)=>{n.d(t,{A:()=>p});n(96540);var o=n(28774),a=n(34164);const l={tileCard:"tileCard_NHsj",tileIcon:"tileIcon_pyoR",tileLink:"tileLink_iUbu",tileImage:"tileImage_O4So"};var i=n(86025),r=n(21122),s=n(74848);function p({icon:e,image:t,imageDark:n,imageWidth:p,imageHeight:c,iconSize:m=32,containerHeight:h,title:d,description:f,href:u,linkText:w="Learn more \u2192",className:g}){if(!e&&!t)throw new Error("TileCard requires either an icon or image prop");const v=h?{height:`${h}px`}:{},_={};return p&&(_.width=`${p}px`),c&&(_.height=`${c}px`),(0,s.jsxs)(o.A,{href:u,className:(0,a.A)(l.tileCard,g),children:[(0,s.jsx)("div",{className:l.tileIcon,style:v,children:e?(0,s.jsx)(e,{size:m}):n?(0,s.jsx)(r.A,{sources:{light:(0,i.Ay)(t),dark:(0,i.Ay)(n)},alt:d,className:l.tileImage,style:_}):(0,s.jsx)("img",{src:(0,i.Ay)(t),alt:d,className:l.tileImage,style:_})}),(0,s.jsx)("h3",{children:d}),(0,s.jsx)("p",{children:f}),(0,s.jsx)("div",{className:l.tileLink,children:w})]})}},14680:(e,t,n)=>{n.d(t,{A:()=>h});var o=n(96540),a=n(72102),l=n(75107);const i="collapsibleContainer_Oabu",r="header_N69Q",s="toggleButton_gd1o",p="toggleText_VQQb",c="content_HWPC";var m=n(74848);const h=({children:e,title:t,defaultExpanded:n=!1})=>{const[h,d]=(0,o.useState)(n);return(0,m.jsxs)("div",{className:i,children:[(0,m.jsx)("div",{className:r,children:(0,m.jsxs)("button",{className:s,onClick:()=>d(!h),"aria-expanded":h,children:[(0,m.jsx)("span",{className:p,children:t}),h?(0,m.jsx)(a.A,{size:20}):(0,m.jsx)(l.A,{size:20})]})}),h&&(0,m.jsx)("div",{className:c,children:e})]})}},38766:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>y,contentTitle:()=>x,default:()=>b,frontMatter:()=>_,metadata:()=>o,toc:()=>j});const o=JSON.parse('{"id":"eval-monitor/running-evaluation/prompts","title":"Evaluating Prompts","description":"Prompts are the core components of GenAI applications. However, iterating over prompts can be challenging because it is hard to know if the new prompt is better than the old one. MLflow provides a framework to systematically evaluate prompt templates and track performance over time.","source":"@site/docs/genai/eval-monitor/running-evaluation/prompts.mdx","sourceDirName":"eval-monitor/running-evaluation","slug":"/eval-monitor/running-evaluation/prompts","permalink":"/mlflow-website/docs/latest/genai/eval-monitor/running-evaluation/prompts","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{},"sidebar":"genAISidebar","previous":{"title":"Quickstart","permalink":"/mlflow-website/docs/latest/genai/eval-monitor/quickstart"},"next":{"title":"Evaluate Agents","permalink":"/mlflow-website/docs/latest/genai/eval-monitor/running-evaluation/agents"}}');var a=n(74848),l=n(28453),i=(n(11470),n(19365),n(49374),n(66927)),r=(n(47020),n(65592)),s=n(6789),p=n(96869),c=(n(14680),n(80827)),m=n(51004),h=n(93164),d=n(44471),f=n(85731),u=n(47792),w=n(42640),g=n(46858),v=n(51307);const _={},x="Evaluating Prompts",y={},j=[{value:"Workflow",id:"workflow",level:2},{value:"Example: Evaluating a Prompt Template",id:"example-evaluating-a-prompt-template",level:2},{value:"Prerequisites",id:"prerequisites",level:3},...v.RM,{value:"Step 1: Create prompt templates",id:"step-1-create-prompt-templates",level:3},{value:"Step 2: Create evaluation dataset",id:"step-2-create-evaluation-dataset",level:3},{value:"Step 3: Create prediction function",id:"step-3-create-prediction-function",level:3},{value:"Step 4: Define task-specific scorers",id:"step-4-define-task-specific-scorers",level:3},{value:"Step 5: Run evaluation",id:"step-5-run-evaluation",level:3},{value:"Iterating on Prompts",id:"iterating-on-prompts",level:2},{value:"Compare Evaluation Results",id:"compare-evaluation-results",level:2},{value:"Next steps",id:"next-steps",level:2}];function k(e){const t={a:"a",admonition:"admonition",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,l.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(t.header,{children:(0,a.jsx)(t.h1,{id:"evaluating-prompts",children:"Evaluating Prompts"})}),"\n",(0,a.jsx)(t.p,{children:"Prompts are the core components of GenAI applications. However, iterating over prompts can be challenging because it is hard to know if the new prompt is better than the old one. MLflow provides a framework to systematically evaluate prompt templates and track performance over time."}),"\n",(0,a.jsx)(i.A,{src:"/images/mlflow-3/eval-monitor/prompt-evaluation-hero.png",alt:"Prompt Evaluation",width:"95%"}),"\n",(0,a.jsx)(t.h2,{id:"workflow",children:"Workflow"}),"\n",(0,a.jsx)(p.A,{steps:[{icon:c.A,title:"Create prompt template(s)",description:"Define and register your prompt templates in MLflow Prompt Registry for version control and easy access."},{icon:m.A,title:"Prepare evaluation dataset",description:"Create test cases with inputs and expected outcomes to systematically evaluate prompt performance."},{icon:h.A,title:"Define a wrapper function to generate responses",description:"Wrap your prompt in a function that takes dataset inputs and generates responses using your model."},{icon:d.A,title:"Define evaluation scorers",description:"Set up built-in and custom scorers to measure quality, accuracy, and task-specific criteria."},{icon:f.A,title:"Run evaluation",description:"Execute the evaluation and review results in MLflow UI to analyze performance and iterate."}]}),"\n",(0,a.jsx)(t.h2,{id:"example-evaluating-a-prompt-template",children:"Example: Evaluating a Prompt Template"}),"\n",(0,a.jsx)(t.h3,{id:"prerequisites",children:"Prerequisites"}),"\n",(0,a.jsx)(t.p,{children:"First, install the required packages by running the following command:"}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-bash",children:"pip install --upgrade mlflow>=3.3 openai\n"})}),"\n",(0,a.jsx)(t.p,{children:"MLflow stores evaluation results in a tracking server. Connect your local environment to the tracking server by one of the following methods."}),"\n",(0,a.jsx)(v.Ay,{}),"\n",(0,a.jsx)(t.h3,{id:"step-1-create-prompt-templates",children:"Step 1: Create prompt templates"}),"\n",(0,a.jsxs)(t.p,{children:["Let's define a simple prompt template to evaluate. We use ",(0,a.jsx)(t.a,{href:"/genai/prompt-registry",children:"MLflow Prompt Registry"})," to save the prompt and version control it, but it is optional for evaluation."]}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-python",children:'import mlflow\n\n# Define prompt templates. MLflow supports both text and chat format prompt templates.\nPROMPT_V1 = [\n    {\n        "role": "system",\n        "content": "You are a helpful assistant. Answer the following question.",\n    },\n    {\n        "role": "user",\n        # Use double curly braces to indicate variables.\n        "content": "Question: {{question}}",\n    },\n]\n\n# Register the prompt template to the MLflow Prompt Registry for version control\n# and convenience of loading the prompt template. This is optional.\nmlflow.genai.register_prompt(\n    name="qa_prompt",\n    template=PROMPT_V1,\n    commit_message="Initial prompt",\n)\n'})}),"\n",(0,a.jsx)(t.h3,{id:"step-2-create-evaluation-dataset",children:"Step 2: Create evaluation dataset"}),"\n",(0,a.jsxs)(t.p,{children:["The evaluation dataset is defined as a list of dictionaries, each with an ",(0,a.jsx)(t.code,{children:"inputs"})," and ",(0,a.jsx)(t.code,{children:"expectations"})," field."]}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-python",children:'eval_dataset = [\n    {\n        "inputs": {"question": "What causes rain?"},\n        "expectations": {\n            "key_concepts": ["evaporation", "condensation", "precipitation"]\n        },\n    },\n    {\n        "inputs": {"question": "Explain the difference between AI and ML"},\n        "expectations": {\n            "key_concepts": ["artificial intelligence", "machine learning", "subset"]\n        },\n    },\n    {\n        "inputs": {"question": "How do vaccines work?"},\n        "expectations": {"key_concepts": ["immune", "antibodies", "protection"]},\n    },\n]\n'})}),"\n",(0,a.jsx)(t.h3,{id:"step-3-create-prediction-function",children:"Step 3: Create prediction function"}),"\n",(0,a.jsxs)(t.p,{children:["Now wrap the prompt template in a simple function that takes a question to generate responses using the prompt template. ",(0,a.jsxs)(t.strong,{children:["IMPORTANT: The function must take the keyword arguments used in the ",(0,a.jsx)(t.code,{children:"inputs"})," field of the dataset."]})," Therefore, we use ",(0,a.jsx)(t.code,{children:"question"})," as the argument of the function here."]}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-python",children:'from openai import OpenAI\n\nclient = OpenAI()\n\n\n@mlflow.trace\ndef predict_fn(question: str) -> str:\n    prompt = mlflow.genai.load_prompt("prompts:/qa_prompt/latest")\n    rendered_prompt = prompt.format(question=question)\n\n    response = client.chat.completions.create(\n        model="gpt-4.1-mini", messages=rendered_prompt\n    )\n    return response.choices[0].message.content\n'})}),"\n",(0,a.jsx)(t.h3,{id:"step-4-define-task-specific-scorers",children:"Step 4: Define task-specific scorers"}),"\n",(0,a.jsxs)(t.p,{children:["Finally, let's define a few ",(0,a.jsx)(t.a,{href:"/genai/eval-monitor/scorers",children:"scorers"})," that decide the evaluation criteria. Here we use two types of scorers:"]}),"\n",(0,a.jsxs)(t.ul,{children:["\n",(0,a.jsx)(t.li,{children:"Built-in LLM scorers for evaluating the qualitative aspects of the response."}),"\n",(0,a.jsx)(t.li,{children:"Custom heuristic scorer for evaluating the coverage of the key concepts."}),"\n"]}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-python",children:'from mlflow.entities import Feedback\nfrom mlflow.genai import scorer\nfrom mlflow.genai.scorers import Guidelines\n\n# Define LLM scorers\nis_concise = Guidelines(\n    name="is_concise", guidelines="The response should be concise and to the point."\n)\nis_professional = Guidelines(\n    name="is_professional", guidelines="The response should be in professional tone."\n)\n\n\n# Evaluate the coverage of the key concepts using custom scorer\n@scorer\ndef concept_coverage(outputs: str, expectations: dict) -> Feedback:\n    concepts = set(expectations.get("key_concepts", []))\n    included = {c for c in concepts if c.lower() in outputs.lower()}\n    return Feedback(\n        value=len(included) / len(concepts),\n        rationale=(\n            f"Included {len(included)} out of {len(concepts)} concepts. Missing: {concepts - included}"\n        ),\n    )\n'})}),"\n",(0,a.jsx)(t.admonition,{type:"tip",children:(0,a.jsxs)(t.p,{children:["LLM scorers use OpenAI's GPT 4.1-mini by default. You can use different models by passing the ",(0,a.jsx)(t.code,{children:"model"})," parameter to the scorer constructor."]})}),"\n",(0,a.jsx)(t.h3,{id:"step-5-run-evaluation",children:"Step 5: Run evaluation"}),"\n",(0,a.jsx)(t.p,{children:"Now we are ready to run the evaluation!"}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-python",children:"mlflow.genai.evaluate(\n    data=eval_dataset,\n    predict_fn=predict_fn,\n    scorers=[is_concise, is_professional, concept_coverage],\n)\n"})}),"\n",(0,a.jsx)(t.p,{children:"Once the evaluation is done, open the MLflow UI in your browser and navigate to the experiment page. You should see MLflow creates a new Run and logs the evaluation results."}),"\n",(0,a.jsx)(i.A,{src:"/images/mlflow-3/eval-monitor/prompt-evaluation-results.png",alt:"Prompt Evaluation",width:"95%"}),"\n",(0,a.jsx)(t.p,{children:"By clicking on the each row in the result, you can open the trace and see the detailed score and rationale."}),"\n",(0,a.jsx)(i.A,{src:"/images/mlflow-3/eval-monitor/prompt-evaluation-trace.png",alt:"Prompt Evaluation",width:"95%"}),"\n",(0,a.jsx)(t.h2,{id:"iterating-on-prompts",children:"Iterating on Prompts"}),"\n",(0,a.jsx)(t.p,{children:"The prompt evaluation is an iterative process. You can register a new prompt version, run the same eval again, and compare the evaluation results. The prompt registry keep track of the version changes and lineage between the prompt versions and evaluation results."}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-python",children:'# Define V2 prompt template\nPROMPT_V2 = [\n    {\n        "role": "system",\n        "content": "You are a helpful assistant. Answer the following question in three sentences.",\n    },\n    {"role": "user", "content": "Question: {{question}}"},\n]\n\nmlflow.genai.register_prompt(name="qa_prompt", template=PROMPT_V2)\n\n# Run the same evaluation again.\n# MLflow automatically loads the latest prompt template via the `@latest` alias.\nmlflow.genai.evaluate(\n    data=eval_dataset,\n    predict_fn=predict_fn,\n    scorers=[is_concise, is_professional, concept_coverage],\n)\n'})}),"\n",(0,a.jsx)(t.h2,{id:"compare-evaluation-results",children:"Compare Evaluation Results"}),"\n",(0,a.jsx)(t.p,{children:"Once you have multiple evaluation runs, you can compare the result side-by-side to analyze the performance changes. To see the comparison view, open the evaluation result page for one of the runs, and pick another run to compare from the dropdown on the top."}),"\n",(0,a.jsx)(t.p,{children:"To see the comparison view, open the evaluation result page for one of the runs, and pick another run to compare from the dropdown on the top."}),"\n",(0,a.jsx)(i.A,{src:"/images/mlflow-3/eval-monitor/prompt-evaluation-dropdown.png",alt:"Prompt Evaluation"}),"\n",(0,a.jsx)(t.p,{children:"MLflow will load the evaluation results for the two runs and display the comparison view. In this example, you can see the overall concise scorer is improved 33%, but the concept coverage is dropped 11%. The little arrow \u2197\ufe0f/\u2198\ufe0f in each row indicates where the change is coming from."}),"\n",(0,a.jsx)(i.A,{src:"/images/mlflow-3/eval-monitor/prompt-evaluation-compare.png",alt:"Prompt Evaluation",width:"95%"}),"\n",(0,a.jsx)(t.h2,{id:"next-steps",children:"Next steps"}),"\n",(0,a.jsxs)(r.A,{children:[(0,a.jsx)(s.A,{icon:u.A,iconSize:48,title:"Customize Scorers",description:"Build specialized evaluation metrics for your specific use cases and requirements.",href:"/genai/eval-monitor/scorers",linkText:"Learn about custom scorers \u2192",containerHeight:64}),(0,a.jsx)(s.A,{icon:w.A,iconSize:48,title:"Evaluate Agents",description:"Evaluate complex AI agents with tool calling and multi-step workflows.",href:"/genai/eval-monitor/running-evaluation/agents",linkText:"Evaluate agents \u2192",containerHeight:64}),(0,a.jsx)(s.A,{icon:g.A,iconSize:48,title:"Optimize Prompts",description:"Use automated optimization techniques to systematically improve your prompts.",href:"/genai/prompt-registry/optimize-prompts",linkText:"Optimize prompts \u2192",containerHeight:64})]})]})}function b(e={}){const{wrapper:t}={...(0,l.R)(),...e.components};return t?(0,a.jsx)(t,{...e,children:(0,a.jsx)(k,{...e})}):k(e)}},47020:(e,t,n)=>{n.d(t,{A:()=>l});n(96540);const o={wrapper:"wrapper_sf5q"};var a=n(74848);function l({children:e}){return(0,a.jsx)("div",{className:o.wrapper,children:e})}},49374:(e,t,n)=>{n.d(t,{B:()=>r});n(96540);const o=JSON.parse('{"mlflow.ag2":"api_reference/python_api/mlflow.ag2.html","mlflow.anthropic":"api_reference/python_api/mlflow.anthropic.html","mlflow.artifacts":"api_reference/python_api/mlflow.artifacts.html","mlflow.autogen":"api_reference/python_api/mlflow.autogen.html","mlflow.bedrock":"api_reference/python_api/mlflow.bedrock.html","mlflow.catboost":"api_reference/python_api/mlflow.catboost.html","mlflow.client":"api_reference/python_api/mlflow.client.html","mlflow.config":"api_reference/python_api/mlflow.config.html","mlflow.crewai":"api_reference/python_api/mlflow.crewai.html","mlflow.data":"api_reference/python_api/mlflow.data.html","mlflow.deployments":"api_reference/python_api/mlflow.deployments.html","mlflow.diviner":"api_reference/python_api/mlflow.diviner.html","mlflow.dspy":"api_reference/python_api/mlflow.dspy.html","mlflow.entities":"api_reference/python_api/mlflow.entities.html","mlflow.environment_variables":"api_reference/python_api/mlflow.environment_variables.html","mlflow.gateway":"api_reference/python_api/mlflow.gateway.html","mlflow.gemini":"api_reference/python_api/mlflow.gemini.html","mlflow.genai":"api_reference/python_api/mlflow.genai.html","mlflow.groq":"api_reference/python_api/mlflow.groq.html","mlflow.h2o":"api_reference/python_api/mlflow.h2o.html","mlflow.johnsnowlabs":"api_reference/python_api/mlflow.johnsnowlabs.html","mlflow.keras":"api_reference/python_api/mlflow.keras.html","mlflow.langchain":"api_reference/python_api/mlflow.langchain.html","mlflow.lightgbm":"api_reference/python_api/mlflow.lightgbm.html","mlflow.litellm":"api_reference/python_api/mlflow.litellm.html","mlflow.llama_index":"api_reference/python_api/mlflow.llama_index.html","mlflow.metrics":"api_reference/python_api/mlflow.metrics.html","mlflow.mistral":"api_reference/python_api/mlflow.mistral.html","mlflow.models":"api_reference/python_api/mlflow.models.html","mlflow.onnx":"api_reference/python_api/mlflow.onnx.html","mlflow.openai":"api_reference/python_api/mlflow.openai.html","mlflow.paddle":"api_reference/python_api/mlflow.paddle.html","mlflow.pmdarima":"api_reference/python_api/mlflow.pmdarima.html","mlflow.projects":"api_reference/python_api/mlflow.projects.html","mlflow.promptflow":"api_reference/python_api/mlflow.promptflow.html","mlflow.prophet":"api_reference/python_api/mlflow.prophet.html","mlflow.pydantic_ai":"api_reference/python_api/mlflow.pydantic_ai.html","mlflow.pyfunc":"api_reference/python_api/mlflow.pyfunc.html","mlflow.pyspark.ml":"api_reference/python_api/mlflow.pyspark.ml.html","mlflow.pytorch":"api_reference/python_api/mlflow.pytorch.html","mlflow":"api_reference/python_api/mlflow.html","mlflow.sagemaker":"api_reference/python_api/mlflow.sagemaker.html","mlflow.sentence_transformers":"api_reference/python_api/mlflow.sentence_transformers.html","mlflow.server":"api_reference/python_api/mlflow.server.html","mlflow.shap":"api_reference/python_api/mlflow.shap.html","mlflow.sklearn":"api_reference/python_api/mlflow.sklearn.html","mlflow.smolagents":"api_reference/python_api/mlflow.smolagents.html","mlflow.spacy":"api_reference/python_api/mlflow.spacy.html","mlflow.spark":"api_reference/python_api/mlflow.spark.html","mlflow.statsmodels":"api_reference/python_api/mlflow.statsmodels.html","mlflow.system_metrics":"api_reference/python_api/mlflow.system_metrics.html","mlflow.tensorflow":"api_reference/python_api/mlflow.tensorflow.html","mlflow.tracing":"api_reference/python_api/mlflow.tracing.html","mlflow.transformers":"api_reference/python_api/mlflow.transformers.html","mlflow.types":"api_reference/python_api/mlflow.types.html","mlflow.utils":"api_reference/python_api/mlflow.utils.html","mlflow.xgboost":"api_reference/python_api/mlflow.xgboost.html","mlflow.server.auth":"api_reference/auth/python-api.html","mlflow.server.cli":"api_reference/cli.html","mlflow.r":"api_reference/R-api.html","mlflow.java":"api_reference/java_api/index.html","mlflow.python":"api_reference/python_api/index.html","mlflow.rest":"api_reference/rest-api.html","mlflow.llms.deployments.api":"api_reference/llms/deployments/api.html"}');var a=n(86025),l=n(74848);const i=e=>{const t=e.split(".");for(let n=t.length;n>0;n--){const e=t.slice(0,n).join(".");if(o[e])return e}return null};function r({fn:e,children:t,hash:n}){const r=i(e);if(!r)return(0,l.jsx)(l.Fragment,{children:t});const s=(0,a.Ay)(`/${o[r]}#${n??e}`);return(0,l.jsx)("a",{href:s,target:"_blank",children:t??(0,l.jsxs)("code",{children:[e,"()"]})})}},51307:(e,t,n)=>{n.d(t,{Ay:()=>c,RM:()=>s});var o=n(74848),a=n(28453),l=n(11470),i=n(19365),r=n(47020);const s=[];function p(e){const t={a:"a",admonition:"admonition",code:"code",p:"p",pre:"pre",...(0,a.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(r.A,{children:(0,o.jsxs)(l.A,{children:[(0,o.jsxs)(i.A,{value:"local",label:"Local (pip)",default:!0,children:[(0,o.jsxs)(t.p,{children:["For the fastest setup, you can install the ",(0,o.jsx)(t.a,{href:"https://pypi.org/project/mlflow/",children:"mlflow"})," Python package and run MLflow locally:"]}),(0,o.jsx)(t.pre,{children:(0,o.jsx)(t.code,{className:"language-bash",children:"mlflow ui --backend-store-uri sqlite:///mlflow.db --port 5000\n"})}),(0,o.jsxs)(t.p,{children:["This will start the server at port 5000 on your local machine. Connect your notebook/IDE to the server by setting the tracking URI. You can also access to the MLflow UI at ",(0,o.jsx)(t.a,{href:"http://localhost:5000",children:"http://localhost:5000"}),"."]}),(0,o.jsx)(t.pre,{children:(0,o.jsx)(t.code,{className:"language-python",children:'import mlflow\n\nmlflow.set_tracking_uri("http://localhost:5000")\n'})}),(0,o.jsxs)(t.p,{children:["You can also brows the MLflow UI at ",(0,o.jsx)(t.a,{href:"http://localhost:5000",children:"http://localhost:5000"}),"."]})]}),(0,o.jsxs)(i.A,{value:"docker",label:"Local (docker)",children:[(0,o.jsx)(t.p,{children:"MLflow provides a Docker Compose file to start a local MLflow server with a postgres database and a minio server."}),(0,o.jsx)(t.pre,{children:(0,o.jsx)(t.code,{className:"language-bash",children:"git clone https://github.com/mlflow/mlflow.git\ncd docker-compose\ncp .env.dev.example .env\ndocker compose up -d\n"})}),(0,o.jsxs)(t.p,{children:["This will start the server at port 5000 on your local machine. Connect your notebook/IDE to the server by setting the tracking URI. You can also access to the MLflow UI at ",(0,o.jsx)(t.a,{href:"http://localhost:5000",children:"http://localhost:5000"}),"."]}),(0,o.jsx)(t.pre,{children:(0,o.jsx)(t.code,{className:"language-python",children:'import mlflow\n\nmlflow.set_tracking_uri("http://localhost:5000")\n'})}),(0,o.jsxs)(t.p,{children:["Refer to the ",(0,o.jsx)(t.a,{href:"https://github.com/mlflow/mlflow/tree/master/docker-compose/README.md",children:"instruction"})," for more details, e.g., overriding the default environment variables."]})]}),(0,o.jsxs)(i.A,{value:"remote",label:"Remote MLflow Server",children:[(0,o.jsx)(t.p,{children:"If you have a remote MLflow tracking server, configure the connection:"}),(0,o.jsx)(t.pre,{children:(0,o.jsx)(t.code,{className:"language-python",children:'import os\nimport mlflow\n\n# Set your MLflow tracking URI\nos.environ["MLFLOW_TRACKING_URI"] = "http://your-mlflow-server:5000"\n# Or directly in code\nmlflow.set_tracking_uri("http://your-mlflow-server:5000")\n'})})]}),(0,o.jsxs)(i.A,{value:"databricks",label:"Databricks",children:[(0,o.jsx)(t.p,{children:"If you have a Databricks account, configure the connection:"}),(0,o.jsx)(t.pre,{children:(0,o.jsx)(t.code,{className:"language-python",children:"import mlflow\n\nmlflow.login()\n"})}),(0,o.jsx)(t.p,{children:"This will prompt you for your configuration details (Databricks Host url and a PAT)."})]})]})}),"\n",(0,o.jsx)(t.admonition,{type:"tip",children:(0,o.jsxs)(t.p,{children:["If you are unsure about how to set up an MLflow tracking server, you can start with the cloud-based MLflow powered by Databricks: ",(0,o.jsx)("ins",{children:(0,o.jsx)(t.a,{href:"https://login.databricks.com/?destination_url=%2Fml%2Fexperiments-signup%3Fsource%3DTRY_MLFLOW&dbx_source=TRY_MLFLOW&signup_experience_step=EXPRESS&provider=MLFLOW&utm_source=mlflow_org&tuuid=a9534f33-78bf-4b81-becc-4334e993251d&rl_aid=e6685d78-9f85-4fed-b64f-08e247f53547&intent=SIGN_UP",children:"Sign up for free \u2192"})})]})})]})}function c(e={}){const{wrapper:t}={...(0,a.R)(),...e.components};return t?(0,o.jsx)(t,{...e,children:(0,o.jsx)(p,{...e})}):p(e)}},65592:(e,t,n)=>{n.d(t,{A:()=>i});n(96540);var o=n(34164);const a={tilesGrid:"tilesGrid_hB9N"};var l=n(74848);function i({children:e,className:t}){return(0,l.jsx)("div",{className:(0,o.A)(a.tilesGrid,t),children:e})}},66927:(e,t,n)=>{n.d(t,{A:()=>i});n(96540);const o={container:"container_JwLF",imageWrapper:"imageWrapper_RfGN",image:"image_bwOA",caption:"caption_jo2G"};var a=n(86025),l=n(74848);function i({src:e,alt:t,width:n,caption:i,className:r}){return(0,l.jsxs)("div",{className:`${o.container} ${r||""}`,children:[(0,l.jsx)("div",{className:o.imageWrapper,style:n?{width:n}:{},children:(0,l.jsx)("img",{src:(0,a.Ay)(e),alt:t,className:o.image})}),i&&(0,l.jsx)("p",{className:o.caption,children:i})]})}},96869:(e,t,n)=>{n.d(t,{A:()=>g});n(96540);const o="workflowContainer__N1v",a="workflowTitle_QrAr",l="stepsContainer_IGeu",i="screenshotContainer_OwzZ",r="stepItem_GyHJ",s="stepIndicator_U2Wb",p="stepNumber_vINc",c="stepNumberText_eLd7",m="stepConnector_Si86",h="stepContent_D0CA",d="stepTitle_wujx",f="stepDescription_PIaE";var u=n(66927),w=n(74848);const g=({steps:e,title:t,screenshot:n})=>(0,w.jsxs)("div",{className:o,children:[t&&(0,w.jsx)("h3",{className:a,children:t}),n&&(0,w.jsx)("div",{className:i,children:(0,w.jsx)(u.A,{src:n.src,alt:n.alt,width:n.width||"90%"})}),(0,w.jsx)("div",{className:l,children:e.map((t,n)=>(0,w.jsxs)("div",{className:r,children:[(0,w.jsxs)("div",{className:s,children:[(0,w.jsx)("div",{className:p,children:t.icon?(0,w.jsx)(t.icon,{size:16}):(0,w.jsx)("span",{className:c,children:n+1})}),n<e.length-1&&(0,w.jsx)("div",{className:m})]}),(0,w.jsxs)("div",{className:h,children:[(0,w.jsx)("h4",{className:d,children:t.title}),(0,w.jsx)("p",{className:f,children:t.description})]})]},n))})]})}}]);