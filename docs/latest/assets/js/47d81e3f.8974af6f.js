"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[1453],{15822:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>l,contentTitle:()=>o,default:()=>m,frontMatter:()=>s,metadata:()=>n,toc:()=>c});const n=JSON.parse('{"id":"tracing/quality-with-traces","title":"Advanced Trace Quality Review","description":"Traces contain rich information beyond debugging that can drive systematic quality improvements in your GenAI applications. This guide shows advanced techniques for analyzing trace patterns, extracting evaluation datasets from production data, and measuring the impact of quality improvements using programmatic analysis.","source":"@site/docs/genai/tracing/quality-with-traces.mdx","sourceDirName":"tracing","slug":"/tracing/quality-with-traces","permalink":"/docs/latest/genai/tracing/quality-with-traces","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{},"sidebar":"genAISidebar","previous":{"title":"Trace Tagging","permalink":"/docs/latest/genai/tracing/attach-tags/"},"next":{"title":"Delete Traces","permalink":"/docs/latest/genai/tracing/observe-with-traces/delete-traces"}}');var i=a(74848),r=a(28453);a(49374);const s={},o="Advanced Trace Quality Review",l={},c=[{value:"Analyzing Trace Patterns for Quality Insights",id:"analyzing-trace-patterns-for-quality-insights",level:2},{value:"Quantitative Analysis with Programmatic Queries",id:"quantitative-analysis-with-programmatic-queries",level:3},{value:"Qualitative Analysis Through Trace Comparison",id:"qualitative-analysis-through-trace-comparison",level:3},{value:"Building Evaluation Datasets from Production Traces",id:"building-evaluation-datasets-from-production-traces",level:2},{value:"Extracting Representative Traces",id:"extracting-representative-traces",level:3},{value:"Adding Ground Truth and Quality Indicators",id:"adding-ground-truth-and-quality-indicators",level:3},{value:"Registering the Dataset with MLflow",id:"registering-the-dataset-with-mlflow",level:3},{value:"Implementing Targeted Improvements",id:"implementing-targeted-improvements",level:2},{value:"Prompt Engineering Based on Trace Insights",id:"prompt-engineering-based-on-trace-insights",level:3},{value:"Application Architecture Improvements",id:"application-architecture-improvements",level:3},{value:"Measuring Quality Improvements",id:"measuring-quality-improvements",level:2},{value:"Systematic Evaluation Using Curated Datasets",id:"systematic-evaluation-using-curated-datasets",level:3},{value:"Production Monitoring After Improvements",id:"production-monitoring-after-improvements",level:3},{value:"Integration with Quality Improvement Workflows",id:"integration-with-quality-improvement-workflows",level:2},{value:"Next Steps",id:"next-steps",level:2},{value:"Summary",id:"summary",level:2}];function p(e){const t={a:"a",admonition:"admonition",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",p:"p",pre:"pre",strong:"strong",...(0,r.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(t.header,{children:(0,i.jsx)(t.h1,{id:"advanced-trace-quality-review",children:"Advanced Trace Quality Review"})}),"\n",(0,i.jsx)(t.p,{children:"Traces contain rich information beyond debugging that can drive systematic quality improvements in your GenAI applications. This guide shows advanced techniques for analyzing trace patterns, extracting evaluation datasets from production data, and measuring the impact of quality improvements using programmatic analysis."}),"\n",(0,i.jsx)(t.h2,{id:"analyzing-trace-patterns-for-quality-insights",children:"Analyzing Trace Patterns for Quality Insights"}),"\n",(0,i.jsx)(t.p,{children:"Traces provide detailed insights into how your application processes user requests, allowing you to identify patterns of quality issues and opportunities for improvement. The MLflow UI offers basic filtering and visualization, but programmatic analysis unlocks deeper insights into quality patterns."}),"\n",(0,i.jsx)(t.h3,{id:"quantitative-analysis-with-programmatic-queries",children:"Quantitative Analysis with Programmatic Queries"}),"\n",(0,i.jsx)(t.p,{children:"When you need to understand what characteristics lead to quality issues, you can search for traces with specific patterns and analyze their common attributes. Using the search API makes it easy to perform complex analysis on large sets of traces:"}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-python",children:'import mlflow\nimport pandas as pd\n\n# Search for traces with potential quality issues using tags\ntraces_df = mlflow.search_traces(\n    filter_string="tag.quality_score < 0.7",\n    max_results=100,\n    extract_fields=[\n        "span.end_time",\n        "span.inputs.messages",\n        "span.outputs.choices",\n        "span.attributes.usage.total_tokens",\n    ],\n)\n\n# Analyze patterns - check if quality issues correlate with token usage\nif not traces_df.empty and "span.attributes.usage.total_tokens" in traces_df.columns:\n    correlation = traces_df["span.attributes.usage.total_tokens"].corr(\n        traces_df["tag.quality_score"]\n    )\n    print(f"Correlation between token usage and quality: {correlation}")\n'})}),"\n",(0,i.jsx)(t.h3,{id:"qualitative-analysis-through-trace-comparison",children:"Qualitative Analysis Through Trace Comparison"}),"\n",(0,i.jsx)(t.p,{children:"Beyond quantitative metrics, examining individual traces helps identify qualitative patterns. Review traces that represent common failure modes by examining the inputs that led to low-quality outputs and looking for patterns in how your application handled these cases."}),"\n",(0,i.jsx)(t.p,{children:"Compare high-quality versus low-quality traces to understand what differs in how your application processes different inputs. Are there specific types of queries that consistently lead to quality issues? This analysis helps identify missing context or faulty reasoning patterns."}),"\n",(0,i.jsx)(t.h2,{id:"building-evaluation-datasets-from-production-traces",children:"Building Evaluation Datasets from Production Traces"}),"\n",(0,i.jsx)(t.p,{children:"Once you've identified representative traces, you can curate them into evaluation datasets for systematic testing. Production traces represent real user interactions and edge cases that synthetic datasets often miss."}),"\n",(0,i.jsx)(t.h3,{id:"extracting-representative-traces",children:"Extracting Representative Traces"}),"\n",(0,i.jsx)(t.p,{children:"The key to building useful evaluation datasets is selecting traces that represent important test cases and the diversity of real user interactions:"}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-python",children:'import mlflow\nimport pandas as pd\n\n# Query traces that represent important test cases\ntraces_df = mlflow.search_traces(\n    filter_string="trace.timestamp > \'2023-07-01\'",\n    max_results=500,\n    extract_fields=["span.inputs.messages", "span.outputs.choices"],\n)\n\n# Prepare dataset format\neval_data = []\nfor _, row in traces_df.iterrows():\n    # Extract user query from messages\n    messages = row["span.inputs.messages"]\n    user_query = next(\n        (msg["content"] for msg in messages if msg["role"] == "user"), None\n    )\n\n    # Extract model response\n    response = (\n        row["span.outputs.choices"][0]["message"]["content"]\n        if row["span.outputs.choices"]\n        else None\n    )\n\n    if user_query and response:\n        eval_data.append({"input": user_query, "output": response})\n\n# Create evaluation dataset\neval_df = pd.DataFrame(eval_data)\neval_df.to_csv("evaluation_dataset.csv", index=False)\n'})}),"\n",(0,i.jsx)(t.h3,{id:"adding-ground-truth-and-quality-indicators",children:"Adding Ground Truth and Quality Indicators"}),"\n",(0,i.jsx)(t.p,{children:"After extracting the basic input-output pairs, enhance your dataset with ground truth or expected outputs. Include quality indicators or specific aspects to evaluate, and consider leveraging domain experts to review and annotate the dataset for more comprehensive evaluation."}),"\n",(0,i.jsx)(t.h3,{id:"registering-the-dataset-with-mlflow",children:"Registering the Dataset with MLflow"}),"\n",(0,i.jsx)(t.p,{children:"Once you have prepared your evaluation dataset, register it with MLflow for systematic tracking and reuse:"}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-python",children:'import mlflow\n\n# Log the evaluation dataset for tracking and reuse\nwith mlflow.start_run() as run:\n    mlflow.log_artifact("evaluation_dataset.csv", "evaluation_datasets")\n    mlflow.log_param("dataset_size", len(eval_df))\n    mlflow.log_param("data_source", "production_traces")\n'})}),"\n",(0,i.jsx)(t.h2,{id:"implementing-targeted-improvements",children:"Implementing Targeted Improvements"}),"\n",(0,i.jsx)(t.p,{children:"With identified issues and evaluation datasets in hand, you can make targeted improvements to address specific quality patterns discovered through trace analysis."}),"\n",(0,i.jsx)(t.h3,{id:"prompt-engineering-based-on-trace-insights",children:"Prompt Engineering Based on Trace Insights"}),"\n",(0,i.jsx)(t.p,{children:"Refine system prompts to address specific failure patterns identified in your trace analysis. Add more explicit guidelines for handling edge cases, include examples that demonstrate how to handle problematic inputs, and adjust the tone or style to better meet user expectations."}),"\n",(0,i.jsx)(t.p,{children:"Add guardrails to prevent common quality issues by implementing validation steps in your application logic and adding post-processing to check outputs before presenting them to users."}),"\n",(0,i.jsx)(t.h3,{id:"application-architecture-improvements",children:"Application Architecture Improvements"}),"\n",(0,i.jsx)(t.p,{children:"If your application uses retrieval mechanisms, enhance them when relevant documents aren't being found. Examine retrieval spans in traces to see what's being retrieved, improve embedding models or retrieval algorithms, and consider chunking strategies if document segments are suboptimal."}),"\n",(0,i.jsx)(t.p,{children:"For complex decision processes, add reasoning steps by breaking down complex tasks into multiple spans, implementing chain-of-thought or other reasoning techniques, and adding verification steps for critical outputs."}),"\n",(0,i.jsx)(t.h2,{id:"measuring-quality-improvements",children:"Measuring Quality Improvements"}),"\n",(0,i.jsx)(t.p,{children:"After implementing changes, use MLflow to measure their impact through systematic evaluation and production monitoring."}),"\n",(0,i.jsx)(t.h3,{id:"systematic-evaluation-using-curated-datasets",children:"Systematic Evaluation Using Curated Datasets"}),"\n",(0,i.jsx)(t.p,{children:"Run systematic evaluations using your curated dataset to compare the original and improved models on real production scenarios:"}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-python",children:'import mlflow\nfrom mlflow.evaluators import evaluate\n\n# Compare the original and improved models on your dataset\nresults = mlflow.genai.evaluate(\n    data="evaluation_dataset.csv",\n    model=improved_model,  # Your improved model/application\n    baseline_model=original_model,  # The original version for comparison\n    evaluators=["mlflow_model"],\n    evaluator_config={\n        "custom_metrics": [\n            # Define your quality metrics here\n        ]\n    },\n)\n\n# View the results\nprint(results.metrics)\n'})}),"\n",(0,i.jsx)(t.h3,{id:"production-monitoring-after-improvements",children:"Production Monitoring After Improvements"}),"\n",(0,i.jsx)(t.p,{children:"Monitor production traces after deploying improvements by setting up dashboards to track quality metrics over time, monitoring for regressions or unexpected behavior, and continuously collecting new traces to identify emerging issues."}),"\n",(0,i.jsx)(t.p,{children:"This systematic approach ensures that your improvements have measurable impact and helps identify any unintended consequences of the changes."}),"\n",(0,i.jsx)(t.h2,{id:"integration-with-quality-improvement-workflows",children:"Integration with Quality Improvement Workflows"}),"\n",(0,i.jsx)(t.p,{children:"Advanced trace analysis becomes most valuable when integrated into systematic quality improvement processes. Use trace insights to identify improvement opportunities, implement targeted changes, and measure their effectiveness through continued trace analysis."}),"\n",(0,i.jsx)(t.p,{children:"Consider setting up automated analysis pipelines that regularly examine trace patterns, flag quality degradations, and generate evaluation datasets from new production interactions. This creates a continuous feedback loop where your production data directly informs quality improvements."}),"\n",(0,i.jsx)(t.h2,{id:"next-steps",children:"Next Steps"}),"\n",(0,i.jsxs)(t.p,{children:[(0,i.jsx)(t.strong,{children:(0,i.jsx)(t.a,{href:"/genai/tracing/search-traces",children:"Search Traces"})}),": Master advanced filtering and querying techniques for trace analysis"]}),"\n",(0,i.jsxs)(t.p,{children:[(0,i.jsx)(t.strong,{children:(0,i.jsx)(t.a,{href:"/genai/tracing/collect-user-feedback",children:"Collect User Feedback"})}),": Set up structured feedback collection for quality assessment"]}),"\n",(0,i.jsxs)(t.p,{children:[(0,i.jsx)(t.strong,{children:(0,i.jsx)(t.a,{href:"/genai/tracing/prod-tracing",children:"Production Monitoring"})}),": Implement comprehensive production observability"]}),"\n",(0,i.jsxs)(t.p,{children:[(0,i.jsx)(t.strong,{children:(0,i.jsx)(t.a,{href:"/genai/eval-monitor",children:"GenAI Evaluation"})}),": Use systematic evaluation frameworks for quality assessment"]}),"\n",(0,i.jsx)(t.admonition,{type:"tip",children:(0,i.jsx)(t.p,{children:"Quality improvement is most effective when based on real production data. Use trace analysis to identify actual user pain points rather than hypothetical issues, and measure improvements using the same trace data to ensure your changes have real impact."})}),"\n",(0,i.jsx)(t.h2,{id:"summary",children:"Summary"}),"\n",(0,i.jsx)(t.p,{children:"Advanced trace quality review enables data-driven quality improvements through systematic analysis of production interactions. By analyzing trace patterns through both quantitative metrics and qualitative examination, you can identify common failure modes and quality issues that impact user experience."}),"\n",(0,i.jsx)(t.p,{children:"Building evaluation datasets from real traces ensures your testing reflects actual usage patterns rather than synthetic scenarios, while systematic evaluation using MLflow provides concrete measurement of quality improvements. This approach transforms traces from debugging tools into a comprehensive quality intelligence system for continuous improvement of your GenAI applications."})]})}function m(e={}){const{wrapper:t}={...(0,r.R)(),...e.components};return t?(0,i.jsx)(t,{...e,children:(0,i.jsx)(p,{...e})}):p(e)}},28453:(e,t,a)=>{a.d(t,{R:()=>s,x:()=>o});var n=a(96540);const i={},r=n.createContext(i);function s(e){const t=n.useContext(r);return n.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function o(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:s(e.components),n.createElement(r.Provider,{value:t},e.children)}},49374:(e,t,a)=>{a.d(t,{B:()=>l});a(96540);const n=JSON.parse('{"mlflow.anthropic":"api_reference/python_api/mlflow.anthropic.html","mlflow.artifacts":"api_reference/python_api/mlflow.artifacts.html","mlflow.ag2":"api_reference/python_api/mlflow.ag2.html","mlflow.autogen":"api_reference/python_api/mlflow.autogen.html","mlflow.bedrock":"api_reference/python_api/mlflow.bedrock.html","mlflow.catboost":"api_reference/python_api/mlflow.catboost.html","mlflow.client":"api_reference/python_api/mlflow.client.html","mlflow.config":"api_reference/python_api/mlflow.config.html","mlflow.crewai":"api_reference/python_api/mlflow.crewai.html","mlflow.data":"api_reference/python_api/mlflow.data.html","mlflow.deployments":"api_reference/python_api/mlflow.deployments.html","mlflow.diviner":"api_reference/python_api/mlflow.diviner.html","mlflow.dspy":"api_reference/python_api/mlflow.dspy.html","mlflow.entities":"api_reference/python_api/mlflow.entities.html","mlflow.environment_variables":"api_reference/python_api/mlflow.environment_variables.html","mlflow.gateway":"api_reference/python_api/mlflow.gateway.html","mlflow.gemini":"api_reference/python_api/mlflow.gemini.html","mlflow.groq":"api_reference/python_api/mlflow.groq.html","mlflow.h2o":"api_reference/python_api/mlflow.h2o.html","mlflow.johnsnowlabs":"api_reference/python_api/mlflow.johnsnowlabs.html","mlflow.keras":"api_reference/python_api/mlflow.keras.html","mlflow.langchain":"api_reference/python_api/mlflow.langchain.html","mlflow.lightgbm":"api_reference/python_api/mlflow.lightgbm.html","mlflow.litellm":"api_reference/python_api/mlflow.litellm.html","mlflow.llama_index":"api_reference/python_api/mlflow.llama_index.html","mlflow.metrics":"api_reference/python_api/mlflow.metrics.html","mlflow.mistral":"api_reference/python_api/mlflow.mistral.html","mlflow.models":"api_reference/python_api/mlflow.models.html","mlflow.onnx":"api_reference/python_api/mlflow.onnx.html","mlflow.openai":"api_reference/python_api/mlflow.openai.html","mlflow.paddle":"api_reference/python_api/mlflow.paddle.html","mlflow.pmdarima":"api_reference/python_api/mlflow.pmdarima.html","mlflow.projects":"api_reference/python_api/mlflow.projects.html","mlflow.promptflow":"api_reference/python_api/mlflow.promptflow.html","mlflow.prophet":"api_reference/python_api/mlflow.prophet.html","mlflow.pyfunc":"api_reference/python_api/mlflow.pyfunc.html","mlflow.pyspark.ml":"api_reference/python_api/mlflow.pyspark.ml.html","mlflow.pytorch":"api_reference/python_api/mlflow.pytorch.html","mlflow":"api_reference/python_api/mlflow.html","mlflow.sagemaker":"api_reference/python_api/mlflow.sagemaker.html","mlflow.sentence_transformers":"api_reference/python_api/mlflow.sentence_transformers.html","mlflow.server":"api_reference/python_api/mlflow.server.html","mlflow.shap":"api_reference/python_api/mlflow.shap.html","mlflow.sklearn":"api_reference/python_api/mlflow.sklearn.html","mlflow.spacy":"api_reference/python_api/mlflow.spacy.html","mlflow.spark":"api_reference/python_api/mlflow.spark.html","mlflow.statsmodels":"api_reference/python_api/mlflow.statsmodels.html","mlflow.system_metrics":"api_reference/python_api/mlflow.system_metrics.html","mlflow.tensorflow":"api_reference/python_api/mlflow.tensorflow.html","mlflow.tracing":"api_reference/python_api/mlflow.tracing.html","mlflow.transformers":"api_reference/python_api/mlflow.transformers.html","mlflow.types":"api_reference/python_api/mlflow.types.html","mlflow.utils":"api_reference/python_api/mlflow.utils.html","mlflow.xgboost":"api_reference/python_api/mlflow.xgboost.html","mlflow.server.auth":"api_reference/auth/python-api.html"}');var i=a(86025),r=a(28774),s=a(74848);const o=e=>{const t=e.split(".");for(let a=t.length;a>0;a--){const e=t.slice(0,a).join(".");if(n[e])return e}return null};function l({fn:e,children:t}){const a=o(e);if(!a)return(0,s.jsx)(s.Fragment,{children:t});const l=(0,i.Ay)(`/${n[a]}#${e}`);return(0,s.jsx)(r.A,{to:l,target:"_blank",children:t??(0,s.jsxs)("code",{children:[e,"()"]})})}}}]);