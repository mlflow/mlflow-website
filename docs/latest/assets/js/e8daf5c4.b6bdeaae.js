"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[9879],{28453:(e,n,i)=>{i.d(n,{R:()=>r,x:()=>c});var s=i(96540);const t={},a=s.createContext(t);function r(e){const n=s.useContext(a);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:r(e.components),s.createElement(a.Provider,{value:n},e.children)}},97825:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>l,contentTitle:()=>c,default:()=>h,frontMatter:()=>r,metadata:()=>s,toc:()=>d});const s=JSON.parse('{"id":"tracing/collect-user-feedback/index","title":"Collect User Feedback","description":"Collecting and logging user feedback is essential for understanding the real-world quality of your GenAI application. User feedback provides ground truth about your application\'s performance and helps identify areas for improvement.","source":"@site/docs/genai/tracing/collect-user-feedback/index.mdx","sourceDirName":"tracing/collect-user-feedback","slug":"/tracing/collect-user-feedback/","permalink":"/docs/latest/genai/tracing/collect-user-feedback/","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{},"sidebar":"genAISidebar","previous":{"title":"Track App Versions and Environments","permalink":"/docs/latest/genai/tracing/track-environments-context/"},"next":{"title":"Trace Tagging","permalink":"/docs/latest/genai/tracing/attach-tags/"}}');var t=i(74848),a=i(28453);const r={},c="Collect User Feedback",l={},d=[{value:"Why Collect User Feedback?",id:"why-collect-user-feedback",level:2},{value:"Types of Feedback",id:"types-of-feedback",level:2},{value:"Feedback Collection Patterns",id:"feedback-collection-patterns",level:2},{value:"Linking Feedback to Traces",id:"linking-feedback-to-traces",level:3},{value:"Request Tracking Approach",id:"request-tracking-approach",level:3},{value:"Implementation Considerations",id:"implementation-considerations",level:3},{value:"Using Trace Tags for Feedback",id:"using-trace-tags-for-feedback",level:2},{value:"Tagging Strategy",id:"tagging-strategy",level:3},{value:"Feedback Analysis",id:"feedback-analysis",level:3},{value:"Feedback Collection Best Practices",id:"feedback-collection-best-practices",level:2},{value:"1. Minimize User Friction",id:"1-minimize-user-friction",level:3},{value:"2. Preserve User Privacy",id:"2-preserve-user-privacy",level:3},{value:"3. Design for Analysis",id:"3-design-for-analysis",level:3},{value:"4. Handle Edge Cases",id:"4-handle-edge-cases",level:3},{value:"Analyzing Feedback Data",id:"analyzing-feedback-data",level:2},{value:"Performance Correlation",id:"performance-correlation",level:3},{value:"Quality Trends",id:"quality-trends",level:3},{value:"Building Evaluation Datasets",id:"building-evaluation-datasets",level:3},{value:"Integration Examples",id:"integration-examples",level:2},{value:"Web Application Feedback",id:"web-application-feedback",level:3},{value:"Chat Interface Feedback",id:"chat-interface-feedback",level:3},{value:"API Integration Feedback",id:"api-integration-feedback",level:3},{value:"Production Considerations",id:"production-considerations",level:2},{value:"Monitoring Feedback Health",id:"monitoring-feedback-health",level:3},{value:"Scalability",id:"scalability",level:3},{value:"Next Steps",id:"next-steps",level:2},{value:"Summary",id:"summary",level:2}];function o(e){const n={a:"a",admonition:"admonition",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,a.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.header,{children:(0,t.jsx)(n.h1,{id:"collect-user-feedback",children:"Collect User Feedback"})}),"\n",(0,t.jsx)(n.p,{children:"Collecting and logging user feedback is essential for understanding the real-world quality of your GenAI application. User feedback provides ground truth about your application's performance and helps identify areas for improvement."}),"\n",(0,t.jsx)(n.h2,{id:"why-collect-user-feedback",children:"Why Collect User Feedback?"}),"\n",(0,t.jsx)(n.p,{children:"User feedback provides critical insights that automated metrics cannot capture:"}),"\n",(0,t.jsxs)(n.ol,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Real-world quality signals"})," - Understand how actual users perceive your application's outputs"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Continuous improvement"})," - Identify patterns in user satisfaction to guide development priorities"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Training data creation"})," - Use feedback to build high-quality evaluation datasets"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Quality monitoring"})," - Track satisfaction trends over time and across different user segments"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Model optimization"})," - Leverage feedback data to improve your underlying models"]}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"types-of-feedback",children:"Types of Feedback"}),"\n",(0,t.jsx)(n.p,{children:"Different feedback mechanisms serve different purposes in understanding user satisfaction:"}),"\n",(0,t.jsxs)(n.table,{children:[(0,t.jsx)(n.thead,{children:(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.th,{children:"Feedback Type"}),(0,t.jsx)(n.th,{children:"Description"}),(0,t.jsx)(n.th,{children:"Common Use Cases"})]})}),(0,t.jsxs)(n.tbody,{children:[(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.strong,{children:"Binary feedback"})}),(0,t.jsx)(n.td,{children:"Simple thumbs up/down or correct/incorrect"}),(0,t.jsx)(n.td,{children:"Quick user satisfaction signals"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.strong,{children:"Numeric scores"})}),(0,t.jsx)(n.td,{children:"Ratings on a scale (e.g., 1-5 stars)"}),(0,t.jsx)(n.td,{children:"Detailed quality assessment"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.strong,{children:"Categorical feedback"})}),(0,t.jsx)(n.td,{children:"Multiple choice options"}),(0,t.jsx)(n.td,{children:"Classifying issues or response types"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.strong,{children:"Text feedback"})}),(0,t.jsx)(n.td,{children:"Free-form comments"}),(0,t.jsx)(n.td,{children:"Detailed user explanations"})]})]})]}),"\n",(0,t.jsx)(n.h2,{id:"feedback-collection-patterns",children:"Feedback Collection Patterns"}),"\n",(0,t.jsx)(n.h3,{id:"linking-feedback-to-traces",children:"Linking Feedback to Traces"}),"\n",(0,t.jsx)(n.p,{children:"The key to effective feedback collection is connecting user feedback back to the specific interaction that generated it. This enables you to:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Understand which types of requests lead to positive or negative feedback"}),"\n",(0,t.jsx)(n.li,{children:"Analyze the relationship between application performance and user satisfaction"}),"\n",(0,t.jsx)(n.li,{children:"Build evaluation datasets from real user interactions"}),"\n"]}),"\n",(0,t.jsx)(n.h3,{id:"request-tracking-approach",children:"Request Tracking Approach"}),"\n",(0,t.jsx)(n.p,{children:"Use unique request identifiers to link feedback to specific traces:"}),"\n",(0,t.jsxs)(n.ol,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Generate unique IDs"})," for each user interaction"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Associate IDs with traces"})," using tags or metadata"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Collect feedback"})," referencing the same ID"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Store feedback"})," alongside trace data for analysis"]}),"\n"]}),"\n",(0,t.jsx)(n.h3,{id:"implementation-considerations",children:"Implementation Considerations"}),"\n",(0,t.jsx)(n.p,{children:"When implementing feedback collection:"}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Frontend Integration:"})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Make feedback collection frictionless (simple thumbs up/down)"}),"\n",(0,t.jsx)(n.li,{children:"Provide optional detailed feedback for users who want to elaborate"}),"\n",(0,t.jsx)(n.li,{children:"Consider contextual timing for feedback requests"}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Backend Storage:"})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Link feedback to trace identifiers"}),"\n",(0,t.jsx)(n.li,{children:"Store feedback metadata (user ID, timestamp, context)"}),"\n",(0,t.jsx)(n.li,{children:"Consider privacy requirements and data anonymization"}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Analysis Integration:"})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Query feedback alongside trace performance data"}),"\n",(0,t.jsx)(n.li,{children:"Track feedback trends over time"}),"\n",(0,t.jsx)(n.li,{children:"Identify correlations between trace characteristics and user satisfaction"}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"using-trace-tags-for-feedback",children:"Using Trace Tags for Feedback"}),"\n",(0,t.jsx)(n.p,{children:"While dedicated feedback APIs are in development, you can implement feedback collection using MLflow's trace tagging system:"}),"\n",(0,t.jsx)(n.h3,{id:"tagging-strategy",children:"Tagging Strategy"}),"\n",(0,t.jsx)(n.p,{children:"Use consistent tag naming conventions to organize feedback data:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"feedback_received: true/false"})," - Whether feedback was provided"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"feedback_positive: true/false"})," - Binary satisfaction indicator"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"feedback_rating: 1-5"})," - Numeric satisfaction score"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"feedback_category: helpful/unhelpful/incorrect"})," - Categorical feedback"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"feedback_user: user_123"})," - User identifier (consider anonymization)"]}),"\n"]}),"\n",(0,t.jsx)(n.h3,{id:"feedback-analysis",children:"Feedback Analysis"}),"\n",(0,t.jsx)(n.p,{children:"Query traces with feedback tags to analyze patterns:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-python",children:'import mlflow\n\n# Find traces with positive feedback\npositive_feedback_traces = mlflow.search_traces(\n    experiment_ids=["1"],\n    filter_string="tags.feedback_positive = \'true\'",\n    max_results=100,\n)\n\n# Find traces with negative feedback\nnegative_feedback_traces = mlflow.search_traces(\n    experiment_ids=["1"],\n    filter_string="tags.feedback_positive = \'false\'",\n    max_results=100,\n)\n\n# Compare characteristics\nprint(f"Positive feedback traces: {len(positive_feedback_traces)}")\nprint(f"Negative feedback traces: {len(negative_feedback_traces)}")\n'})}),"\n",(0,t.jsx)(n.h2,{id:"feedback-collection-best-practices",children:"Feedback Collection Best Practices"}),"\n",(0,t.jsx)(n.h3,{id:"1-minimize-user-friction",children:"1. Minimize User Friction"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Simple interfaces"}),": Start with binary thumbs up/down"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Progressive detail"}),": Allow optional detailed feedback"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Contextual timing"}),": Ask for feedback at natural stopping points"]}),"\n"]}),"\n",(0,t.jsx)(n.h3,{id:"2-preserve-user-privacy",children:"2. Preserve User Privacy"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Anonymize identifiers"}),": Use hashed or pseudonymous user IDs"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Limit data collection"}),": Only collect necessary feedback information"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Data retention"}),": Implement appropriate retention policies"]}),"\n"]}),"\n",(0,t.jsx)(n.h3,{id:"3-design-for-analysis",children:"3. Design for Analysis"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Consistent tagging"}),": Use standardized tag names across your application"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Structured data"}),": Store feedback in queryable formats"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Temporal tracking"}),": Include timestamps for trend analysis"]}),"\n"]}),"\n",(0,t.jsx)(n.h3,{id:"4-handle-edge-cases",children:"4. Handle Edge Cases"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Rate limiting"}),": Prevent feedback spam or abuse"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Validation"}),": Ensure feedback data quality"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Error handling"}),": Gracefully handle feedback collection failures"]}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"analyzing-feedback-data",children:"Analyzing Feedback Data"}),"\n",(0,t.jsx)(n.h3,{id:"performance-correlation",children:"Performance Correlation"}),"\n",(0,t.jsx)(n.p,{children:"Analyze the relationship between trace performance and user satisfaction:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-python",children:'# Compare execution times for positive vs negative feedback\npositive_times = [trace.info.execution_time_ms for trace in positive_feedback_traces]\nnegative_times = [trace.info.execution_time_ms for trace in negative_feedback_traces]\n\nif positive_times and negative_times:\n    avg_positive_time = sum(positive_times) / len(positive_times)\n    avg_negative_time = sum(negative_times) / len(negative_times)\n\n    print(f"Average time for positive feedback: {avg_positive_time:.2f}ms")\n    print(f"Average time for negative feedback: {avg_negative_time:.2f}ms")\n'})}),"\n",(0,t.jsx)(n.h3,{id:"quality-trends",children:"Quality Trends"}),"\n",(0,t.jsx)(n.p,{children:"Track feedback trends over time to monitor application quality:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-python",children:'from datetime import datetime, timedelta\n\n# Get feedback from the last week\nweek_ago = datetime.now() - timedelta(days=7)\ntimestamp_ms = int(week_ago.timestamp() * 1000)\n\nrecent_feedback = mlflow.search_traces(\n    experiment_ids=["1"],\n    filter_string=f"timestamp_ms > {timestamp_ms} AND tags.feedback_received = \'true\'",\n    max_results=500,\n)\n\n# Calculate satisfaction rate\npositive_count = len(\n    [t for t in recent_feedback if t.data.tags.get("feedback_positive") == "true"]\n)\nsatisfaction_rate = positive_count / len(recent_feedback) if recent_feedback else 0\n\nprint(f"Weekly satisfaction rate: {satisfaction_rate:.2%}")\n'})}),"\n",(0,t.jsx)(n.h3,{id:"building-evaluation-datasets",children:"Building Evaluation Datasets"}),"\n",(0,t.jsx)(n.p,{children:"Use feedback data to create evaluation datasets:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-python",children:'# Extract high-quality interactions for evaluation datasets\nhigh_quality_traces = mlflow.search_traces(\n    experiment_ids=["1"],\n    filter_string="tags.feedback_positive = \'true\' AND tags.feedback_rating >= \'4\'",\n    max_results=200,\n)\n\nprint(f"Found {len(high_quality_traces)} high-quality interactions")\nprint("These can be used as positive examples in evaluation datasets")\n'})}),"\n",(0,t.jsx)(n.h2,{id:"integration-examples",children:"Integration Examples"}),"\n",(0,t.jsx)(n.h3,{id:"web-application-feedback",children:"Web Application Feedback"}),"\n",(0,t.jsx)(n.p,{children:"Implement feedback collection in web applications by:"}),"\n",(0,t.jsxs)(n.ol,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Generating request IDs"})," when processing user requests"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Returning IDs"})," in API responses for frontend reference"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Collecting feedback"})," via separate endpoints that reference the ID"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Tagging traces"})," with received feedback data"]}),"\n"]}),"\n",(0,t.jsx)(n.h3,{id:"chat-interface-feedback",children:"Chat Interface Feedback"}),"\n",(0,t.jsx)(n.p,{children:"For conversational interfaces:"}),"\n",(0,t.jsxs)(n.ol,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Track conversation context"})," with session identifiers"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Enable turn-level feedback"})," for individual responses"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Support conversation-level feedback"})," for overall satisfaction"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Link feedback"})," to specific turns or entire conversations"]}),"\n"]}),"\n",(0,t.jsx)(n.h3,{id:"api-integration-feedback",children:"API Integration Feedback"}),"\n",(0,t.jsx)(n.p,{children:"For API-based applications:"}),"\n",(0,t.jsxs)(n.ol,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Include feedback endpoints"})," in your API design"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Support batch feedback"})," for multiple interactions"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Provide feedback schemas"})," for consistent data collection"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Document feedback patterns"})," for API consumers"]}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"production-considerations",children:"Production Considerations"}),"\n",(0,t.jsx)(n.h3,{id:"monitoring-feedback-health",children:"Monitoring Feedback Health"}),"\n",(0,t.jsx)(n.p,{children:"Track key metrics to ensure effective feedback collection:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Feedback collection rate"}),": Percentage of interactions that receive feedback"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Response time impact"}),": Ensure feedback collection doesn't slow down responses"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Data quality"}),": Monitor for spam or invalid feedback"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"User engagement"}),": Track which feedback mechanisms are most effective"]}),"\n"]}),"\n",(0,t.jsx)(n.h3,{id:"scalability",children:"Scalability"}),"\n",(0,t.jsx)(n.p,{children:"Design feedback systems that scale with your application:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Asynchronous processing"}),": Handle feedback collection without blocking responses"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Batch operations"}),": Process feedback in batches for efficiency"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Storage optimization"}),": Use appropriate storage systems for feedback volume"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Query performance"}),": Ensure feedback queries remain fast as data grows"]}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"next-steps",children:"Next Steps"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:(0,t.jsx)(n.a,{href:"/genai/tracing/quality-with-traces",children:"Use Traces for Quality Evaluation"})}),": Learn how to analyze feedback alongside trace data"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:(0,t.jsx)(n.a,{href:"/genai/tracing/search-traces",children:"Search Traces"})}),": Master techniques for querying traces with feedback"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:(0,t.jsx)(n.a,{href:"/genai/tracing/prod-tracing",children:"Production Monitoring"})}),": Set up comprehensive monitoring including feedback metrics"]}),"\n"]}),"\n",(0,t.jsx)(n.admonition,{type:"tip",children:(0,t.jsx)(n.p,{children:"Start simple with binary feedback (thumbs up/down) and expand to more detailed feedback mechanisms as you understand your users' preferences and your application's needs."})}),"\n",(0,t.jsx)(n.h2,{id:"summary",children:"Summary"}),"\n",(0,t.jsx)(n.p,{children:"Effective user feedback collection enables continuous improvement of GenAI applications:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Strategic value"}),": Feedback provides ground truth for application quality"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Implementation patterns"}),": Use trace tags and consistent identifiers to link feedback to interactions"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Analysis opportunities"}),": Correlate feedback with performance metrics and trace characteristics"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Production readiness"}),": Design for scale, privacy, and operational monitoring"]}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:"User feedback, combined with comprehensive tracing, provides the observability foundation needed to build and maintain high-quality GenAI applications that truly serve user needs."})]})}function h(e={}){const{wrapper:n}={...(0,a.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(o,{...e})}):o(e)}}}]);