"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[9544],{11470:(e,n,t)=>{t.d(n,{A:()=>b});var r=t(96540),a=t(34164),i=t(23104),s=t(56347),o=t(205),l=t(57485),c=t(31682),u=t(70679);function d(e){return r.Children.toArray(e).filter((e=>"\n"!==e)).map((e=>{if(!e||(0,r.isValidElement)(e)&&function(e){const{props:n}=e;return!!n&&"object"==typeof n&&"value"in n}(e))return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)}))?.filter(Boolean)??[]}function h(e){const{values:n,children:t}=e;return(0,r.useMemo)((()=>{const e=n??function(e){return d(e).map((({props:{value:e,label:n,attributes:t,default:r}})=>({value:e,label:n,attributes:t,default:r})))}(t);return function(e){const n=(0,c.XI)(e,((e,n)=>e.value===n.value));if(n.length>0)throw new Error(`Docusaurus error: Duplicate values "${n.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`)}(e),e}),[n,t])}function p({value:e,tabValues:n}){return n.some((n=>n.value===e))}function m({queryString:e=!1,groupId:n}){const t=(0,s.W6)(),a=function({queryString:e=!1,groupId:n}){if("string"==typeof e)return e;if(!1===e)return null;if(!0===e&&!n)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return n??null}({queryString:e,groupId:n});return[(0,l.aZ)(a),(0,r.useCallback)((e=>{if(!a)return;const n=new URLSearchParams(t.location.search);n.set(a,e),t.replace({...t.location,search:n.toString()})}),[a,t])]}function f(e){const{defaultValue:n,queryString:t=!1,groupId:a}=e,i=h(e),[s,l]=(0,r.useState)((()=>function({defaultValue:e,tabValues:n}){if(0===n.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(e){if(!p({value:e,tabValues:n}))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${e}" but none of its children has the corresponding value. Available values are: ${n.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return e}const t=n.find((e=>e.default))??n[0];if(!t)throw new Error("Unexpected error: 0 tabValues");return t.value}({defaultValue:n,tabValues:i}))),[c,d]=m({queryString:t,groupId:a}),[f,g]=function({groupId:e}){const n=function(e){return e?`docusaurus.tab.${e}`:null}(e),[t,a]=(0,u.Dv)(n);return[t,(0,r.useCallback)((e=>{n&&a.set(e)}),[n,a])]}({groupId:a}),x=(()=>{const e=c??f;return p({value:e,tabValues:i})?e:null})();(0,o.A)((()=>{x&&l(x)}),[x]);return{selectedValue:s,selectValue:(0,r.useCallback)((e=>{if(!p({value:e,tabValues:i}))throw new Error(`Can't select invalid tab value=${e}`);l(e),d(e),g(e)}),[d,g,i]),tabValues:i}}var g=t(92303);const x={tabList:"tabList__CuJ",tabItem:"tabItem_LNqP"};var j=t(74848);function w({className:e,block:n,selectedValue:t,selectValue:r,tabValues:s}){const o=[],{blockElementScrollPositionUntilNextRender:l}=(0,i.a_)(),c=e=>{const n=e.currentTarget,a=o.indexOf(n),i=s[a].value;i!==t&&(l(n),r(i))},u=e=>{let n=null;switch(e.key){case"Enter":c(e);break;case"ArrowRight":{const t=o.indexOf(e.currentTarget)+1;n=o[t]??o[0];break}case"ArrowLeft":{const t=o.indexOf(e.currentTarget)-1;n=o[t]??o[o.length-1];break}}n?.focus()};return(0,j.jsx)("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,a.A)("tabs",{"tabs--block":n},e),children:s.map((({value:e,label:n,attributes:r})=>(0,j.jsx)("li",{role:"tab",tabIndex:t===e?0:-1,"aria-selected":t===e,ref:e=>{o.push(e)},onKeyDown:u,onClick:c,...r,className:(0,a.A)("tabs__item",x.tabItem,r?.className,{"tabs__item--active":t===e}),children:n??e},e)))})}function y({lazy:e,children:n,selectedValue:t}){const i=(Array.isArray(n)?n:[n]).filter(Boolean);if(e){const e=i.find((e=>e.props.value===t));return e?(0,r.cloneElement)(e,{className:(0,a.A)("margin-top--md",e.props.className)}):null}return(0,j.jsx)("div",{className:"margin-top--md",children:i.map(((e,n)=>(0,r.cloneElement)(e,{key:n,hidden:e.props.value!==t})))})}function v(e){const n=f(e);return(0,j.jsxs)("div",{className:(0,a.A)("tabs-container",x.tabList),children:[(0,j.jsx)(w,{...n,...e}),(0,j.jsx)(y,{...n,...e})]})}function b(e){const n=(0,g.A)();return(0,j.jsx)(v,{...e,children:d(e.children)},String(n))}},19365:(e,n,t)=>{t.d(n,{A:()=>s});t(96540);var r=t(34164);const a={tabItem:"tabItem_Ymn6"};var i=t(74848);function s({children:e,hidden:n,className:t}){return(0,i.jsx)("div",{role:"tabpanel",className:(0,r.A)(a.tabItem,t),hidden:n,children:e})}},28453:(e,n,t)=>{t.d(n,{R:()=>s,x:()=>o});var r=t(96540);const a={},i=r.createContext(a);function s(e){const n=r.useContext(i);return r.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:s(e.components),r.createElement(i.Provider,{value:n},e.children)}},36458:(e,n,t)=>{t.d(n,{A:()=>r});const r=t.p+"assets/images/tracing-top-dcca046565ab33be6afe0447dd328c22.gif"},76486:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>u,contentTitle:()=>c,default:()=>p,frontMatter:()=>l,metadata:()=>r,toc:()=>d});const r=JSON.parse('{"id":"tracing/quickstart","title":"Tracing Quickstart","description":"This quickstart guide will walk you through setting up a simple GenAI application with MLflow Tracing. In less than 10 minutes, you\'ll enable tracing, run a basic application, and explore the generated traces in the MLflow UI.","source":"@site/docs/genai/tracing/quickstart.mdx","sourceDirName":"tracing","slug":"/tracing/quickstart","permalink":"/docs/latest/genai/tracing/quickstart","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{},"sidebar":"genAISidebar","previous":{"title":"MLflow Tracing for LLM Observability","permalink":"/docs/latest/genai/tracing/"},"next":{"title":"Instrument your app","permalink":"/docs/latest/genai/tracing/app-instrumentation/"}}');var a=t(74848),i=t(28453),s=t(11470),o=t(19365);const l={},c="Tracing Quickstart",u={},d=[{value:"Prerequisites",id:"prerequisites",level:2},{value:"Step 1: Set up your environment",id:"step-1-set-up-your-environment",level:2},{value:"Configure OpenAI API Key",id:"configure-openai-api-key",level:3},{value:"Step 2: Create a simple application with tracing",id:"step-2-create-a-simple-application-with-tracing",level:2},{value:"Step 3: Run the application",id:"step-3-run-the-application",level:2},{value:"Step 4: Explore traces in the MLflow UI",id:"step-4-explore-traces-in-the-mlflow-ui",level:2},{value:"Step 5: Add custom tracing (Optional)",id:"step-5-add-custom-tracing-optional",level:2},{value:"Next Steps",id:"next-steps",level:2},{value:"Troubleshooting",id:"troubleshooting",level:2},{value:"Common Issues",id:"common-issues",level:3},{value:"Summary",id:"summary",level:2}];function h(e){const n={a:"a",admonition:"admonition",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",img:"img",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,i.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(n.header,{children:(0,a.jsx)(n.h1,{id:"tracing-quickstart",children:"Tracing Quickstart"})}),"\n",(0,a.jsx)(n.p,{children:"This quickstart guide will walk you through setting up a simple GenAI application with MLflow Tracing. In less than 10 minutes, you'll enable tracing, run a basic application, and explore the generated traces in the MLflow UI."}),"\n",(0,a.jsx)(n.h2,{id:"prerequisites",children:"Prerequisites"}),"\n",(0,a.jsx)(n.p,{children:"This guide requires the following packages:"}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.strong,{children:"mlflow>=3.1"}),": Core MLflow functionality with GenAI features"]}),"\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.strong,{children:"openai>=1.0.0"}),": For OpenAI API integration"]}),"\n"]}),"\n",(0,a.jsx)(n.p,{children:"Install the required packages:"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:'pip install --upgrade "mlflow" openai>=1.0.0\n'})}),"\n",(0,a.jsx)(n.admonition,{type:"note",children:(0,a.jsxs)(n.p,{children:["Tracing features are available in MLflow 2.15.0+, though some advanced features may be limited compared to MLflow 3. It is ",(0,a.jsx)(n.strong,{children:"highly advised"})," to upgrade to MLflow 3 to get the benefits of tracing features that have been greatly improved."]})}),"\n",(0,a.jsx)(n.h2,{id:"step-1-set-up-your-environment",children:"Step 1: Set up your environment"}),"\n",(0,a.jsxs)(s.A,{children:[(0,a.jsxs)(o.A,{value:"local",label:"Local MLflow",default:!0,children:[(0,a.jsx)(n.p,{children:"For the fastest setup, you can run MLflow locally:"}),(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"# Start MLflow tracking server locally\nmlflow ui\n\n# This will start the server at http://127.0.0.1:5000\n"})})]}),(0,a.jsxs)(o.A,{value:"remote",label:"Remove MLflow Server",children:[(0,a.jsx)(n.p,{children:"If you have a remote MLflow tracking server, configure the connection:"}),(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-python",children:'import os\nimport mlflow\n\n# Set your MLflow tracking URI\nos.environ["MLFLOW_TRACKING_URI"] = "http://your-mlflow-server:5000"\n# Or directly in code\nmlflow.set_tracking_uri("http://your-mlflow-server:5000")\n'})})]}),(0,a.jsxs)(o.A,{value:"databricks",label:"Databricks",children:[(0,a.jsx)(n.p,{children:"If you have a Databricks account, configure the connection:"}),(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-python",children:"import mlflow\n\nmlflow.login()\n"})}),(0,a.jsx)(n.p,{children:"This will prompt you for your configuration details (Databricks Host url and a PAT)."})]})]}),"\n",(0,a.jsx)(n.h3,{id:"configure-openai-api-key",children:"Configure OpenAI API Key"}),"\n",(0,a.jsx)(n.p,{children:"Set your OpenAI API key as an environment variable:"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-python",children:'import os\n\n# Set your OpenAI API key\nos.environ["OPENAI_API_KEY"] = "your-api-key-here"  # Replace with your actual API key\n'})}),"\n",(0,a.jsxs)(n.admonition,{type:"tip",children:[(0,a.jsx)(n.p,{children:"You can also set the environment variable in your shell before running the script:"}),(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:'export OPENAI_API_KEY="your-api-key-here"\nexport MLFLOW_TRACKING_URI="http://your-mlflow-server:5000"  # Optional: for remote server, set as \'databricks\' if connecting to a Databricks account\n'})})]}),"\n",(0,a.jsx)(n.h2,{id:"step-2-create-a-simple-application-with-tracing",children:"Step 2: Create a simple application with tracing"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-python",children:'import mlflow\nimport openai\nfrom openai import OpenAI\nimport os\n\n# Set up MLflow experiment\nmlflow.set_experiment("openai-tracing-quickstart")\n\n# Enable automatic tracing for all OpenAI API calls\nmlflow.openai.autolog()\n\nclient = OpenAI()\n\n\ndef get_weather_response(location):\n    """Get a weather-related response for a given location."""\n    response = client.chat.completions.create(\n        model="gpt-4o-mini",\n        messages=[\n            {"role": "system", "content": "You are a helpful weather assistant."},\n            {"role": "user", "content": f"What\'s the weather like in {location}?"},\n        ],\n        max_tokens=100,\n        temperature=0.7,\n    )\n    return response.choices[0].message.content\n\n\n# Execute the traced function\nlocation = "San Francisco"\nresponse = get_weather_response(location)\n\nprint(f"Query: What\'s the weather like in {location}?")\nprint(f"Response: {response}")\nprint("\\nTraces have been captured!")\nprint(\n    "View them in the MLflow UI at: http://127.0.0.1:5000 (or your MLflow server URL)"\n)\n'})}),"\n",(0,a.jsx)(n.h2,{id:"step-3-run-the-application",children:"Step 3: Run the application"}),"\n",(0,a.jsxs)(s.A,{children:[(0,a.jsxs)(o.A,{value:"notebook",label:"In a Jupyter Notebook",default:!0,children:[(0,a.jsx)(n.p,{children:"Simply run the code cell above. You should see output similar to:"}),(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{children:"Query: What's the weather like in San Francisco?\nResponse: I don't have real-time weather data, but San Francisco typically has mild temperatures year-round...\nTraces have been captured!\nView them in the MLflow UI at: http://127.0.0.1:5000\n"})}),(0,a.jsx)(n.admonition,{type:"tip",children:(0,a.jsx)(n.p,{children:"If you're using Jupyter with MLflow 2.20+, the trace UI will automatically display in your notebook when traces are generated!"})})]}),(0,a.jsxs)(o.A,{value:"script",label:"As a Python Script",children:[(0,a.jsxs)(n.ol,{children:["\n",(0,a.jsxs)(n.li,{children:["Save the code above to a file named ",(0,a.jsx)(n.code,{children:"weather_app.py"})]}),"\n",(0,a.jsx)(n.li,{children:"Run the script:"}),"\n"]}),(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"python weather_app.py\n"})}),(0,a.jsx)(n.p,{children:"You should see output similar to:"}),(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{children:"Query: What's the weather like in San Francisco?\nResponse: I don't have real-time weather data, but San Francisco typically has mild temperatures year-round...\nTraces have been captured!\nView them in the MLflow UI at: http://127.0.0.1:5000\n"})})]})]}),"\n",(0,a.jsx)(n.h2,{id:"step-4-explore-traces-in-the-mlflow-ui",children:"Step 4: Explore traces in the MLflow UI"}),"\n",(0,a.jsxs)(n.ol,{children:["\n",(0,a.jsxs)(n.li,{children:["\n",(0,a.jsxs)(n.p,{children:[(0,a.jsx)(n.strong,{children:"Open the MLflow UI"})," by navigating to ",(0,a.jsx)(n.a,{href:"http://127.0.0.1:5000",children:"http://127.0.0.1:5000"})," (or your MLflow server URL)"]}),"\n"]}),"\n",(0,a.jsxs)(n.li,{children:["\n",(0,a.jsxs)(n.p,{children:[(0,a.jsx)(n.strong,{children:'Click on the "openai-tracing-quickstart" experiment'})," from the experiments list"]}),"\n"]}),"\n",(0,a.jsxs)(n.li,{children:["\n",(0,a.jsxs)(n.p,{children:[(0,a.jsx)(n.strong,{children:'Click on the "Traces" tab'})," to view all captured traces from your OpenAI API calls"]}),"\n"]}),"\n",(0,a.jsxs)(n.li,{children:["\n",(0,a.jsxs)(n.p,{children:[(0,a.jsx)(n.strong,{children:"Click on any individual trace"})," to open the detailed trace view"]}),"\n"]}),"\n",(0,a.jsxs)(n.li,{children:["\n",(0,a.jsxs)(n.p,{children:[(0,a.jsx)(n.strong,{children:"Explore the trace details"})," including input messages, system prompts, model parameters (temperature, max_tokens, etc.), output responses, execution time, token usage, and the complete request/response flow"]}),"\n"]}),"\n"]}),"\n",(0,a.jsx)(n.p,{children:(0,a.jsx)(n.img,{alt:"MLflow Traces UI",src:t(36458).A+"",width:"1876",height:"1080"})}),"\n",(0,a.jsx)(n.h2,{id:"step-5-add-custom-tracing-optional",children:"Step 5: Add custom tracing (Optional)"}),"\n",(0,a.jsx)(n.p,{children:"Enhance your application with custom tracing for better observability:"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-python",children:'import mlflow\nfrom openai import OpenAI\n\nmlflow.set_experiment("enhanced-weather-app")\nmlflow.openai.autolog()\n\nclient = OpenAI()\n\n\n@mlflow.trace\ndef preprocess_location(location):\n    """Preprocess the location input."""\n    # Add custom span for preprocessing\n    cleaned_location = location.strip().title()\n    return cleaned_location\n\n\n@mlflow.trace\ndef get_enhanced_weather_response(location):\n    """Enhanced weather response with preprocessing and custom metadata."""\n\n    # Add tags for better organization\n    mlflow.update_current_trace(\n        tags={\n            "location": location,\n            "app_version": "1.0.0",\n            "request_type": "weather_query",\n        }\n    )\n\n    # Preprocess input\n    cleaned_location = preprocess_location(location)\n\n    # Make OpenAI call (automatically traced)\n    response = client.chat.completions.create(\n        model="gpt-4o-mini",\n        messages=[\n            {"role": "system", "content": "You are a helpful weather assistant."},\n            {\n                "role": "user",\n                "content": f"What\'s the weather like in {cleaned_location}?",\n            },\n        ],\n        max_tokens=150,\n        temperature=0.7,\n    )\n\n    result = response.choices[0].message.content\n\n    # Add custom attributes\n    mlflow.update_current_trace(\n        attributes={\n            "response_length": len(result),\n            "cleaned_location": cleaned_location,\n        }\n    )\n\n    return result\n\n\n# Test the enhanced function\nlocations = ["san francisco", "  New York  ", "tokyo"]\n\nfor location in locations:\n    print(f"\\n--- Processing: {location} ---")\n    response = get_enhanced_weather_response(location)\n    print(f"Response: {response[:100]}...")\n\nprint("\\nEnhanced traces captured! Check the MLflow UI for detailed trace information.")\n'})}),"\n",(0,a.jsx)(n.h2,{id:"next-steps",children:"Next Steps"}),"\n",(0,a.jsx)(n.p,{children:"Now that you have basic tracing working, explore these advanced features:"}),"\n",(0,a.jsxs)(n.ol,{children:["\n",(0,a.jsxs)(n.li,{children:["\n",(0,a.jsxs)(n.p,{children:[(0,a.jsx)(n.strong,{children:"Search and Filter Traces"}),"\nLearn how to find specific traces using the ",(0,a.jsx)(n.a,{href:"/genai/tracing/search-traces",children:"search functionality"}),"."]}),"\n"]}),"\n",(0,a.jsxs)(n.li,{children:["\n",(0,a.jsxs)(n.p,{children:[(0,a.jsx)(n.strong,{children:"Add Tags and Context"}),"\nOrganize your traces with ",(0,a.jsx)(n.a,{href:"/genai/tracing/attach-tags",children:"custom tags"})," for better monitoring."]}),"\n"]}),"\n",(0,a.jsxs)(n.li,{children:["\n",(0,a.jsxs)(n.p,{children:[(0,a.jsx)(n.strong,{children:"Production Deployment"}),"\nSet up ",(0,a.jsx)(n.a,{href:"/genai/tracing/prod-tracing",children:"production monitoring"})," with the lightweight SDK."]}),"\n"]}),"\n",(0,a.jsxs)(n.li,{children:["\n",(0,a.jsxs)(n.p,{children:[(0,a.jsx)(n.strong,{children:"Integration with Other Libraries"}),"\nExplore ",(0,a.jsx)(n.a,{href:"/genai/tracing/integrations/",children:"automatic tracing"})," for LangChain, LlamaIndex, and more."]}),"\n"]}),"\n",(0,a.jsxs)(n.li,{children:["\n",(0,a.jsxs)(n.p,{children:[(0,a.jsx)(n.strong,{children:"Manual Instrumentation"}),"\nLearn ",(0,a.jsx)(n.a,{href:"/genai/tracing/app-instrumentation/manual-tracing",children:"manual tracing techniques"})," for custom applications."]}),"\n"]}),"\n"]}),"\n",(0,a.jsx)(n.h2,{id:"troubleshooting",children:"Troubleshooting"}),"\n",(0,a.jsx)(n.h3,{id:"common-issues",children:"Common Issues"}),"\n",(0,a.jsx)(n.p,{children:(0,a.jsx)(n.strong,{children:"Traces not appearing in UI:"})}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsx)(n.li,{children:"Verify MLflow server is running and accessible"}),"\n",(0,a.jsxs)(n.li,{children:["Check that ",(0,a.jsx)(n.code,{children:"MLFLOW_TRACKING_URI"})," is set correctly"]}),"\n",(0,a.jsx)(n.li,{children:"Ensure experiment exists (MLflow creates it automatically if it doesn't)"}),"\n"]}),"\n",(0,a.jsx)(n.p,{children:(0,a.jsx)(n.strong,{children:"OpenAI API errors:"})}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsxs)(n.li,{children:["Verify your ",(0,a.jsx)(n.code,{children:"OPENAI_API_KEY"})," is set correctly"]}),"\n",(0,a.jsx)(n.li,{children:"Check that you have API credits available"}),"\n",(0,a.jsxs)(n.li,{children:["Ensure the model name (",(0,a.jsx)(n.code,{children:"gpt-4o-mini"}),") is correct and accessible"]}),"\n"]}),"\n",(0,a.jsx)(n.p,{children:(0,a.jsx)(n.strong,{children:"MLflow server not starting:"})}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsxs)(n.li,{children:["Check if port 5000 is already in use: ",(0,a.jsx)(n.code,{children:"lsof -i :5000"})]}),"\n",(0,a.jsxs)(n.li,{children:["Try a different port: ",(0,a.jsx)(n.code,{children:"mlflow ui --port 5001"})]}),"\n",(0,a.jsxs)(n.li,{children:["Verify MLflow installation: ",(0,a.jsx)(n.code,{children:"mlflow --version"})]}),"\n"]}),"\n",(0,a.jsx)(n.h2,{id:"summary",children:"Summary"}),"\n",(0,a.jsx)(n.p,{children:"Congratulations! You've successfully:"}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsx)(n.li,{children:"\u2705 Set up MLflow Tracing for a GenAI application"}),"\n",(0,a.jsx)(n.li,{children:"\u2705 Enabled automatic tracing for OpenAI API calls"}),"\n",(0,a.jsx)(n.li,{children:"\u2705 Generated and explored traces in the MLflow UI"}),"\n",(0,a.jsx)(n.li,{children:"\u2705 Learned how to add custom tracing and metadata"}),"\n"]}),"\n",(0,a.jsx)(n.p,{children:"MLflow Tracing provides powerful observability for your GenAI applications, helping you monitor performance, debug issues, and understand user interactions. Continue exploring the advanced features to get the most out of your tracing setup!"})]})}function p(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,a.jsx)(n,{...e,children:(0,a.jsx)(h,{...e})}):h(e)}}}]);