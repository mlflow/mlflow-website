/*! For license information please see dc993f77.0271fd98.js.LICENSE.txt */
"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[3723],{6789:(e,n,t)=>{t.d(n,{A:()=>c});t(96540);var a=t(28774),r=t(34164);const s={tileCard:"tileCard_NHsj",tileIcon:"tileIcon_pyoR",tileLink:"tileLink_iUbu",tileImage:"tileImage_O4So"};var l=t(86025),i=t(21122),o=t(74848);function c({icon:e,image:n,imageDark:t,imageWidth:c,imageHeight:p,iconSize:m=32,containerHeight:u,title:d,description:h,href:f,linkText:w="Learn more \u2192",className:_}){if(!e&&!n)throw new Error("TileCard requires either an icon or image prop");const g=u?{height:`${u}px`}:{},y={};return c&&(y.width=`${c}px`),p&&(y.height=`${p}px`),(0,o.jsxs)(a.A,{href:f,className:(0,r.A)(s.tileCard,_),children:[(0,o.jsx)("div",{className:s.tileIcon,style:g,children:e?(0,o.jsx)(e,{size:m}):t?(0,o.jsx)(i.A,{sources:{light:(0,l.Ay)(n),dark:(0,l.Ay)(t)},alt:d,className:s.tileImage,style:y}):(0,o.jsx)("img",{src:(0,l.Ay)(n),alt:d,className:s.tileImage,style:y})}),(0,o.jsx)("h3",{children:d}),(0,o.jsx)("p",{children:h}),(0,o.jsx)("div",{className:s.tileLink,children:w})]})}},7653:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>f,contentTitle:()=>h,default:()=>g,frontMatter:()=>d,metadata:()=>a,toc:()=>w});const a=JSON.parse('{"id":"tracing/track-users-sessions/index","title":"Track Users & Sessions","description":"Traces with session IDs","source":"@site/docs/genai/tracing/track-users-sessions/index.mdx","sourceDirName":"tracing/track-users-sessions","slug":"/tracing/track-users-sessions/","permalink":"/mlflow-website/docs/latest/genai/tracing/track-users-sessions/","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{},"sidebar":"genAISidebar","previous":{"title":"Expectations","permalink":"/mlflow-website/docs/latest/genai/tracing/concepts/expectations"},"next":{"title":"Track App Versions and Environments","permalink":"/mlflow-website/docs/latest/genai/tracing/track-environments-context/"}}');var r=t(74848),s=t(28453),l=t(49374),i=t(11470),o=t(19365),c=t(65592),p=t(6789),m=t(98445),u=t(76316);const d={},h="Track Users & Sessions",f={},w=[{value:"Store User and Session IDs in Metadata",id:"store-user-and-session-ids-in-metadata",level:2},{value:"Basic Usage",id:"basic-usage",level:2},{value:"Web Application Example",id:"web-application-example",level:2},{value:"Querying",id:"querying",level:2},{value:"Next Steps",id:"next-steps",level:2}];function _(e){const n={admonition:"admonition",code:"code",h1:"h1",h2:"h2",header:"header",img:"img",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,s.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.header,{children:(0,r.jsx)(n.h1,{id:"track-users--sessions",children:"Track Users & Sessions"})}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.img,{alt:"Traces with session IDs",src:t(8038).A+"",width:"1852",height:"1080"})}),"\n",(0,r.jsx)(n.p,{children:"Many real-world AI applications use session to maintain multi-turn user interactions. MLflow Tracing provides built-in support for associating traces with users and grouping them into sessions. Tracking users and sessions in your GenAI application provides essential context for understanding user behavior, analyzing conversation flows, and improving personalization."}),"\n",(0,r.jsx)(n.h2,{id:"store-user-and-session-ids-in-metadata",children:"Store User and Session IDs in Metadata"}),"\n",(0,r.jsx)(n.admonition,{title:"New in MLflow 3",type:"note",children:(0,r.jsxs)(n.p,{children:["The standard metadata for user and session tracking is only available in MLflow 3 and above. To upgrade, please run ",(0,r.jsx)(n.code,{children:"pip install --upgrade mlflow"}),"."]})}),"\n",(0,r.jsx)(n.p,{children:"MLflow provides two standard metadata fields for session and user tracking:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"mlflow.trace.user"})," - Associates traces with specific users"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"mlflow.trace.session"})," - Groups traces belonging to multi-turn conversations"]}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:"When you use these standard metadata fields, MLflow automatically enables filtering and grouping in the UI. Unlike tags, metadata cannot be updated once the trace is logged, making it ideal for immutable identifiers like user and session IDs."}),"\n",(0,r.jsx)(n.h2,{id:"basic-usage",children:"Basic Usage"}),"\n",(0,r.jsxs)(n.p,{children:["To record user and session information in your application, use the ",(0,r.jsx)(l.B,{fn:"mlflow.update_current_trace"})," API and pass the user and session IDs in the metadata."]}),"\n",(0,r.jsxs)(i.A,{children:[(0,r.jsxs)(o.A,{value:"python",label:"Python",default:!0,children:[(0,r.jsx)(n.p,{children:"Here's how to add user and session tracking to your application:"}),(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-python",children:'import mlflow\n\n\n@mlflow.trace\ndef chat_completion(message: list[dict], user_id: str, session_id: str):\n    """Process a chat message with user and session tracking."""\n\n    # Add user and session context to the current trace\n    mlflow.update_current_trace(\n        metadata={\n            "mlflow.trace.user": user_id,  # Links trace to specific user\n            "mlflow.trace.session": session_id,  # Groups trace with conversation\n        }\n    )\n\n    # Your chat logic here\n    return generate_response(message)\n'})})]}),(0,r.jsx)(o.A,{value:"typescript",label:"Typescript",children:(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:'import * as mlflow from "mlflow-tracing";\n\nconst chatCompletion = mlflow.trace(\n    (message: list[dict], user_id: str, session_id: str) => {\n        // Add user and session context to the current trace\n        mlflow.updateCurrentTrace({\n            metadata: {\n                "mlflow.trace.user": user_id,\n                "mlflow.trace.session": session_id,\n            },\n        });\n\n        // Your chat logic here\n        return generate_response(message);\n    },\n    { name: "chat_completion" }\n);\n'})})})]}),"\n",(0,r.jsx)(n.h2,{id:"web-application-example",children:"Web Application Example"}),"\n",(0,r.jsxs)(i.A,{children:[(0,r.jsxs)(o.A,{value:"python",label:"Python (FastAPI)",default:!0,children:[(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-python",children:'import mlflow\nimport os\nfrom fastapi import FastAPI, Request\nfrom pydantic import BaseModel\nfrom openai import OpenAI\n\napp = FastAPI()\nclient = OpenAI(api_key=os.getenv("OPENAI_API_KEY"))\n\nmlflow.set_tracking_uri("databricks")\nmlflow.set_experiment(experiment_id="3044868363145534")\nmlflow.openai.autolog()\n\n\nclass ChatRequest(BaseModel):\n    message: str\n\n\n@mlflow.trace\ndef process_chat(message: str, user_id: str, session_id: str):\n    # Update trace with user and session context\n    mlflow.update_current_trace(\n        metadata={\n            "mlflow.trace.session": session_id,\n            "mlflow.trace.user": user_id,\n        }\n    )\n\n    # Process chat message using OpenAI API\n    response = client.chat.completions.create(\n        model="gpt-4.1-mini",\n        messages=[\n            {"role": "system", "content": "You are a helpful assistant."},\n            {"role": "user", "content": message},\n        ],\n    )\n    return response.choices[0].message.content\n\n\n@app.post("/chat")\ndef handle_chat(request: Request, chat_request: ChatRequest):\n    session_id = request.headers.get("X-Session-ID", "default-session")\n    user_id = request.headers.get("X-User-ID", "default-user")\n    response_text = process_chat_with_openai(chat_request.message, user_id, session_id)\n    return {"response": response_text}\n\n\n@app.get("/")\nasync def root():\n    return {"message": "FastAPI MLflow Tracing Example"}\n\n\nif __name__ == "__main__":\n    import uvicorn\n\n    uvicorn.run(app, host="0.0.0.0", port=8000)\n'})}),(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Example request:"})}),(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:'python app.py\n\ncurl -X POST http://localhost:8000/chat \\\n    -H "Content-Type: application/json" \\\n    -H "X-Session-ID: session-123" \\\n    -H "X-User-ID: user-456" \\\n    -d \'{"message": "Hello, how are you?"}\'\n'})})]}),(0,r.jsxs)(o.A,{value:"typescript",label:"Typescript (Node.js)",children:[(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-python"})}),(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Example request:"})}),(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:'curl -X POST "http://127.0.0.1:8000/chat" \\\n     -H "Content-Type: application/json" \\\n     -H "X-Session-ID: session-def-456" \\\n     -H "X-User-ID: user-jane-doe-12345" \\\n     -d \'{"message": "What is my account balance?"}\'\n'})})]})]}),"\n",(0,r.jsx)(n.h2,{id:"querying",children:"Querying"}),"\n",(0,r.jsxs)(i.A,{children:[(0,r.jsxs)(o.A,{value:"ui-search",label:"MLflow UI Search",default:!0,children:[(0,r.jsx)(n.p,{children:"Filter traces in the MLflow UI using these search queries:"}),(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"# Find all traces for a specific user\nmetadata.`mlflow.trace.user` = 'user-123'\n\n# Find all traces in a session\nmetadata.`mlflow.trace.session` = 'session-abc-456'\n\n# Find traces for a user within a specific session\nmetadata.`mlflow.trace.user` = 'user-123' AND metadata.`mlflow.trace.session` = 'session-abc-456'\n"})})]}),(0,r.jsxs)(o.A,{value:"user-analysis",label:"Programmatic Analysis",children:[(0,r.jsx)(n.p,{children:"Analyze user behavior patterns programmatically:"}),(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-python",children:'import mlflow\nimport pandas as pd\n\n# Search for all traces from a specific user\nuser_traces_df: pd.DataFrame = mlflow.search_traces(\n    filter_string=f"metadata.`mlflow.trace.user` = \'{user_id}\'",\n)\n\n# Calculate key metrics\ntotal_interactions = len(user_traces_df)\nunique_sessions = user_traces_df["metadata.mlflow.trace.session"].nunique()\navg_response_time = user_traces_df["info.execution_time_ms"].mean()\nsuccess_rate = user_traces_df["info.state"].value_counts()["OK"] / total_interactions\n\n# Display the results\nprint(f"User has {total_interactions} interactions across {unique_sessions} sessions")\nprint(f"Average response time: {avg_response_time} ms")\nprint(f"Success rate: {success_rate}")\n'})})]})]}),"\n",(0,r.jsx)(n.h2,{id:"next-steps",children:"Next Steps"}),"\n",(0,r.jsxs)(c.A,{children:[(0,r.jsx)(p.A,{icon:m.A,title:"Search Traces",description:"Master advanced filtering techniques for user and session analysis",href:"/genai/tracing/search-traces",linkText:"Learn search \u2192"}),(0,r.jsx)(p.A,{icon:u.A,title:"Production Monitoring",description:"Set up comprehensive production observability with user context",href:"/genai/tracing/prod-tracing",linkText:"Monitor production \u2192"})]})]})}function g(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(_,{...e})}):_(e)}},8038:(e,n,t)=>{t.d(n,{A:()=>a});const a=t.p+"assets/images/trace-filter-by-user-da0bbaf3dc284dbcf2cd92a5a0ea73bf.gif"},11470:(e,n,t)=>{t.d(n,{A:()=>v});var a=t(96540),r=t(34164),s=t(23104),l=t(56347),i=t(205),o=t(57485),c=t(31682),p=t(70679);function m(e){return a.Children.toArray(e).filter(e=>"\n"!==e).map(e=>{if(!e||(0,a.isValidElement)(e)&&function(e){const{props:n}=e;return!!n&&"object"==typeof n&&"value"in n}(e))return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)})?.filter(Boolean)??[]}function u(e){const{values:n,children:t}=e;return(0,a.useMemo)(()=>{const e=n??function(e){return m(e).map(({props:{value:e,label:n,attributes:t,default:a}})=>({value:e,label:n,attributes:t,default:a}))}(t);return function(e){const n=(0,c.XI)(e,(e,n)=>e.value===n.value);if(n.length>0)throw new Error(`Docusaurus error: Duplicate values "${n.map(e=>e.value).join(", ")}" found in <Tabs>. Every value needs to be unique.`)}(e),e},[n,t])}function d({value:e,tabValues:n}){return n.some(n=>n.value===e)}function h({queryString:e=!1,groupId:n}){const t=(0,l.W6)(),r=function({queryString:e=!1,groupId:n}){if("string"==typeof e)return e;if(!1===e)return null;if(!0===e&&!n)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return n??null}({queryString:e,groupId:n});return[(0,o.aZ)(r),(0,a.useCallback)(e=>{if(!r)return;const n=new URLSearchParams(t.location.search);n.set(r,e),t.replace({...t.location,search:n.toString()})},[r,t])]}function f(e){const{defaultValue:n,queryString:t=!1,groupId:r}=e,s=u(e),[l,o]=(0,a.useState)(()=>function({defaultValue:e,tabValues:n}){if(0===n.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(e){if(!d({value:e,tabValues:n}))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${e}" but none of its children has the corresponding value. Available values are: ${n.map(e=>e.value).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return e}const t=n.find(e=>e.default)??n[0];if(!t)throw new Error("Unexpected error: 0 tabValues");return t.value}({defaultValue:n,tabValues:s})),[c,m]=h({queryString:t,groupId:r}),[f,w]=function({groupId:e}){const n=function(e){return e?`docusaurus.tab.${e}`:null}(e),[t,r]=(0,p.Dv)(n);return[t,(0,a.useCallback)(e=>{n&&r.set(e)},[n,r])]}({groupId:r}),_=(()=>{const e=c??f;return d({value:e,tabValues:s})?e:null})();(0,i.A)(()=>{_&&o(_)},[_]);return{selectedValue:l,selectValue:(0,a.useCallback)(e=>{if(!d({value:e,tabValues:s}))throw new Error(`Can't select invalid tab value=${e}`);o(e),m(e),w(e)},[m,w,s]),tabValues:s}}var w=t(92303);const _={tabList:"tabList__CuJ",tabItem:"tabItem_LNqP"};var g=t(74848);function y({className:e,block:n,selectedValue:t,selectValue:a,tabValues:l}){const i=[],{blockElementScrollPositionUntilNextRender:o}=(0,s.a_)(),c=e=>{const n=e.currentTarget,r=i.indexOf(n),s=l[r].value;s!==t&&(o(n),a(s))},p=e=>{let n=null;switch(e.key){case"Enter":c(e);break;case"ArrowRight":{const t=i.indexOf(e.currentTarget)+1;n=i[t]??i[0];break}case"ArrowLeft":{const t=i.indexOf(e.currentTarget)-1;n=i[t]??i[i.length-1];break}}n?.focus()};return(0,g.jsx)("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,r.A)("tabs",{"tabs--block":n},e),children:l.map(({value:e,label:n,attributes:a})=>(0,g.jsx)("li",{role:"tab",tabIndex:t===e?0:-1,"aria-selected":t===e,ref:e=>{i.push(e)},onKeyDown:p,onClick:c,...a,className:(0,r.A)("tabs__item",_.tabItem,a?.className,{"tabs__item--active":t===e}),children:n??e},e))})}function x({lazy:e,children:n,selectedValue:t}){const s=(Array.isArray(n)?n:[n]).filter(Boolean);if(e){const e=s.find(e=>e.props.value===t);return e?(0,a.cloneElement)(e,{className:(0,r.A)("margin-top--md",e.props.className)}):null}return(0,g.jsx)("div",{className:"margin-top--md",children:s.map((e,n)=>(0,a.cloneElement)(e,{key:n,hidden:e.props.value!==t}))})}function b(e){const n=f(e);return(0,g.jsxs)("div",{className:(0,r.A)("tabs-container",_.tabList),children:[(0,g.jsx)(y,{...n,...e}),(0,g.jsx)(x,{...n,...e})]})}function v(e){const n=(0,w.A)();return(0,g.jsx)(b,{...e,children:m(e.children)},String(n))}},19365:(e,n,t)=>{t.d(n,{A:()=>l});t(96540);var a=t(34164);const r={tabItem:"tabItem_Ymn6"};var s=t(74848);function l({children:e,hidden:n,className:t}){return(0,s.jsx)("div",{role:"tabpanel",className:(0,a.A)(r.tabItem,t),hidden:n,children:e})}},28453:(e,n,t)=>{t.d(n,{R:()=>l,x:()=>i});var a=t(96540);const r={},s=a.createContext(r);function l(e){const n=a.useContext(s);return a.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function i(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:l(e.components),a.createElement(s.Provider,{value:n},e.children)}},49374:(e,n,t)=>{t.d(n,{B:()=>i});t(96540);const a=JSON.parse('{"mlflow.ag2":"api_reference/python_api/mlflow.ag2.html","mlflow.anthropic":"api_reference/python_api/mlflow.anthropic.html","mlflow.artifacts":"api_reference/python_api/mlflow.artifacts.html","mlflow.autogen":"api_reference/python_api/mlflow.autogen.html","mlflow.bedrock":"api_reference/python_api/mlflow.bedrock.html","mlflow.catboost":"api_reference/python_api/mlflow.catboost.html","mlflow.client":"api_reference/python_api/mlflow.client.html","mlflow.config":"api_reference/python_api/mlflow.config.html","mlflow.crewai":"api_reference/python_api/mlflow.crewai.html","mlflow.data":"api_reference/python_api/mlflow.data.html","mlflow.deployments":"api_reference/python_api/mlflow.deployments.html","mlflow.diviner":"api_reference/python_api/mlflow.diviner.html","mlflow.dspy":"api_reference/python_api/mlflow.dspy.html","mlflow.entities":"api_reference/python_api/mlflow.entities.html","mlflow.environment_variables":"api_reference/python_api/mlflow.environment_variables.html","mlflow.gateway":"api_reference/python_api/mlflow.gateway.html","mlflow.gemini":"api_reference/python_api/mlflow.gemini.html","mlflow.genai":"api_reference/python_api/mlflow.genai.html","mlflow.groq":"api_reference/python_api/mlflow.groq.html","mlflow.h2o":"api_reference/python_api/mlflow.h2o.html","mlflow.johnsnowlabs":"api_reference/python_api/mlflow.johnsnowlabs.html","mlflow.keras":"api_reference/python_api/mlflow.keras.html","mlflow.langchain":"api_reference/python_api/mlflow.langchain.html","mlflow.lightgbm":"api_reference/python_api/mlflow.lightgbm.html","mlflow.litellm":"api_reference/python_api/mlflow.litellm.html","mlflow.llama_index":"api_reference/python_api/mlflow.llama_index.html","mlflow.metrics":"api_reference/python_api/mlflow.metrics.html","mlflow.mistral":"api_reference/python_api/mlflow.mistral.html","mlflow.models":"api_reference/python_api/mlflow.models.html","mlflow.onnx":"api_reference/python_api/mlflow.onnx.html","mlflow.openai":"api_reference/python_api/mlflow.openai.html","mlflow.paddle":"api_reference/python_api/mlflow.paddle.html","mlflow.pmdarima":"api_reference/python_api/mlflow.pmdarima.html","mlflow.projects":"api_reference/python_api/mlflow.projects.html","mlflow.promptflow":"api_reference/python_api/mlflow.promptflow.html","mlflow.prophet":"api_reference/python_api/mlflow.prophet.html","mlflow.pydantic_ai":"api_reference/python_api/mlflow.pydantic_ai.html","mlflow.pyfunc":"api_reference/python_api/mlflow.pyfunc.html","mlflow.pyspark.ml":"api_reference/python_api/mlflow.pyspark.ml.html","mlflow.pytorch":"api_reference/python_api/mlflow.pytorch.html","mlflow":"api_reference/python_api/mlflow.html","mlflow.sagemaker":"api_reference/python_api/mlflow.sagemaker.html","mlflow.sentence_transformers":"api_reference/python_api/mlflow.sentence_transformers.html","mlflow.server":"api_reference/python_api/mlflow.server.html","mlflow.shap":"api_reference/python_api/mlflow.shap.html","mlflow.sklearn":"api_reference/python_api/mlflow.sklearn.html","mlflow.smolagents":"api_reference/python_api/mlflow.smolagents.html","mlflow.spacy":"api_reference/python_api/mlflow.spacy.html","mlflow.spark":"api_reference/python_api/mlflow.spark.html","mlflow.statsmodels":"api_reference/python_api/mlflow.statsmodels.html","mlflow.system_metrics":"api_reference/python_api/mlflow.system_metrics.html","mlflow.tensorflow":"api_reference/python_api/mlflow.tensorflow.html","mlflow.tracing":"api_reference/python_api/mlflow.tracing.html","mlflow.transformers":"api_reference/python_api/mlflow.transformers.html","mlflow.types":"api_reference/python_api/mlflow.types.html","mlflow.utils":"api_reference/python_api/mlflow.utils.html","mlflow.xgboost":"api_reference/python_api/mlflow.xgboost.html","mlflow.server.auth":"api_reference/auth/python-api.html","mlflow.server.cli":"api_reference/cli.html","mlflow.r":"api_reference/R-api.html","mlflow.java":"api_reference/java_api/index.html","mlflow.python":"api_reference/python_api/index.html","mlflow.rest":"api_reference/rest-api.html","mlflow.llms.deployments.api":"api_reference/llms/deployments/api.html"}');var r=t(86025),s=t(74848);const l=e=>{const n=e.split(".");for(let t=n.length;t>0;t--){const e=n.slice(0,t).join(".");if(a[e])return e}return null};function i({fn:e,children:n,hash:t}){const i=l(e);if(!i)return(0,s.jsx)(s.Fragment,{children:n});const o=(0,r.Ay)(`/${a[i]}#${t??e}`);return(0,s.jsx)("a",{href:o,target:"_blank",children:n??(0,s.jsxs)("code",{children:[e,"()"]})})}},65592:(e,n,t)=>{t.d(n,{A:()=>l});t(96540);var a=t(34164);const r={tilesGrid:"tilesGrid_hB9N"};var s=t(74848);function l({children:e,className:n}){return(0,s.jsx)("div",{className:(0,a.A)(r.tilesGrid,n),children:e})}},76316:(e,n,t)=>{t.d(n,{A:()=>a});const a=(0,t(84722).A)("trending-up",[["path",{d:"M16 7h6v6",key:"box55l"}],["path",{d:"m22 7-8.5 8.5-5-5L2 17",key:"1t1m79"}]])},84722:(e,n,t)=>{t.d(n,{A:()=>c});var a=t(96540);const r=e=>{const n=(e=>e.replace(/^([A-Z])|[\s-_]+(\w)/g,(e,n,t)=>t?t.toUpperCase():n.toLowerCase()))(e);return n.charAt(0).toUpperCase()+n.slice(1)},s=(...e)=>e.filter((e,n,t)=>Boolean(e)&&""!==e.trim()&&t.indexOf(e)===n).join(" ").trim(),l=e=>{for(const n in e)if(n.startsWith("aria-")||"role"===n||"title"===n)return!0};var i={xmlns:"http://www.w3.org/2000/svg",width:24,height:24,viewBox:"0 0 24 24",fill:"none",stroke:"currentColor",strokeWidth:2,strokeLinecap:"round",strokeLinejoin:"round"};const o=(0,a.forwardRef)(({color:e="currentColor",size:n=24,strokeWidth:t=2,absoluteStrokeWidth:r,className:o="",children:c,iconNode:p,...m},u)=>(0,a.createElement)("svg",{ref:u,...i,width:n,height:n,stroke:e,strokeWidth:r?24*Number(t)/Number(n):t,className:s("lucide",o),...!c&&!l(m)&&{"aria-hidden":"true"},...m},[...p.map(([e,n])=>(0,a.createElement)(e,n)),...Array.isArray(c)?c:[c]])),c=(e,n)=>{const t=(0,a.forwardRef)(({className:t,...l},i)=>{return(0,a.createElement)(o,{ref:i,iconNode:n,className:s(`lucide-${c=r(e),c.replace(/([a-z0-9])([A-Z])/g,"$1-$2").toLowerCase()}`,`lucide-${e}`,t),...l});var c});return t.displayName=r(e),t}},98445:(e,n,t)=>{t.d(n,{A:()=>a});const a=(0,t(84722).A)("search",[["path",{d:"m21 21-4.34-4.34",key:"14j7rj"}],["circle",{cx:"11",cy:"11",r:"8",key:"4ej97u"}]])}}]);