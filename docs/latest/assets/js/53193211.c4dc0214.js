"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[4324],{10493:(e,l,n)=>{n.d(l,{Zp:()=>s,AC:()=>r,WO:()=>c,_C:()=>m,$3:()=>p,jK:()=>d});var t=n(34164);const i={CardGroup:"CardGroup_P84T",NoGap:"NoGap_O9Dj",MaxThreeColumns:"MaxThreeColumns_FO1r",AutofillColumns:"AutofillColumns_fKhQ",Card:"Card_aSCR",CardBordered:"CardBordered_glGF",CardBody:"CardBody_BhRs",TextColor:"TextColor_a8Tp",BoxRoot:"BoxRoot_Etgr",FlexWrapNowrap:"FlexWrapNowrap_f60k",FlexJustifyContentFlexStart:"FlexJustifyContentFlexStart_ZYv5",FlexDirectionRow:"FlexDirectionRow_T2qL",FlexAlignItemsCenter:"FlexAlignItemsCenter_EHVM",FlexFlex:"FlexFlex__JTE",Link:"Link_fVkl",MarginLeft4:"MarginLeft4_YQSJ",MarginTop4:"MarginTop4_jXKN",PaddingBottom4:"PaddingBottom4_O9gt",LogoCardContent:"LogoCardContent_kCQm",LogoCardImage:"LogoCardImage_JdcX",SmallLogoCardContent:"SmallLogoCardContent_LxhV",SmallLogoCardRounded:"SmallLogoCardRounded_X50_",SmallLogoCardImage:"SmallLogoCardImage_tPZl",NewFeatureCardContent:"NewFeatureCardContent_Rq3d",NewFeatureCardHeading:"NewFeatureCardHeading_f6q3",NewFeatureCardHeadingSeparator:"NewFeatureCardHeadingSeparator_pSx8",NewFeatureCardTags:"NewFeatureCardTags_IFHO",NewFeatureCardWrapper:"NewFeatureCardWrapper_NQ0k",TitleCardContent:"TitleCardContent_l9MQ",TitleCardTitle:"TitleCardTitle__K8J",TitleCardSeparator:"TitleCardSeparator_IN2E",Cols1:"Cols1_Gr2U",Cols2:"Cols2_sRvc",Cols3:"Cols3_KjUS",Cols4:"Cols4_dKOj",Cols5:"Cols5_jDmj",Cols6:"Cols6_Q0OR"};var o=n(28774),a=n(74848);const r=({children:e,isSmall:l,cols:n,noGap:o})=>(0,a.jsx)("div",{className:(0,t.A)(i.CardGroup,l?i.AutofillColumns:n?i[`Cols${n}`]:i.MaxThreeColumns,o&&i.NoGap),children:e}),s=({children:e,link:l=""})=>l?(0,a.jsx)(o.A,{className:(0,t.A)(i.Link,i.Card,i.CardBordered),to:l,children:e}):(0,a.jsx)("div",{className:(0,t.A)(i.Card,i.CardBordered),children:e}),m=({headerText:e,link:l,text:n})=>(0,a.jsx)(s,{link:l,children:(0,a.jsxs)("span",{children:[(0,a.jsx)("div",{className:(0,t.A)(i.CardTitle,i.BoxRoot,i.PaddingBottom4),style:{pointerEvents:"none"},children:(0,a.jsx)("div",{className:(0,t.A)(i.BoxRoot,i.FlexFlex,i.FlexAlignItemsCenter,i.FlexDirectionRow,i.FlexJustifyContentFlexStart,i.FlexWrapNowrap),style:{marginLeft:"-4px",marginTop:"-4px"},children:(0,a.jsx)("div",{className:(0,t.A)(i.BoxRoot,i.BoxHideIfEmpty,i.MarginTop4,i.MarginLeft4),style:{pointerEvents:"auto"},children:(0,a.jsx)("span",{className:"",children:e})})})}),(0,a.jsx)("span",{className:(0,t.A)(i.TextColor,i.CardBody),children:(0,a.jsx)("p",{children:n})})]})}),c=({description:e,children:l,link:n})=>(0,a.jsx)(s,{link:n,children:(0,a.jsxs)("div",{className:i.LogoCardContent,children:[(0,a.jsx)("div",{className:i.LogoCardImage,children:l}),(0,a.jsx)("p",{className:i.TextColor,children:e})]})}),p=({children:e,link:l})=>(0,a.jsx)("div",{className:(0,t.A)(i.Card,i.CardBordered,i.SmallLogoCardRounded),children:l?(0,a.jsx)(o.A,{className:(0,t.A)(i.Link),to:l,children:(0,a.jsx)("div",{className:i.SmallLogoCardContent,children:(0,a.jsx)("div",{className:(0,t.A)("max-height-img-container",i.SmallLogoCardImage),children:e})})}):(0,a.jsx)("div",{className:i.SmallLogoCardContent,children:(0,a.jsx)("div",{className:(0,t.A)("max-height-img-container",i.SmallLogoCardImage),children:e})})}),d=({title:e,description:l,link:n=""})=>(0,a.jsx)(s,{link:n,children:(0,a.jsxs)("div",{className:i.TitleCardContent,children:[(0,a.jsx)("div",{className:(0,t.A)(i.TitleCardTitle),style:{textAlign:"left",fontWeight:"bold"},children:e}),(0,a.jsx)("hr",{className:(0,t.A)(i.TitleCardSeparator),style:{margin:"12px 0"}}),(0,a.jsx)("p",{className:(0,t.A)(i.TextColor),children:l})]})})},46158:(e,l,n)=>{n.d(l,{A:()=>t});const t=n.p+"assets/images/gemini-tracing-fd066260b1e75fa44bfdd89dd000f76d.png"},49374:(e,l,n)=>{n.d(l,{B:()=>r});n(96540);const t=JSON.parse('{"mlflow.ag2":"api_reference/python_api/mlflow.ag2.html","mlflow.anthropic":"api_reference/python_api/mlflow.anthropic.html","mlflow.artifacts":"api_reference/python_api/mlflow.artifacts.html","mlflow.autogen":"api_reference/python_api/mlflow.autogen.html","mlflow.bedrock":"api_reference/python_api/mlflow.bedrock.html","mlflow.catboost":"api_reference/python_api/mlflow.catboost.html","mlflow.client":"api_reference/python_api/mlflow.client.html","mlflow.config":"api_reference/python_api/mlflow.config.html","mlflow.crewai":"api_reference/python_api/mlflow.crewai.html","mlflow.data":"api_reference/python_api/mlflow.data.html","mlflow.deployments":"api_reference/python_api/mlflow.deployments.html","mlflow.diviner":"api_reference/python_api/mlflow.diviner.html","mlflow.dspy":"api_reference/python_api/mlflow.dspy.html","mlflow.entities":"api_reference/python_api/mlflow.entities.html","mlflow.environment_variables":"api_reference/python_api/mlflow.environment_variables.html","mlflow.gateway":"api_reference/python_api/mlflow.gateway.html","mlflow.gemini":"api_reference/python_api/mlflow.gemini.html","mlflow.genai":"api_reference/python_api/mlflow.genai.html","mlflow.groq":"api_reference/python_api/mlflow.groq.html","mlflow.h2o":"api_reference/python_api/mlflow.h2o.html","mlflow.johnsnowlabs":"api_reference/python_api/mlflow.johnsnowlabs.html","mlflow.keras":"api_reference/python_api/mlflow.keras.html","mlflow.langchain":"api_reference/python_api/mlflow.langchain.html","mlflow.lightgbm":"api_reference/python_api/mlflow.lightgbm.html","mlflow.litellm":"api_reference/python_api/mlflow.litellm.html","mlflow.llama_index":"api_reference/python_api/mlflow.llama_index.html","mlflow.metrics":"api_reference/python_api/mlflow.metrics.html","mlflow.mistral":"api_reference/python_api/mlflow.mistral.html","mlflow.models":"api_reference/python_api/mlflow.models.html","mlflow.onnx":"api_reference/python_api/mlflow.onnx.html","mlflow.openai":"api_reference/python_api/mlflow.openai.html","mlflow.paddle":"api_reference/python_api/mlflow.paddle.html","mlflow.pmdarima":"api_reference/python_api/mlflow.pmdarima.html","mlflow.projects":"api_reference/python_api/mlflow.projects.html","mlflow.promptflow":"api_reference/python_api/mlflow.promptflow.html","mlflow.prophet":"api_reference/python_api/mlflow.prophet.html","mlflow.pydantic_ai":"api_reference/python_api/mlflow.pydantic_ai.html","mlflow.pyfunc":"api_reference/python_api/mlflow.pyfunc.html","mlflow.pyspark.ml":"api_reference/python_api/mlflow.pyspark.ml.html","mlflow.pytorch":"api_reference/python_api/mlflow.pytorch.html","mlflow":"api_reference/python_api/mlflow.html","mlflow.sagemaker":"api_reference/python_api/mlflow.sagemaker.html","mlflow.sentence_transformers":"api_reference/python_api/mlflow.sentence_transformers.html","mlflow.server":"api_reference/python_api/mlflow.server.html","mlflow.shap":"api_reference/python_api/mlflow.shap.html","mlflow.sklearn":"api_reference/python_api/mlflow.sklearn.html","mlflow.smolagents":"api_reference/python_api/mlflow.smolagents.html","mlflow.spacy":"api_reference/python_api/mlflow.spacy.html","mlflow.spark":"api_reference/python_api/mlflow.spark.html","mlflow.statsmodels":"api_reference/python_api/mlflow.statsmodels.html","mlflow.system_metrics":"api_reference/python_api/mlflow.system_metrics.html","mlflow.tensorflow":"api_reference/python_api/mlflow.tensorflow.html","mlflow.tracing":"api_reference/python_api/mlflow.tracing.html","mlflow.transformers":"api_reference/python_api/mlflow.transformers.html","mlflow.types":"api_reference/python_api/mlflow.types.html","mlflow.utils":"api_reference/python_api/mlflow.utils.html","mlflow.xgboost":"api_reference/python_api/mlflow.xgboost.html","mlflow.server.auth":"api_reference/auth/python-api.html","mlflow.server.cli":"api_reference/cli.html","mlflow.r":"api_reference/R-api.html","mlflow.java":"api_reference/java_api/index.html","mlflow.python":"api_reference/python_api/index.html","mlflow.rest":"api_reference/rest-api.html","mlflow.llms.deployments.api":"api_reference/llms/deployments/api.html"}');var i=n(86025),o=n(74848);const a=e=>{const l=e.split(".");for(let n=l.length;n>0;n--){const e=l.slice(0,n).join(".");if(t[e])return e}return null};function r({fn:e,children:l,hash:n}){const r=a(e);if(!r)return(0,o.jsx)(o.Fragment,{children:l});const s=(0,i.Ay)(`/${t[r]}#${n??e}`);return(0,o.jsx)("a",{href:s,target:"_blank",children:l??(0,o.jsxs)("code",{children:[e,"()"]})})}},79639:(e,l,n)=>{n.r(l),n.d(l,{assets:()=>m,contentTitle:()=>s,default:()=>d,frontMatter:()=>r,metadata:()=>t,toc:()=>c});const t=JSON.parse('{"id":"tracing/integrations/listing/gemini","title":"Tracing Gemini","description":"OpenAI Tracing via autolog","source":"@site/docs/genai/tracing/integrations/listing/gemini.mdx","sourceDirName":"tracing/integrations/listing","slug":"/tracing/integrations/listing/gemini","permalink":"/mlflow-website/docs/latest/genai/tracing/integrations/listing/gemini","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":9,"frontMatter":{"sidebar_position":9,"sidebar_label":"Gemini"},"sidebar":"genAISidebar","previous":{"title":"Strands Agents SDK","permalink":"/mlflow-website/docs/latest/genai/tracing/integrations/listing/strands"},"next":{"title":"Ollama","permalink":"/mlflow-website/docs/latest/genai/tracing/integrations/listing/ollama"}}');var i=n(74848),o=n(28453),a=n(49374);n(10493),n(14252),n(11470),n(19365);const r={sidebar_position:9,sidebar_label:"Gemini"},s="Tracing Gemini",m={},c=[{value:"Supported APIs",id:"supported-apis",level:2},{value:"Basic Example",id:"basic-example",level:3},{value:"Multi-turn chat interactions",id:"multi-turn-chat-interactions",level:3},{value:"Async",id:"async",level:3},{value:"Embeddings",id:"embeddings",level:3},{value:"Disable auto-tracing",id:"disable-auto-tracing",level:3}];function p(e){const l={a:"a",admonition:"admonition",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",img:"img",li:"li",p:"p",pre:"pre",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,o.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(l.header,{children:(0,i.jsx)(l.h1,{id:"tracing-gemini",children:"Tracing Gemini"})}),"\n",(0,i.jsx)(l.p,{children:(0,i.jsx)(l.img,{alt:"OpenAI Tracing via autolog",src:n(46158).A+"",width:"2696",height:"694"})}),"\n",(0,i.jsxs)(l.p,{children:[(0,i.jsx)(l.a,{href:"../../",children:"MLflow Tracing"})," provides automatic tracing capability for Google Gemini. By enabling auto tracing\nfor Gemini by calling the ",(0,i.jsx)(a.B,{fn:"mlflow.gemini.autolog"})," function, MLflow will capture nested traces and log them to the active MLflow Experiment upon invocation of Gemini Python SDK."]}),"\n",(0,i.jsx)(l.pre,{children:(0,i.jsx)(l.code,{className:"language-python",children:"import mlflow\n\nmlflow.gemini.autolog()\n"})}),"\n",(0,i.jsx)(l.admonition,{type:"note",children:(0,i.jsxs)(l.p,{children:["Current MLflow tracing integration supports both new ",(0,i.jsx)(l.a,{href:"https://github.com/googleapis/python-genai",children:"Google GenAI SDK"})," and legacy ",(0,i.jsx)(l.a,{href:"https://github.com/google-gemini/generative-ai-python",children:"Google AI Python SDK"}),".\nHowever, it may drop support for the legacy package without notice, and it is highly recommended to migrate your use cases to the new Google GenAI SDK."]})}),"\n",(0,i.jsx)(l.p,{children:"MLflow trace automatically captures the following information about Gemini calls:"}),"\n",(0,i.jsxs)(l.ul,{children:["\n",(0,i.jsx)(l.li,{children:"Prompts and completion responses"}),"\n",(0,i.jsx)(l.li,{children:"Latencies"}),"\n",(0,i.jsx)(l.li,{children:"Model name"}),"\n",(0,i.jsxs)(l.li,{children:["Additional metadata such as ",(0,i.jsx)(l.code,{children:"temperature"}),", ",(0,i.jsx)(l.code,{children:"max_tokens"}),", if specified."]}),"\n",(0,i.jsx)(l.li,{children:"Function calling if returned in the response"}),"\n",(0,i.jsx)(l.li,{children:"Any exception if raised"}),"\n"]}),"\n",(0,i.jsx)(l.h2,{id:"supported-apis",children:"Supported APIs"}),"\n",(0,i.jsx)(l.p,{children:"MLflow supports automatic tracing for the following Anthropic APIs:"}),"\n",(0,i.jsxs)(l.table,{children:[(0,i.jsx)(l.thead,{children:(0,i.jsxs)(l.tr,{children:[(0,i.jsx)(l.th,{style:{textAlign:"center"},children:"Text Generation"}),(0,i.jsx)(l.th,{style:{textAlign:"center"},children:"Chat"}),(0,i.jsx)(l.th,{style:{textAlign:"center"},children:"Function Calling"}),(0,i.jsx)(l.th,{style:{textAlign:"center"},children:"Streaming"}),(0,i.jsx)(l.th,{style:{textAlign:"center"},children:"Async"}),(0,i.jsx)(l.th,{style:{textAlign:"center"},children:"Image"}),(0,i.jsx)(l.th,{style:{textAlign:"center"},children:"Video"})]})}),(0,i.jsx)(l.tbody,{children:(0,i.jsxs)(l.tr,{children:[(0,i.jsx)(l.td,{style:{textAlign:"center"},children:"\u2705"}),(0,i.jsx)(l.td,{style:{textAlign:"center"},children:"\u2705"}),(0,i.jsx)(l.td,{style:{textAlign:"center"},children:"\u2705"}),(0,i.jsx)(l.td,{style:{textAlign:"center"},children:"-"}),(0,i.jsx)(l.td,{style:{textAlign:"center"},children:"\u2705 (*1)"}),(0,i.jsx)(l.td,{style:{textAlign:"center"},children:"-"}),(0,i.jsx)(l.td,{style:{textAlign:"center"},children:"-"})]})})]}),"\n",(0,i.jsx)("div",{style:{fontSize:"0.9em",marginTop:"10px"},children:(0,i.jsx)(l.p,{children:"(*1) Async support was added in MLflow 3.2.0."})}),"\n",(0,i.jsxs)(l.p,{children:["To request support for additional APIs, please open a ",(0,i.jsx)(l.a,{href:"https://github.com/mlflow/mlflow/issues",children:"feature request"})," on GitHub."]}),"\n",(0,i.jsx)(l.h3,{id:"basic-example",children:"Basic Example"}),"\n",(0,i.jsx)(l.pre,{children:(0,i.jsx)(l.code,{className:"language-python",children:'import mlflow\nimport google.genai as genai\nimport os\n\n# Turn on auto tracing for Gemini\nmlflow.gemini.autolog()\n\n# Optional: Set a tracking URI and an experiment\nmlflow.set_tracking_uri("http://localhost:5000")\nmlflow.set_experiment("Gemini")\n\n\n# Configure the SDK with your API key.\nclient = genai.Client(api_key=os.environ["GEMINI_API_KEY"])\n\n# Use the generate_content method to generate responses to your prompts.\nresponse = client.models.generate_content(\n    model="gemini-1.5-flash", contents="The opposite of hot is"\n)\n'})}),"\n",(0,i.jsx)(l.h3,{id:"multi-turn-chat-interactions",children:"Multi-turn chat interactions"}),"\n",(0,i.jsx)(l.p,{children:"MLflow support tracing multi-turn conversations with Gemini:"}),"\n",(0,i.jsx)(l.pre,{children:(0,i.jsx)(l.code,{children:'import mlflow\n\nmlflow.gemini.autolog()\n\nchat = client.chats.create(model=\'gemini-1.5-flash\')\nresponse = chat.send_message("In one sentence, explain how a computer works to a young child.")\nprint(response.text)\nresponse = chat.send_message("Okay, how about a more detailed explanation to a high schooler?")\nprint(response.text)\n'})}),"\n",(0,i.jsx)(l.h3,{id:"async",children:"Async"}),"\n",(0,i.jsx)(l.p,{children:"MLflow Tracing supports asynchronous API of the Gemini SDK since MLflow 3.2.0. The usage is same as the synchronous API."}),"\n",(0,i.jsx)(l.pre,{children:(0,i.jsx)(l.code,{className:"language-python",children:'# Configure the SDK with your API key.\nclient = genai.Client(api_key=os.environ["GEMINI_API_KEY"])\n\n# Async API is invoked through the `aio` namespace.\nresponse = await client.aio.models.generate_content(\n    model="gemini-1.5-flash", contents="The opposite of hot is"\n)\n'})}),"\n",(0,i.jsx)(l.h3,{id:"embeddings",children:"Embeddings"}),"\n",(0,i.jsx)(l.p,{children:"MLflow Tracing for Gemini SDK supports embeddings API:"}),"\n",(0,i.jsx)(l.pre,{children:(0,i.jsx)(l.code,{className:"language-python",children:'result = client.models.embed_content(model="text-embedding-004", contents="Hello world")\n'})}),"\n",(0,i.jsx)(l.h3,{id:"disable-auto-tracing",children:"Disable auto-tracing"}),"\n",(0,i.jsxs)(l.p,{children:["Auto tracing for Gemini can be disabled globally by calling ",(0,i.jsx)(l.code,{children:"mlflow.gemini.autolog(disable=True)"})," or ",(0,i.jsx)(l.code,{children:"mlflow.autolog(disable=True)"}),"."]})]})}function d(e={}){const{wrapper:l}={...(0,o.R)(),...e.components};return l?(0,i.jsx)(l,{...e,children:(0,i.jsx)(p,{...e})}):p(e)}}}]);