"use strict";(globalThis.webpackChunkdocs=globalThis.webpackChunkdocs||[]).push([[968],{11470:(e,n,r)=>{r.d(n,{A:()=>b});var t=r(96540),i=r(34164),s=r(17559),o=r(23104),a=r(56347),l=r(205),c=r(57485),h=r(31682),d=r(70679);function f(e){return t.Children.toArray(e).filter(e=>"\n"!==e).map(e=>{if(!e||(0,t.isValidElement)(e)&&function(e){const{props:n}=e;return!!n&&"object"==typeof n&&"value"in n}(e))return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)})?.filter(Boolean)??[]}function p(e){const{values:n,children:r}=e;return(0,t.useMemo)(()=>{const e=n??function(e){return f(e).map(({props:{value:e,label:n,attributes:r,default:t}})=>({value:e,label:n,attributes:r,default:t}))}(r);return function(e){const n=(0,h.XI)(e,(e,n)=>e.value===n.value);if(n.length>0)throw new Error(`Docusaurus error: Duplicate values "${n.map(e=>e.value).join(", ")}" found in <Tabs>. Every value needs to be unique.`)}(e),e},[n,r])}function m({value:e,tabValues:n}){return n.some(n=>n.value===e)}function u({queryString:e=!1,groupId:n}){const r=(0,a.W6)(),i=function({queryString:e=!1,groupId:n}){if("string"==typeof e)return e;if(!1===e)return null;if(!0===e&&!n)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return n??null}({queryString:e,groupId:n});return[(0,c.aZ)(i),(0,t.useCallback)(e=>{if(!i)return;const n=new URLSearchParams(r.location.search);n.set(i,e),r.replace({...r.location,search:n.toString()})},[i,r])]}function g(e){const{defaultValue:n,queryString:r=!1,groupId:i}=e,s=p(e),[o,a]=(0,t.useState)(()=>function({defaultValue:e,tabValues:n}){if(0===n.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(e){if(!m({value:e,tabValues:n}))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${e}" but none of its children has the corresponding value. Available values are: ${n.map(e=>e.value).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return e}const r=n.find(e=>e.default)??n[0];if(!r)throw new Error("Unexpected error: 0 tabValues");return r.value}({defaultValue:n,tabValues:s})),[c,h]=u({queryString:r,groupId:i}),[f,g]=function({groupId:e}){const n=function(e){return e?`docusaurus.tab.${e}`:null}(e),[r,i]=(0,d.Dv)(n);return[r,(0,t.useCallback)(e=>{n&&i.set(e)},[n,i])]}({groupId:i}),w=(()=>{const e=c??f;return m({value:e,tabValues:s})?e:null})();(0,l.A)(()=>{w&&a(w)},[w]);return{selectedValue:o,selectValue:(0,t.useCallback)(e=>{if(!m({value:e,tabValues:s}))throw new Error(`Can't select invalid tab value=${e}`);a(e),h(e),g(e)},[h,g,s]),tabValues:s}}var w=r(92303);const x={tabList:"tabList__CuJ",tabItem:"tabItem_LNqP"};var v=r(74848);function y({className:e,block:n,selectedValue:r,selectValue:t,tabValues:s}){const a=[],{blockElementScrollPositionUntilNextRender:l}=(0,o.a_)(),c=e=>{const n=e.currentTarget,i=a.indexOf(n),o=s[i].value;o!==r&&(l(n),t(o))},h=e=>{let n=null;switch(e.key){case"Enter":c(e);break;case"ArrowRight":{const r=a.indexOf(e.currentTarget)+1;n=a[r]??a[0];break}case"ArrowLeft":{const r=a.indexOf(e.currentTarget)-1;n=a[r]??a[a.length-1];break}}n?.focus()};return(0,v.jsx)("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,i.A)("tabs",{"tabs--block":n},e),children:s.map(({value:e,label:n,attributes:t})=>(0,v.jsx)("li",{role:"tab",tabIndex:r===e?0:-1,"aria-selected":r===e,ref:e=>{a.push(e)},onKeyDown:h,onClick:c,...t,className:(0,i.A)("tabs__item",x.tabItem,t?.className,{"tabs__item--active":r===e}),children:n??e},e))})}function j({lazy:e,children:n,selectedValue:r}){const s=(Array.isArray(n)?n:[n]).filter(Boolean);if(e){const e=s.find(e=>e.props.value===r);return e?(0,t.cloneElement)(e,{className:(0,i.A)("margin-top--md",e.props.className)}):null}return(0,v.jsx)("div",{className:"margin-top--md",children:s.map((e,n)=>(0,t.cloneElement)(e,{key:n,hidden:e.props.value!==r}))})}function _(e){const n=g(e);return(0,v.jsxs)("div",{className:(0,i.A)(s.G.tabs.container,"tabs-container",x.tabList),children:[(0,v.jsx)(y,{...n,...e}),(0,v.jsx)(j,{...n,...e})]})}function b(e){const n=(0,w.A)();return(0,v.jsx)(_,{...e,children:f(e.children)},String(n))}},19365:(e,n,r)=>{r.d(n,{A:()=>o});r(96540);var t=r(34164);const i={tabItem:"tabItem_Ymn6"};var s=r(74848);function o({children:e,hidden:n,className:r}){return(0,s.jsx)("div",{role:"tabpanel",className:(0,t.A)(i.tabItem,r),hidden:n,children:e})}},28453:(e,n,r)=>{r.d(n,{R:()=>o,x:()=>a});var t=r(96540);const i={},s=t.createContext(i);function o(e){const n=t.useContext(s);return t.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:o(e.components),t.createElement(s.Provider,{value:n},e.children)}},49374:(e,n,r)=>{r.d(n,{B:()=>a});r(96540);const t=JSON.parse('{"mlflow.ag2":"api_reference/python_api/mlflow.ag2.html","mlflow.agno":"api_reference/python_api/mlflow.agno.html","mlflow.anthropic":"api_reference/python_api/mlflow.anthropic.html","mlflow.artifacts":"api_reference/python_api/mlflow.artifacts.html","mlflow.autogen":"api_reference/python_api/mlflow.autogen.html","mlflow.bedrock":"api_reference/python_api/mlflow.bedrock.html","mlflow.catboost":"api_reference/python_api/mlflow.catboost.html","mlflow.client":"api_reference/python_api/mlflow.client.html","mlflow.config":"api_reference/python_api/mlflow.config.html","mlflow.crewai":"api_reference/python_api/mlflow.crewai.html","mlflow.data":"api_reference/python_api/mlflow.data.html","mlflow.deployments":"api_reference/python_api/mlflow.deployments.html","mlflow.diviner":"api_reference/python_api/mlflow.diviner.html","mlflow.dspy":"api_reference/python_api/mlflow.dspy.html","mlflow.entities":"api_reference/python_api/mlflow.entities.html","mlflow.environment_variables":"api_reference/python_api/mlflow.environment_variables.html","mlflow.gateway":"api_reference/python_api/mlflow.gateway.html","mlflow.gemini":"api_reference/python_api/mlflow.gemini.html","mlflow.genai":"api_reference/python_api/mlflow.genai.html","mlflow.groq":"api_reference/python_api/mlflow.groq.html","mlflow.h2o":"api_reference/python_api/mlflow.h2o.html","mlflow.johnsnowlabs":"api_reference/python_api/mlflow.johnsnowlabs.html","mlflow.keras":"api_reference/python_api/mlflow.keras.html","mlflow.langchain":"api_reference/python_api/mlflow.langchain.html","mlflow.lightgbm":"api_reference/python_api/mlflow.lightgbm.html","mlflow.litellm":"api_reference/python_api/mlflow.litellm.html","mlflow.llama_index":"api_reference/python_api/mlflow.llama_index.html","mlflow.metrics":"api_reference/python_api/mlflow.metrics.html","mlflow.mistral":"api_reference/python_api/mlflow.mistral.html","mlflow.models":"api_reference/python_api/mlflow.models.html","mlflow.onnx":"api_reference/python_api/mlflow.onnx.html","mlflow.openai":"api_reference/python_api/mlflow.openai.html","mlflow.paddle":"api_reference/python_api/mlflow.paddle.html","mlflow.pmdarima":"api_reference/python_api/mlflow.pmdarima.html","mlflow.projects":"api_reference/python_api/mlflow.projects.html","mlflow.promptflow":"api_reference/python_api/mlflow.promptflow.html","mlflow.prophet":"api_reference/python_api/mlflow.prophet.html","mlflow.pydantic_ai":"api_reference/python_api/mlflow.pydantic_ai.html","mlflow.pyfunc":"api_reference/python_api/mlflow.pyfunc.html","mlflow.pyspark.ml":"api_reference/python_api/mlflow.pyspark.ml.html","mlflow.pytorch":"api_reference/python_api/mlflow.pytorch.html","mlflow":"api_reference/python_api/mlflow.html","mlflow.sagemaker":"api_reference/python_api/mlflow.sagemaker.html","mlflow.sentence_transformers":"api_reference/python_api/mlflow.sentence_transformers.html","mlflow.server":"api_reference/python_api/mlflow.server.html","mlflow.shap":"api_reference/python_api/mlflow.shap.html","mlflow.sklearn":"api_reference/python_api/mlflow.sklearn.html","mlflow.smolagents":"api_reference/python_api/mlflow.smolagents.html","mlflow.spacy":"api_reference/python_api/mlflow.spacy.html","mlflow.spark":"api_reference/python_api/mlflow.spark.html","mlflow.statsmodels":"api_reference/python_api/mlflow.statsmodels.html","mlflow.system_metrics":"api_reference/python_api/mlflow.system_metrics.html","mlflow.tensorflow":"api_reference/python_api/mlflow.tensorflow.html","mlflow.tracing":"api_reference/python_api/mlflow.tracing.html","mlflow.transformers":"api_reference/python_api/mlflow.transformers.html","mlflow.types":"api_reference/python_api/mlflow.types.html","mlflow.utils":"api_reference/python_api/mlflow.utils.html","mlflow.webhooks":"api_reference/python_api/mlflow.webhooks.html","mlflow.xgboost":"api_reference/python_api/mlflow.xgboost.html","mlflow.server.auth":"api_reference/auth/python-api.html","mlflow.server.cli":"api_reference/cli.html","mlflow.r":"api_reference/R-api.html","mlflow.java":"api_reference/java_api/index.html","mlflow.python":"api_reference/python_api/index.html","mlflow.rest":"api_reference/rest-api.html","mlflow.typescript":"api_reference/typescript_api/index.html","mlflow.llms.deployments.api":"api_reference/llms/deployments/api.html"}');var i=r(86025),s=r(74848);const o=e=>{const n=e.split(".");for(let r=n.length;r>0;r--){const e=n.slice(0,r).join(".");if(t[e])return e}return null};function a({fn:e,children:n,hash:r}){const a=o(e);if(!a)return(0,s.jsx)(s.Fragment,{children:n});const l=(0,i.Ay)(`/${t[a]}#${r??e}`);return(0,s.jsx)("a",{href:l,target:"_blank",children:n??(0,s.jsxs)("code",{children:[e,"()"]})})}},70950:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>d,contentTitle:()=>h,default:()=>m,frontMatter:()=>c,metadata:()=>t,toc:()=>f});const t=JSON.parse('{"id":"architecture/tracking-server","title":"MLflow Tracking Server","description":"MLflow tracking server is a stand-alone HTTP server that serves multiple REST API endpoints for tracking runs/experiments.","source":"@site/docs/self-hosting/architecture/tracking-server.mdx","sourceDirName":"architecture","slug":"/architecture/tracking-server","permalink":"/mlflow-website/docs/latest/self-hosting/architecture/tracking-server","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{"sidebar_label":"Tracking Server"},"sidebar":"selfHostingSidebar","previous":{"title":"Overview","permalink":"/mlflow-website/docs/latest/self-hosting/architecture/overview"},"next":{"title":"Backend Store","permalink":"/mlflow-website/docs/latest/self-hosting/architecture/backend-store"}}');var i=r(74848),s=r(28453),o=r(11470),a=r(19365),l=r(49374);const c={sidebar_label:"Tracking Server"},h="MLflow Tracking Server",d={},f=[{value:"Start the Tracking Server",id:"start-the-tracking-server",level:2},{value:"Logging to a Tracking Server",id:"logging_to_a_tracking_server",level:2},{value:"Configure Server",id:"configure-server",level:2},{value:"Backend Store",id:"backend-store",level:3},{value:"Remote artifacts store",id:"tracking-server-artifact-store",level:3},{value:"Using the Tracking Server for proxied artifact access",id:"using-the-tracking-server-for-proxied-artifact-access",level:4},{value:"Use tracking server w/o proxying artifacts access",id:"tracking-server-no-proxy",level:4},{value:"Optionally using a Tracking Server instance exclusively for artifact handling",id:"tracking-server-artifacts-only",level:4},{value:"Secure Tracking Server",id:"tracking-auth",level:2},{value:"Built-in Security Middleware",id:"built-in-security-middleware",level:3},{value:"Authentication and Encryption",id:"authentication-and-encryption",level:3},{value:"Tracking Server versioning",id:"tracking-server-versioning",level:2},{value:"Model Version Source Validation",id:"model-version-source-validation",level:2},{value:"Configuration",id:"configuration",level:3},{value:"Example: Restricting to MLflow Artifacts",id:"example-restricting-to-mlflow-artifacts",level:3},{value:"Example: Restricting to Specific S3 Buckets",id:"example-restricting-to-specific-s3-buckets",level:3},{value:"Fetching Server Version",id:"fetching-server-version",level:2},{value:"Handling timeout when uploading/downloading large artifacts",id:"handling-timeout-when-uploadingdownloading-large-artifacts",level:2},{value:"Full List of Command Line Options",id:"full-list-of-command-line-options",level:2}];function p(e){const n={a:"a",admonition:"admonition",code:"code",em:"em",h1:"h1",h2:"h2",h3:"h3",h4:"h4",header:"header",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,s.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.header,{children:(0,i.jsx)(n.h1,{id:"mlflow-tracking-server",children:"MLflow Tracking Server"})}),"\n",(0,i.jsx)(n.p,{children:"MLflow tracking server is a stand-alone HTTP server that serves multiple REST API endpoints for tracking runs/experiments.\nWhile MLflow Tracking can be used in local environment, hosting a tracking server is powerful in the team development\nworkflow:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Collaboration"}),": Multiple users can log runs to the same endpoint, and query runs and models logged by other users."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Sharing Results"}),": The tracking server also serves ",(0,i.jsx)(n.a,{href:"/ml/tracking#tracking_ui",children:"Tracking UI"})," endpoint, where team members can easily explore each other's results."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Centralized Access"}),": The tracking server can be run as a proxy for the remote access for metadata and artifacts, making it easier to secure and audit access to data."]}),"\n"]}),"\n",(0,i.jsx)(n.h2,{id:"start-the-tracking-server",children:"Start the Tracking Server"}),"\n",(0,i.jsx)(n.p,{children:"Starting the tracking server is as simple as running the following command:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"mlflow server --host 127.0.0.1 --port 8080 --backend-store-uri sqlite:///mlflow.db\n"})}),"\n",(0,i.jsx)(n.p,{children:"Once the server starts running, you should see the following output:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:"INFO:     Started server process [28550]\nINFO:     Waiting for application startup.\nINFO:     Application startup complete.\nINFO:     Uvicorn running on http://127.0.0.1:8080 (Press CTRL+C to quit)\n"})}),"\n",(0,i.jsxs)(n.p,{children:["There are many options to configure the server, refer to ",(0,i.jsx)(n.a,{href:"#configure-server",children:"Configure Server"})," for more details."]}),"\n",(0,i.jsx)(n.admonition,{type:"info",children:(0,i.jsxs)(n.p,{children:["The ",(0,i.jsx)(n.code,{children:"--backend-store-uri"})," option is not mandatory, but highly recommended. MLflow uses a local filesystem for storing the metadata by default. The above option overrides this to uses a database backend, which provides much better performance and reliability in general. The file backend is in Keep-the-Light-On (KTLO) mode and will not receive most of the new features in MLflow. For different database type such as PostgreSQL, check out ",(0,i.jsx)(n.a,{href:"/self-hosting/architecture/backend-store",children:"Backend Store"}),"."]})}),"\n",(0,i.jsxs)(n.admonition,{title:"important",type:"warning",children:[(0,i.jsxs)(n.p,{children:["The server listens on ",(0,i.jsx)(n.a,{href:"http://localhost:5000",children:"http://localhost:5000"})," by default and only accepts\nconnections from the local machine. To let the server accept connections\nfrom other machines, you will need to pass ",(0,i.jsx)(n.code,{children:"--host 0.0.0.0"})," to listen on\nall network interfaces (or a specific interface address). This is typically\nrequired configuration when running the server ",(0,i.jsx)(n.strong,{children:"in a Kubernetes pod or a\nDocker container"}),"."]}),(0,i.jsxs)(n.p,{children:["MLflow 3.5.0+ includes built-in security middleware to protect against DNS rebinding\nand CORS attacks. When using ",(0,i.jsx)(n.code,{children:"--host 0.0.0.0"}),", configure the ",(0,i.jsx)(n.code,{children:"--allowed-hosts"})," option\nto specify which domains can access your server. See ",(0,i.jsx)(n.a,{href:"/self-hosting/security/network",children:"Security Configuration"}),"\nfor details."]})]}),"\n",(0,i.jsx)(n.h2,{id:"logging_to_a_tracking_server",children:"Logging to a Tracking Server"}),"\n",(0,i.jsxs)(n.p,{children:["Once the tracking server is started, connect your local clients by setting the ",(0,i.jsx)(n.code,{children:"MLFLOW_TRACKING_URI"})," environment variable to the\nserver's URI, along with its scheme and port (for example, ",(0,i.jsx)(n.code,{children:"http://10.0.0.1:5000"}),") or call ",(0,i.jsx)(l.B,{fn:"mlflow.set_tracking_uri"}),"."]}),"\n",(0,i.jsxs)(n.p,{children:["MLflow APIs like ",(0,i.jsx)(l.B,{fn:"mlflow.start_run"}),", ",(0,i.jsx)(l.B,{fn:"mlflow.log_param"}),", ",(0,i.jsx)(l.B,{fn:"mlflow.start_trace"})," make API requests to your remote tracking server and log the data."]}),"\n",(0,i.jsxs)(o.A,{children:[(0,i.jsx)(a.A,{default:!0,label:"Python",value:"python",children:(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-python",children:'import mlflow\n\nremote_server_uri = "..."  # set to your server URI, e.g. http://127.0.0.1:8080\nmlflow.set_tracking_uri(remote_server_uri)\nmlflow.set_experiment("/my-experiment")\n\n# Logging a run\nwith mlflow.start_run():\n    mlflow.log_param("a", 1)\n    mlflow.log_metric("b", 2)\n\n# Logging a trace\nwith mlflow.start_span(name="test_trace") as span:\n    span.set_inputs({"x": 1, "y": 2})\n    span.set_outputs(3)\n'})})}),(0,i.jsx)(a.A,{label:"TypeScript",value:"typescript",children:(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-typescript",children:'import * as mlflow from "mlflow-tracing";\n\nmlflow.init({\n    trackingUri: "<your-tracking-server-uri>",\n    experimentId: "<your-experiment-id>",\n});\n\nconst myFunc = mlflow.trace(\n    (a: number, b: number) => {\n        return a + b;\n    },\n    { name: \'my-func\' }\n)\nmyFunc(1, 2);\n'})})}),(0,i.jsx)(a.A,{label:"R",value:"r",children:(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-r",children:'library(mlflow)\ninstall_mlflow()\nremote_server_uri = "..." # set to your server URI\nmlflow_set_tracking_uri(remote_server_uri)\nmlflow_set_experiment("/my-experiment")\nmlflow_log_param("a", "1")\n'})})}),(0,i.jsx)(a.A,{label:"Scala",value:"scala",children:(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-scala",children:'import org.mlflow.tracking.MlflowClient\n\nval remoteServerUri = "..." // set to your server URI\nval client = new MlflowClient(remoteServerUri)\n\nval experimentId = client.createExperiment("my-experiment")\nclient.setExperiment(experimentId)\n\nval run = client.createRun(experimentId)\nclient.logParam(run.getRunId(), "a", "1")\n'})})})]}),"\n",(0,i.jsx)(n.h2,{id:"configure-server",children:"Configure Server"}),"\n",(0,i.jsxs)(n.p,{children:["This section describes how to configure the tracking server for some common use cases. The section requires you to have a basic knowledge about the tracking server architecture, please visit ",(0,i.jsx)(n.a,{href:"/self-hosting/architecture/overview",children:"Architecture Overview"})," if you are not familiar with it yet."]}),"\n",(0,i.jsx)(n.h3,{id:"backend-store",children:"Backend Store"}),"\n",(0,i.jsxs)(n.p,{children:["By default, the tracking server logs runs metadata to the local filesystem under ",(0,i.jsx)(n.code,{children:"./mlruns"})," directory.\nYou can configure the different backend store by adding ",(0,i.jsx)(n.code,{children:"--backend-store-uri"})," option:"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",metastring:'title="Example"',children:"# Default: local file system\nmlflow server\n# SQLite: create a SQLite database `my.db` in the current directory\nmlflow server --backend-store-uri sqlite:///my.db\n# PostgreSQL: connect to an existing PostgreSQL database\nmlflow server --backend-store-uri postgresql://username:password@host:port/database\n"})}),"\n",(0,i.jsxs)(n.p,{children:["We ",(0,i.jsx)(n.strong,{children:"recommend using a database backend"})," in general, because it provides better performance and reliability than the default file backend."]}),"\n",(0,i.jsx)(n.h3,{id:"tracking-server-artifact-store",children:"Remote artifacts store"}),"\n",(0,i.jsx)(n.h4,{id:"using-the-tracking-server-for-proxied-artifact-access",children:"Using the Tracking Server for proxied artifact access"}),"\n",(0,i.jsxs)(n.p,{children:["By default, the tracking server stores artifacts in its local filesystem under ",(0,i.jsx)(n.code,{children:"./mlartifacts"})," directory. To configure\nthe tracking server to connect to remote storage and serve artifacts, start the server with ",(0,i.jsx)(n.code,{children:"--artifacts-destination"})," flag."]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"mlflow server \\\n    --host 0.0.0.0 \\\n    --port 8885 \\\n    --artifacts-destination s3://my-bucket\n"})}),"\n",(0,i.jsx)(n.p,{children:"With this setting, MLflow server works as a proxy for accessing remote artifacts. The MLflow clients make HTTP request to the server for fetching artifacts."}),"\n",(0,i.jsx)(n.admonition,{title:"important",type:"warning",children:(0,i.jsxs)(n.p,{children:["If you are using remote storage, you have to configure the credentials for the server to access the artifacts. Be aware of that The MLflow artifact proxied\naccess service enables users to have an ",(0,i.jsx)(n.em,{children:"assumed role of access to all artifacts"})," that are accessible to the Tracking Server. Refer ",(0,i.jsx)(n.a,{href:"/self-hosting/architecture/artifact-store#artifacts-stores-manage-access",children:"Manage Access"})," for further details."]})}),"\n",(0,i.jsxs)(n.p,{children:["The tracking server resolves the uri ",(0,i.jsx)(n.code,{children:"mlflow-artifacts:/"}),' in tracking request from the client to an otherwise\nexplicit object store destination (e.g., "s3:/my_bucket/mlartifacts") for interfacing with artifacts. The following patterns will all resolve to the configured proxied object store location (in above example, ',(0,i.jsx)(n.code,{children:"s3://my-root-bucket/mlartifacts"}),"):"]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.code,{children:"https://<host>:<port>/mlartifacts"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.code,{children:"http://<host>/mlartifacts"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.code,{children:"mlflow-artifacts://<host>/mlartifacts"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.code,{children:"mlflow-artifacts://<host>:<port>/mlartifacts"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.code,{children:"mlflow-artifacts:/mlartifacts"})}),"\n"]}),"\n",(0,i.jsx)(n.admonition,{title:"important",type:"warning",children:(0,i.jsx)(n.p,{children:"The MLflow client caches artifact location information on a per-run basis.\nIt is therefore not recommended to alter a run's artifact location before it has terminated."})}),"\n",(0,i.jsx)(n.h4,{id:"tracking-server-no-proxy",children:"Use tracking server w/o proxying artifacts access"}),"\n",(0,i.jsxs)(n.p,{children:["In some cases, you may want to directly access remote storage without proxying through the tracking server.\nIn this case, you can start the server with ",(0,i.jsx)(n.code,{children:"--no-serve-artifacts"})," flag, and setting ",(0,i.jsx)(n.code,{children:"--default-artifact-root"})," to the remote storage URI\nyou want to redirect the request to."]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"mlflow server --no-serve-artifacts --default-artifact-root s3://my-bucket\n"})}),"\n",(0,i.jsx)(n.p,{children:"With this setting, the MLflow client still makes minimum HTTP requests to the tracking server for fetching proper remote storage URI,\nbut can directly upload artifacts to / download artifacts from the remote storage. While this might not be a good practice for access and\nsecury governance, it could be useful when you want to avoid the overhead of proxying artifacts through the tracking server."}),"\n",(0,i.jsxs)(n.admonition,{type:"note",children:[(0,i.jsxs)(n.p,{children:["If the MLflow server is ",(0,i.jsx)(n.em,{children:"not configured"})," with the ",(0,i.jsx)(n.code,{children:"--serve-artifacts"})," option, the client directly pushes artifacts\nto the artifact store. It does not proxy these through the tracking server by default."]}),(0,i.jsxs)(n.p,{children:["For this reason, the client needs direct access to the artifact store. For instructions on setting up these credentials,\nsee ",(0,i.jsx)(n.a,{href:"/self-hosting/architecture/artifact-store#artifacts-stores-manage-access",children:"Artifact Stores documentation"}),"."]})]}),"\n",(0,i.jsx)(n.admonition,{type:"note",children:(0,i.jsxs)(n.p,{children:["When an experiment is created, the artifact storage location from the configuration of the tracking server is logged in the experiment's metadata.\nWhen enabling proxied artifact storage, any existing experiments that were created while operating a tracking server in\nnon-proxied mode will continue to use a non-proxied artifact location. In order to use proxied artifact logging, a new experiment must be created.\nIf the intention of enabling a tracking server in ",(0,i.jsx)(n.code,{children:"-serve-artifacts"})," mode is to eliminate the need for a client to have authentication to\nthe underlying storage, new experiments should be created for use by clients so that the tracking server can handle authentication after this migration."]})}),"\n",(0,i.jsx)(n.h4,{id:"tracking-server-artifacts-only",children:"Optionally using a Tracking Server instance exclusively for artifact handling"}),"\n",(0,i.jsx)(n.p,{children:"MLflow Tracking Server can be configured to use different backend store and artifact store, and provides a single endpoint for the clients."}),"\n",(0,i.jsxs)(n.p,{children:["However, if the volume of tracking server requests is sufficiently large and performance issues are noticed, a tracking server\ncan be configured to serve in ",(0,i.jsx)(n.code,{children:"--artifacts-only"})," mode, operating in tandem with an instance that\noperates with ",(0,i.jsx)(n.code,{children:"--no-serve-artifacts"})," specified. This configuration ensures that the processing of artifacts is isolated\nfrom all other tracking server event handling."]}),"\n",(0,i.jsxs)(n.p,{children:["When a tracking server is configured in ",(0,i.jsx)(n.code,{children:"--artifacts-only"})," mode, any tasks apart from those concerned with artifact\nhandling (i.e., model logging, loading models, logging artifacts, listing artifacts, etc.) will return an HTTPError.\nSee the following example of a client REST call in Python attempting to list experiments from a server that is configured in\n",(0,i.jsx)(n.code,{children:"--artifacts-only"})," mode:"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"# Launch the artifact-only server\nmlflow server --artifacts-only ...\n"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-python",children:'import requests\n\n# Attempt to list experiments from the server\nresponse = requests.get("http://0.0.0.0:8885/api/2.0/mlflow/experiments/list")\n'})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-_",metastring:'title="Output"',children:">> HTTPError: Endpoint: /api/2.0/mlflow/experiments/list disabled due to the mlflow server running in `--artifacts-only` mode.\n"})}),"\n",(0,i.jsx)(n.p,{children:"Using an additional MLflow server to handle artifacts exclusively can be useful for large-scale MLOps infrastructure.\nDecoupling the longer running and more compute-intensive tasks of artifact handling from the faster and higher-volume\nmetadata functionality of the other Tracking API requests can help minimize the burden of an otherwise single MLflow\nserver handling both types of payloads."}),"\n",(0,i.jsx)(n.admonition,{type:"note",children:(0,i.jsxs)(n.p,{children:["If an MLflow server is running with the ",(0,i.jsx)(n.code,{children:"--artifacts-only"})," flag, the client should interact with this server explicitly by\nincluding either a ",(0,i.jsx)(n.code,{children:"host"})," or ",(0,i.jsx)(n.code,{children:"host:port"})," definition for uri location references for artifacts.\nOtherwise, all artifact requests will route to the MLflow Tracking server, defeating the purpose of running a distinct artifact server."]})}),"\n",(0,i.jsx)(n.h2,{id:"tracking-auth",children:"Secure Tracking Server"}),"\n",(0,i.jsx)(n.h3,{id:"built-in-security-middleware",children:"Built-in Security Middleware"}),"\n",(0,i.jsx)(n.p,{children:"MLflow 3.5.0+ includes security middleware that automatically protects against common web vulnerabilities:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"DNS Rebinding Protection"}),": Validates Host headers to prevent attacks on internal services"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"CORS Protection"}),": Controls which web applications can access your API"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Clickjacking Prevention"}),": X-Frame-Options header controls iframe embedding"]}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:"Configure these features with simple command-line options:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:'mlflow server --host 0.0.0.0 \\\n  --allowed-hosts "mlflow.company.com" \\\n  --cors-allowed-origins "https://app.company.com"\n'})}),"\n",(0,i.jsxs)(n.p,{children:["For detailed configuration options, see ",(0,i.jsx)(n.a,{href:"/self-hosting/security/network",children:"Security Configuration"}),"."]}),"\n",(0,i.jsx)(n.h3,{id:"authentication-and-encryption",children:"Authentication and Encryption"}),"\n",(0,i.jsx)(n.p,{children:"For production deployments, we recommend using a reverse proxy (NGINX, Apache httpd) or VPN to add:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"TLS/HTTPS encryption"})," for secure communication"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Authentication"})," via proxy authentication headers"]}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:"You can pass authentication headers to MLflow using these environment variables:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"MLFLOW_TRACKING_USERNAME"})," and ",(0,i.jsx)(n.code,{children:"MLFLOW_TRACKING_PASSWORD"})," - username and password to use with HTTP\nBasic authentication. To use Basic authentication, you must set ",(0,i.jsx)(n.code,{children:"both"})," environment variables."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"MLFLOW_TRACKING_TOKEN"})," - token to use with HTTP Bearer authentication. Basic authentication takes precedence if set."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"MLFLOW_TRACKING_INSECURE_TLS"})," - If set to the literal ",(0,i.jsx)(n.code,{children:"true"}),", MLflow does not verify the TLS connection,\nmeaning it does not validate certificates or hostnames for ",(0,i.jsx)(n.code,{children:"https://"})," tracking URIs. This flag is not recommended for\nproduction environments. If this is set to ",(0,i.jsx)(n.code,{children:"true"})," then ",(0,i.jsx)(n.code,{children:"MLFLOW_TRACKING_SERVER_CERT_PATH"})," must not be set."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"MLFLOW_TRACKING_SERVER_CERT_PATH"})," - Path to a CA bundle to use. Sets the ",(0,i.jsx)(n.code,{children:"verify"})," param of the\n",(0,i.jsx)(n.code,{children:"requests.request"})," function\n(see ",(0,i.jsx)(n.a,{href:"https://requests.readthedocs.io/en/master/api",children:"requests main interface"}),").\nWhen you use a self-signed server certificate you can use this to verify it on client side.\nIf this is set ",(0,i.jsx)(n.code,{children:"MLFLOW_TRACKING_INSECURE_TLS"})," must not be set (false)."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"MLFLOW_TRACKING_CLIENT_CERT_PATH"})," - Path to ssl client cert file (.pem). Sets the ",(0,i.jsx)(n.code,{children:"cert"})," param\nof the ",(0,i.jsx)(n.code,{children:"requests.request"})," function\n(see ",(0,i.jsx)(n.a,{href:"https://requests.readthedocs.io/en/master/api",children:"requests main interface"}),").\nThis can be used to use a (self-signed) client certificate."]}),"\n"]}),"\n",(0,i.jsxs)(n.p,{children:["For notebook integration and UI embedding options, see ",(0,i.jsx)(n.a,{href:"/self-hosting/security/network",children:"Network Security"})," configuration."]}),"\n",(0,i.jsx)(n.h2,{id:"tracking-server-versioning",children:"Tracking Server versioning"}),"\n",(0,i.jsxs)(n.p,{children:["The version of MLflow running on the server can be found by querying the ",(0,i.jsx)(n.code,{children:"/version"})," endpoint.\nThis can be used to check that the client-side version of MLflow is up-to-date with a remote tracking server prior to running experiments.\nFor example:"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-python",children:'import requests\nimport mlflow\n\nresponse = requests.get("http://<mlflow-host>:<mlflow-port>/version")\nassert response.text == mlflow.__version__  # Checking for a strict version match\n'})}),"\n",(0,i.jsx)(n.h2,{id:"model-version-source-validation",children:"Model Version Source Validation"}),"\n",(0,i.jsx)(n.p,{children:"The tracking server can be configured to validate model version sources using a regular expression pattern. This security feature helps ensure that only model versions from approved sources are registered in your model registry."}),"\n",(0,i.jsx)(n.h3,{id:"configuration",children:"Configuration"}),"\n",(0,i.jsxs)(n.p,{children:["Set the ",(0,i.jsx)(n.code,{children:"MLFLOW_CREATE_MODEL_VERSION_SOURCE_VALIDATION_REGEX"})," environment variable when starting the tracking server:"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:'export MLFLOW_CREATE_MODEL_VERSION_SOURCE_VALIDATION_REGEX="^mlflow-artifacts:/.*$"\nmlflow server --host 0.0.0.0 --port 5000\n'})}),"\n",(0,i.jsxs)(n.p,{children:["When this environment variable is set, the tracking server will validate the ",(0,i.jsx)(n.code,{children:"source"})," parameter in model version creation requests against the specified regular expression pattern. If the source doesn't match the pattern, the request will be rejected with an error."]}),"\n",(0,i.jsx)(n.h3,{id:"example-restricting-to-mlflow-artifacts",children:"Example: Restricting to MLflow Artifacts"}),"\n",(0,i.jsx)(n.p,{children:"To only allow model versions from MLflow artifacts storage:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:'export MLFLOW_CREATE_MODEL_VERSION_SOURCE_VALIDATION_REGEX="^mlflow-artifacts:/.*$"\nmlflow server --host 0.0.0.0 --port 5000\n'})}),"\n",(0,i.jsx)(n.p,{children:"With this configuration:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-python",children:'import mlflow\nfrom mlflow import MlflowClient\n\nclient = MlflowClient("http://localhost:5000")\n\n# This will work - source matches the pattern\nclient.create_model_version(\n    name="my-model",\n    source="mlflow-artifacts://1/artifacts/model",\n    run_id="abc123",\n)\n\n# This will fail - source doesn\'t match the pattern\nclient.create_model_version(\n    name="my-model",\n    source="s3://my-bucket/model",\n    run_id="def456",\n)  # Raises MlflowException: Invalid model version source\n'})}),"\n",(0,i.jsx)(n.h3,{id:"example-restricting-to-specific-s3-buckets",children:"Example: Restricting to Specific S3 Buckets"}),"\n",(0,i.jsx)(n.p,{children:"To only allow model versions from specific S3 buckets:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:'export MLFLOW_CREATE_MODEL_VERSION_SOURCE_VALIDATION_REGEX="^s3://(production-models|staging-models)/.*$"\nmlflow server --host 0.0.0.0 --port 5000\n'})}),"\n",(0,i.jsx)(n.p,{children:"This pattern would allow sources like:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.code,{children:"s3://production-models/model-v1/"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.code,{children:"s3://staging-models/experiment-123/model/"})}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:"But reject sources like:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.code,{children:"s3://untrusted-bucket/model/"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.code,{children:"file:///local/path/model"})}),"\n"]}),"\n",(0,i.jsx)(n.admonition,{type:"note",children:(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"If the environment variable is not set, no source validation is performed."}),"\n",(0,i.jsxs)(n.li,{children:["The validation only applies to the ",(0,i.jsx)(n.code,{children:"/mlflow/model-versions/create"})," API endpoint."]}),"\n",(0,i.jsxs)(n.li,{children:["The regular expression is applied using Python's ",(0,i.jsx)(n.code,{children:"re.search()"})," function."]}),"\n",(0,i.jsx)(n.li,{children:"Use standard regular expression syntax for pattern matching."}),"\n"]})}),"\n",(0,i.jsx)(n.h2,{id:"fetching-server-version",children:"Fetching Server Version"}),"\n",(0,i.jsxs)(n.p,{children:["The version of MLflow running on the server can be found by querying the ",(0,i.jsx)(n.code,{children:"/version"})," endpoint.\nThis can be used to check that the client-side version of MLflow is up-to-date with a remote tracking server prior to running experiments.\nFor example:"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-python",children:'import requests\nimport mlflow\n\nresponse = requests.get("http://<mlflow-host>:<mlflow-port>/version")\nassert response.text == mlflow.__version__  # Checking for a strict version match\n'})}),"\n",(0,i.jsx)(n.h2,{id:"handling-timeout-when-uploadingdownloading-large-artifacts",children:"Handling timeout when uploading/downloading large artifacts"}),"\n",(0,i.jsx)(n.p,{children:"When uploading or downloading large artifacts through the tracking server with the artifact proxy enabled, the server may take a long time to process the request. If it exceeds the timeout limit, the server will terminate the request, resulting in a request failure on the client side."}),"\n",(0,i.jsx)(n.p,{children:"Example client code:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-python",children:'import mlflow\n\nmlflow.set_tracking_uri("<TRACKING_SERVER_URI>")\nwith mlflow.start_run():\n    mlflow.log_artifact("large.txt")\n'})}),"\n",(0,i.jsx)(n.p,{children:"Client traceback:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:'Traceback (most recent call last):\n  File "/Users/user/python3.10/site-packages/requests/adapters.py", line 486, in send\n    resp = conn.urlopen(\n  File "/Users/user/python3.10/site-packages/urllib3/connectionpool.py", line 826, in urlopen\n    return self.urlopen(\n  ...\n  File "/Users/user/python3.10/site-packages/urllib3/connectionpool.py", line 798, in urlopen\n    retries = retries.increment(\n  File "/Users/user/python3.10/site-packages/urllib3/util/retry.py", line 592, in increment\n    raise MaxRetryError(_pool, url, error or ResponseError(cause))\nurllib3.exceptions.MaxRetryError: HTTPSConnectionPool(host=\'mlflow.example.com\', port=443): Max retries exceeded with url: ... (Caused by SSLError(SSLEOFError(8, \'EOF occurred in violation of protocol (_ssl.c:2426)\')))\nDuring handling of the above exception, another exception occurred:\n'})}),"\n",(0,i.jsx)(n.p,{children:"Tracking server logs:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"INFO:     Started server process [82]\nINFO:     Waiting for application startup.\nINFO:     Application startup complete.\nINFO:     Uvicorn running on http://0.0.0.0:5000 (Press CTRL+C to quit)\n...\nWARNING:  Request timeout exceeded\nERROR:    Exception in ASGI application\n"})}),"\n",(0,i.jsxs)(n.p,{children:["To mitigate this issue, the timeout length can be increased by using the ",(0,i.jsx)(n.code,{children:"--uvicorn-opts"})," option when starting the server as shown below:"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:'mlflow server --uvicorn-opts "--timeout-keep-alive=120" ...\n'})}),"\n",(0,i.jsxs)(n.p,{children:["For users still using gunicorn (via ",(0,i.jsx)(n.code,{children:"--gunicorn-opts"}),"), the equivalent command would be:"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:'mlflow server --gunicorn-opts "--timeout=120" ...\n'})}),"\n",(0,i.jsxs)(n.p,{children:["See the ",(0,i.jsx)(n.a,{href:"https://www.uvicorn.org/settings/",children:"uvicorn settings documentation"})," for more configuration options."]}),"\n",(0,i.jsx)(n.h2,{id:"full-list-of-command-line-options",children:"Full List of Command Line Options"}),"\n",(0,i.jsxs)(n.p,{children:["Please run ",(0,i.jsx)(n.code,{children:"mlflow server --help"})," for the full list of command line options."]})]})}function m(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(p,{...e})}):p(e)}}}]);