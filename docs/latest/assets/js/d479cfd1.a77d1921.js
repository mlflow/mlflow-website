"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[6681],{2371:(e,t,n)=>{n.d(t,{A:()=>r});const r=n.p+"assets/images/compare-prompt-versions-2082121aeaca4be99a0cf968535141ed.png"},28453:(e,t,n)=>{n.d(t,{R:()=>l,x:()=>i});var r=n(96540);const o={},a=r.createContext(o);function l(e){const t=r.useContext(a);return r.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function i(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:l(e.components),r.createElement(a.Provider,{value:t},e.children)}},53296:(e,t,n)=>{n.d(t,{A:()=>r});const r=n.p+"assets/images/update-prompt-ui-74a489e65098893bbffe253f43fb210d.png"},65537:(e,t,n)=>{n.d(t,{A:()=>j});var r=n(96540),o=n(34164),a=n(65627),l=n(56347),i=n(50372),s=n(30604),p=n(11861),m=n(78749);function c(e){return r.Children.toArray(e).filter((e=>"\n"!==e)).map((e=>{if(!e||(0,r.isValidElement)(e)&&function(e){const{props:t}=e;return!!t&&"object"==typeof t&&"value"in t}(e))return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)}))?.filter(Boolean)??[]}function h(e){const{values:t,children:n}=e;return(0,r.useMemo)((()=>{const e=t??function(e){return c(e).map((e=>{let{props:{value:t,label:n,attributes:r,default:o}}=e;return{value:t,label:n,attributes:r,default:o}}))}(n);return function(e){const t=(0,p.XI)(e,((e,t)=>e.value===t.value));if(t.length>0)throw new Error(`Docusaurus error: Duplicate values "${t.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`)}(e),e}),[t,n])}function d(e){let{value:t,tabValues:n}=e;return n.some((e=>e.value===t))}function f(e){let{queryString:t=!1,groupId:n}=e;const o=(0,l.W6)(),a=function(e){let{queryString:t=!1,groupId:n}=e;if("string"==typeof t)return t;if(!1===t)return null;if(!0===t&&!n)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return n??null}({queryString:t,groupId:n});return[(0,s.aZ)(a),(0,r.useCallback)((e=>{if(!a)return;const t=new URLSearchParams(o.location.search);t.set(a,e),o.replace({...o.location,search:t.toString()})}),[a,o])]}function u(e){const{defaultValue:t,queryString:n=!1,groupId:o}=e,a=h(e),[l,s]=(0,r.useState)((()=>function(e){let{defaultValue:t,tabValues:n}=e;if(0===n.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(t){if(!d({value:t,tabValues:n}))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${t}" but none of its children has the corresponding value. Available values are: ${n.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return t}const r=n.find((e=>e.default))??n[0];if(!r)throw new Error("Unexpected error: 0 tabValues");return r.value}({defaultValue:t,tabValues:a}))),[p,c]=f({queryString:n,groupId:o}),[u,g]=function(e){let{groupId:t}=e;const n=function(e){return e?`docusaurus.tab.${e}`:null}(t),[o,a]=(0,m.Dv)(n);return[o,(0,r.useCallback)((e=>{n&&a.set(e)}),[n,a])]}({groupId:o}),w=(()=>{const e=p??u;return d({value:e,tabValues:a})?e:null})();(0,i.A)((()=>{w&&s(w)}),[w]);return{selectedValue:l,selectValue:(0,r.useCallback)((e=>{if(!d({value:e,tabValues:a}))throw new Error(`Can't select invalid tab value=${e}`);s(e),c(e),g(e)}),[c,g,a]),tabValues:a}}var g=n(9136);const w={tabList:"tabList__CuJ",tabItem:"tabItem_LNqP"};var x=n(74848);function y(e){let{className:t,block:n,selectedValue:r,selectValue:l,tabValues:i}=e;const s=[],{blockElementScrollPositionUntilNextRender:p}=(0,a.a_)(),m=e=>{const t=e.currentTarget,n=s.indexOf(t),o=i[n].value;o!==r&&(p(t),l(o))},c=e=>{let t=null;switch(e.key){case"Enter":m(e);break;case"ArrowRight":{const n=s.indexOf(e.currentTarget)+1;t=s[n]??s[0];break}case"ArrowLeft":{const n=s.indexOf(e.currentTarget)-1;t=s[n]??s[s.length-1];break}}t?.focus()};return(0,x.jsx)("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,o.A)("tabs",{"tabs--block":n},t),children:i.map((e=>{let{value:t,label:n,attributes:a}=e;return(0,x.jsx)("li",{role:"tab",tabIndex:r===t?0:-1,"aria-selected":r===t,ref:e=>{s.push(e)},onKeyDown:c,onClick:m,...a,className:(0,o.A)("tabs__item",w.tabItem,a?.className,{"tabs__item--active":r===t}),children:n??t},t)}))})}function v(e){let{lazy:t,children:n,selectedValue:a}=e;const l=(Array.isArray(n)?n:[n]).filter(Boolean);if(t){const e=l.find((e=>e.props.value===a));return e?(0,r.cloneElement)(e,{className:(0,o.A)("margin-top--md",e.props.className)}):null}return(0,x.jsx)("div",{className:"margin-top--md",children:l.map(((e,t)=>(0,r.cloneElement)(e,{key:t,hidden:e.props.value!==a})))})}function _(e){const t=u(e);return(0,x.jsxs)("div",{className:(0,o.A)("tabs-container",w.tabList),children:[(0,x.jsx)(y,{...t,...e}),(0,x.jsx)(v,{...t,...e})]})}function j(e){const t=(0,g.A)();return(0,x.jsx)(_,{...e,children:c(e.children)},String(t))}},67756:(e,t,n)=>{n.d(t,{B:()=>s});n(96540);const r=JSON.parse('{"mlflow.anthropic":"api_reference/python_api/mlflow.anthropic.html","mlflow.artifacts":"api_reference/python_api/mlflow.artifacts.html","mlflow.ag2":"api_reference/python_api/mlflow.ag2.html","mlflow.autogen":"api_reference/python_api/mlflow.autogen.html","mlflow.bedrock":"api_reference/python_api/mlflow.bedrock.html","mlflow.catboost":"api_reference/python_api/mlflow.catboost.html","mlflow.client":"api_reference/python_api/mlflow.client.html","mlflow.config":"api_reference/python_api/mlflow.config.html","mlflow.crewai":"api_reference/python_api/mlflow.crewai.html","mlflow.data":"api_reference/python_api/mlflow.data.html","mlflow.deployments":"api_reference/python_api/mlflow.deployments.html","mlflow.diviner":"api_reference/python_api/mlflow.diviner.html","mlflow.dspy":"api_reference/python_api/mlflow.dspy.html","mlflow.entities":"api_reference/python_api/mlflow.entities.html","mlflow.environment_variables":"api_reference/python_api/mlflow.environment_variables.html","mlflow.gateway":"api_reference/python_api/mlflow.gateway.html","mlflow.gemini":"api_reference/python_api/mlflow.gemini.html","mlflow.groq":"api_reference/python_api/mlflow.groq.html","mlflow.h2o":"api_reference/python_api/mlflow.h2o.html","mlflow.johnsnowlabs":"api_reference/python_api/mlflow.johnsnowlabs.html","mlflow.keras":"api_reference/python_api/mlflow.keras.html","mlflow.langchain":"api_reference/python_api/mlflow.langchain.html","mlflow.lightgbm":"api_reference/python_api/mlflow.lightgbm.html","mlflow.litellm":"api_reference/python_api/mlflow.litellm.html","mlflow.llama_index":"api_reference/python_api/mlflow.llama_index.html","mlflow.metrics":"api_reference/python_api/mlflow.metrics.html","mlflow.mistral":"api_reference/python_api/mlflow.mistral.html","mlflow.models":"api_reference/python_api/mlflow.models.html","mlflow.onnx":"api_reference/python_api/mlflow.onnx.html","mlflow.openai":"api_reference/python_api/mlflow.openai.html","mlflow.paddle":"api_reference/python_api/mlflow.paddle.html","mlflow.pmdarima":"api_reference/python_api/mlflow.pmdarima.html","mlflow.projects":"api_reference/python_api/mlflow.projects.html","mlflow.promptflow":"api_reference/python_api/mlflow.promptflow.html","mlflow.prophet":"api_reference/python_api/mlflow.prophet.html","mlflow.pyfunc":"api_reference/python_api/mlflow.pyfunc.html","mlflow.pyspark.ml":"api_reference/python_api/mlflow.pyspark.ml.html","mlflow.pytorch":"api_reference/python_api/mlflow.pytorch.html","mlflow":"api_reference/python_api/mlflow.html","mlflow.sagemaker":"api_reference/python_api/mlflow.sagemaker.html","mlflow.sentence_transformers":"api_reference/python_api/mlflow.sentence_transformers.html","mlflow.server":"api_reference/python_api/mlflow.server.html","mlflow.shap":"api_reference/python_api/mlflow.shap.html","mlflow.sklearn":"api_reference/python_api/mlflow.sklearn.html","mlflow.spacy":"api_reference/python_api/mlflow.spacy.html","mlflow.spark":"api_reference/python_api/mlflow.spark.html","mlflow.statsmodels":"api_reference/python_api/mlflow.statsmodels.html","mlflow.system_metrics":"api_reference/python_api/mlflow.system_metrics.html","mlflow.tensorflow":"api_reference/python_api/mlflow.tensorflow.html","mlflow.tracing":"api_reference/python_api/mlflow.tracing.html","mlflow.transformers":"api_reference/python_api/mlflow.transformers.html","mlflow.types":"api_reference/python_api/mlflow.types.html","mlflow.utils":"api_reference/python_api/mlflow.utils.html","mlflow.xgboost":"api_reference/python_api/mlflow.xgboost.html","mlflow.server.auth":"api_reference/auth/python-api.html"}');var o=n(29030),a=n(56289),l=n(74848);const i=e=>{const t=e.split(".");for(let n=t.length;n>0;n--){const e=t.slice(0,n).join(".");if(r[e])return e}return null};function s(e){let{fn:t,children:n}=e;const s=i(t);if(!s)return(0,l.jsx)(l.Fragment,{children:n});const p=(0,o.Ay)(`/${r[s]}#${t}`);return(0,l.jsx)(a.A,{to:p,target:"_blank",children:n??(0,l.jsxs)("code",{children:[t,"()"]})})}},72406:(e,t,n)=>{n.d(t,{A:()=>r});const r=n.p+"assets/images/registered-prompt-b8d47ff0d061d8703b61a9a6e94a77c3.png"},76599:(e,t,n)=>{n.d(t,{A:()=>r});const r=n.p+"assets/images/create-prompt-ui-03c88144e65d28eb7847b2ae5d8dd49a.png"},79329:(e,t,n)=>{n.d(t,{A:()=>l});n(96540);var r=n(34164);const o={tabItem:"tabItem_Ymn6"};var a=n(74848);function l(e){let{children:t,hidden:n,className:l}=e;return(0,a.jsx)("div",{role:"tabpanel",className:(0,r.A)(o.tabItem,l),hidden:n,children:t})}},92730:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>m,default:()=>f,frontMatter:()=>p,metadata:()=>r,toc:()=>h});const r=JSON.parse('{"id":"prompts/index","title":"Prompt Management in MLflow","description":"What is MLflow Prompt Registry?","source":"@site/docs/prompts/index.mdx","sourceDirName":"prompts","slug":"/prompts/","permalink":"/docs/latest/prompts/","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":1,"frontMatter":{"sidebar_position":1,"sidebar_label":"Overview"},"sidebar":"docsSidebar","previous":{"title":"MLflow Signature Playground Notebook","permalink":"/docs/latest/model/notebooks/signature_examples"},"next":{"title":"Manage Changes in Prompts","permalink":"/docs/latest/prompts/cm"}}');var o=n(74848),a=n(28453),l=n(67756),i=n(65537),s=n(79329);const p={sidebar_position:1,sidebar_label:"Overview"},m="Prompt Management in MLflow",c={},h=[{value:"What is MLflow Prompt Registry?",id:"what-is-mlflow-prompt-registry",level:2},{value:"Getting started",id:"getting-started",level:2},{value:"1. Create a Prompt",id:"1-create-a-prompt",level:3},{value:"2. Update the Prompt with a New Version",id:"2-update-the-prompt-with-a-new-version",level:3},{value:"3. Compare the Prompt Versions",id:"3-compare-the-prompt-versions",level:3},{value:"4. Load and Use the Prompt",id:"4-load-and-use-the-prompt",level:3},{value:"5. Search Prompts",id:"5-search-prompts",level:3},{value:"Prompt Object",id:"prompt-object",level:2},{value:"FAQ",id:"faq",level:2},{value:"Q: How do I delete a prompt version?",id:"q-how-do-i-delete-a-prompt-version",level:4},{value:"Q: Can I update the prompt template of an existing prompt version?",id:"q-can-i-update-the-prompt-template-of-an-existing-prompt-version",level:4},{value:"Q: Can I use prompt templates with frameworks like LangChain or LlamaIndex?",id:"q-can-i-use-prompt-templates-with-frameworks-like-langchain-or-llamaindex",level:4},{value:"Q: Is Prompt Registry integrated with the Prompt Engineering UI?",id:"q-is-prompt-registry-integrated-with-the-prompt-engineering-ui",level:4}];function d(e){const t={a:"a",admonition:"admonition",code:"code",h1:"h1",h2:"h2",h3:"h3",h4:"h4",header:"header",img:"img",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,a.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(t.header,{children:(0,o.jsx)(t.h1,{id:"prompt-management-in-mlflow",children:"Prompt Management in MLflow"})}),"\n",(0,o.jsx)(t.h2,{id:"what-is-mlflow-prompt-registry",children:"What is MLflow Prompt Registry?"}),"\n",(0,o.jsxs)(t.p,{children:[(0,o.jsx)(t.strong,{children:"MLflow Prompt Registry"})," is a powerful tool that streamlines prompt engineering and management in your Generative AI (GenAI) applications. It enables you to version, track, and reuse prompts across your organization, helping maintain consistency and improving collaboration in prompt development."]}),"\n",(0,o.jsx)(t.admonition,{title:"Key Features",type:"tip",children:(0,o.jsxs)(t.ul,{children:["\n",(0,o.jsxs)(t.li,{children:[(0,o.jsx)(t.strong,{children:"Reusability"})," - Store and manage prompts in a centralized registry and reuse them across multiple applications."]}),"\n",(0,o.jsxs)(t.li,{children:[(0,o.jsx)(t.strong,{children:"Version Control"})," - Track the evolution of your prompts with Git-inspired commit-based versioning and side-by-side comparison of prompt versions with diff highlighting."]}),"\n",(0,o.jsxs)(t.li,{children:[(0,o.jsx)(t.strong,{children:"Aliasing"})," - Build robust yet flexible deployment pipelines for prompts using aliases, allowing you to isolate prompt versions from main application code and perform tasks such as A/B testing and roll-backs with ease."]}),"\n",(0,o.jsxs)(t.li,{children:[(0,o.jsx)(t.strong,{children:"Lineage"})," - Seamlessly integrate with MLflow's existing features such as model tracking and evaluation for end-to-end GenAI lifecycle management."]}),"\n",(0,o.jsxs)(t.li,{children:[(0,o.jsx)(t.strong,{children:"Collaboration"})," - Share prompts across your organization with a centralized registry, enabling teams to build upon each other's work."]}),"\n"]})}),"\n",(0,o.jsx)(t.h2,{id:"getting-started",children:"Getting started"}),"\n",(0,o.jsx)(t.h3,{id:"1-create-a-prompt",children:"1. Create a Prompt"}),"\n",(0,o.jsxs)(i.A,{children:[(0,o.jsx)(s.A,{value:"ui",label:"UI",default:!0,children:(0,o.jsxs)("div",{class:"flex-column",children:[(0,o.jsx)("div",{style:{width:"70%",margin:"20px"},children:(0,o.jsx)(t.p,{children:(0,o.jsx)(t.img,{alt:"Create Prompt UI",src:n(76599).A+"",width:"1239",height:"660"})})}),(0,o.jsxs)(t.ol,{children:["\n",(0,o.jsxs)(t.li,{children:["Run ",(0,o.jsx)(t.code,{children:"mlflow ui"})," in your terminal to start the MLflow UI."]}),"\n",(0,o.jsxs)(t.li,{children:["Navigate to the ",(0,o.jsx)(t.strong,{children:"Prompts"})," tab in the MLflow UI."]}),"\n",(0,o.jsxs)(t.li,{children:["Click on the ",(0,o.jsx)(t.strong,{children:"Create Prompt"})," button."]}),"\n",(0,o.jsx)(t.li,{children:"Fill in the prompt details such as name, prompt template text, and commit message (optional)."}),"\n",(0,o.jsxs)(t.li,{children:["Click ",(0,o.jsx)(t.strong,{children:"Create"})," to register the prompt."]}),"\n"]}),(0,o.jsx)(t.admonition,{type:"note",children:(0,o.jsxs)(t.p,{children:["Prompt template text can contain variables in ",(0,o.jsx)(t.code,{children:"{{variable}}"})," format. These variables can be filled with dynamic content when using the prompt in your GenAI application. MLflow also provides a ",(0,o.jsx)(t.a,{href:"/prompts/#q-can-i-use-prompt-templates-with-frameworks-like-langchain-or-llamaindex",children:"utility method"}),"\nto convert template into single brace format for frameworks like LangChain or LlamaIndex."]})})]})}),(0,o.jsx)(s.A,{value:"python",label:"Python",default:!0,children:(0,o.jsxs)("div",{class:"flex-column",children:[(0,o.jsxs)(t.p,{children:["To create a new prompt using the Python API, use ",(0,o.jsx)(l.B,{fn:"mlflow.register_prompt"})," API:"]}),(0,o.jsx)(t.pre,{children:(0,o.jsx)(t.code,{className:"language-python",children:'import mlflow\n\n# Use double curly braces for variables in the template\ninitial_template = """\\\nSummarize content you are provided with in {{ num_sentences }} sentences.\n\nSentences: {{ sentences }}\n"""\n\n# Register a new prompt\nprompt = mlflow.register_prompt(\n    name="summarization-prompt",\n    template=initial_template,\n    # Optional: Provide a commit message to describe the changes\n    commit_message="Initial commit",\n    # Optional: Specify any additional metadata about the prompt version\n    version_metadata={\n        "author": "author@example.com",\n    },\n    # Optional: Set tags applies to the prompt (across versions)\n    tags={\n        "task": "summarization",\n        "language": "en",\n    },\n)\n\n# The prompt object contains information about the registered prompt\nprint(f"Created prompt \'{prompt.name}\' (version {prompt.version})")\n'})})]})})]}),"\n",(0,o.jsx)(t.p,{children:"This creates a new prompt with the specified template text and metadata. The prompt is now available in the MLflow UI for further management."}),"\n",(0,o.jsx)("div",{style:{width:"90%",margin:"10px"},children:(0,o.jsx)(t.p,{children:(0,o.jsx)(t.img,{alt:"Registered Prompt in UI",src:n(72406).A+"",width:"1287",height:"616"})})}),"\n",(0,o.jsx)(t.h3,{id:"2-update-the-prompt-with-a-new-version",children:"2. Update the Prompt with a New Version"}),"\n",(0,o.jsxs)(i.A,{children:[(0,o.jsx)(s.A,{value:"ui",label:"UI",default:!0,children:(0,o.jsxs)("div",{class:"flex-column",children:[(0,o.jsx)("div",{style:{width:"70%",margin:"20px"},children:(0,o.jsx)(t.p,{children:(0,o.jsx)(t.img,{alt:"Update Prompt UI",src:n(53296).A+"",width:"1150",height:"594"})})}),(0,o.jsxs)(t.ol,{children:["\n",(0,o.jsxs)(t.li,{children:["The previous step leads to the created prompt page. (If you closed the page, navigate to the ",(0,o.jsx)(t.strong,{children:"Prompts"})," tab in the MLflow UI and click on the prompt name.)"]}),"\n",(0,o.jsxs)(t.li,{children:["Click on the ",(0,o.jsx)(t.strong,{children:"Create prompt Version"})," button."]}),"\n",(0,o.jsx)(t.li,{children:"The popup dialog is pre-filled with the existing prompt text. Modify the prompt as you wish."}),"\n",(0,o.jsxs)(t.li,{children:["Click ",(0,o.jsx)(t.strong,{children:"Create"})," to register the new version."]}),"\n"]})]})}),(0,o.jsx)(s.A,{value:"python",label:"Python",default:!0,children:(0,o.jsxs)("div",{class:"flex-column",children:[(0,o.jsxs)(t.p,{children:["To update an existing prompt with a new version, use the ",(0,o.jsx)(l.B,{fn:"mlflow.register_prompt"})," API with the existing prompt name:"]}),(0,o.jsx)(t.pre,{children:(0,o.jsx)(t.code,{className:"language-python",children:'import mlflow\n\nnew_template = """\\\nYou are an expert summarizer. Condense the following content into exactly {{ num_sentences }} clear and informative sentences that capture the key points.\n\nSentences: {{ sentences }}\n\nYour summary should:\n- Contain exactly {{ num_sentences }} sentences\n- Include only the most important information\n- Be written in a neutral, objective tone\n- Maintain the same level of formality as the original text\n"""\n\n# Register a new version of an existing prompt\nupdated_prompt = mlflow.register_prompt(\n    name="summarization-prompt",  # Specify the existing prompt name\n    template=new_template,\n    commit_message="Improvement",\n    version_metadata={\n        "author": "author@example.com",\n    },\n)\n'})})]})})]}),"\n",(0,o.jsx)(t.h3,{id:"3-compare-the-prompt-versions",children:"3. Compare the Prompt Versions"}),"\n",(0,o.jsxs)(t.p,{children:["Once you have multiple versions of a prompt, you can compare them to understand the changes between versions. To compare prompt versions in the MLflow UI, click on the ",(0,o.jsx)(t.strong,{children:"Compare"})," tab in the prompt details page:"]}),"\n",(0,o.jsx)("div",{style:{width:"90%",margin:"10px"},children:(0,o.jsx)(t.p,{children:(0,o.jsx)(t.img,{alt:"Compare Prompt Versions",src:n(2371).A+"",width:"1267",height:"713"})})}),"\n",(0,o.jsx)(t.h3,{id:"4-load-and-use-the-prompt",children:"4. Load and Use the Prompt"}),"\n",(0,o.jsxs)(t.p,{children:["To use a prompt in your GenAI application, you can load it with the ",(0,o.jsx)(l.B,{fn:"mlflow.load_prompt"})," API and fill in the variables using the ",(0,o.jsx)(l.B,{fn:"mlflow.entities.Prompt.format"})," method of the prompt object:"]}),"\n",(0,o.jsx)(t.pre,{children:(0,o.jsx)(t.code,{className:"language-python",children:'import mlflow\nimport openai\n\ntarget_text = """\nMLflow is an open source platform for managing the end-to-end machine learning lifecycle.\nIt tackles four primary functions in the ML lifecycle: Tracking experiments, packaging ML\ncode for reuse, managing and deploying models, and providing a central model registry.\nMLflow currently offers these functions as four components: MLflow Tracking,\nMLflow Projects, MLflow Models, and MLflow Registry.\n"""\n\n# Load the prompt\nprompt = mlflow.load_prompt("prompts:/summarization-prompt/2")\n\n# Use the prompt with an LLM\nclient = openai.OpenAI()\nresponse = client.chat.completions.create(\n    messages=[\n        {\n            "role": "user",\n            "content": prompt.format(num_sentences=1, sentences=target_text),\n        }\n    ],\n    model="gpt-4o-mini",\n)\n\nprint(response.choices[0].message.content)\n'})}),"\n",(0,o.jsx)(t.h3,{id:"5-search-prompts",children:"5. Search Prompts"}),"\n",(0,o.jsx)(t.p,{children:"You can discover prompts by name, tag or other registry fields:"}),"\n",(0,o.jsx)(i.A,{children:(0,o.jsx)(s.A,{value:"python",label:"Python",default:!0,children:(0,o.jsx)(t.pre,{children:(0,o.jsx)(t.code,{className:"language-python",children:'import mlflow\n\n# Fluent API: returns a flat list of all matching prompts\nprompts = mlflow.search_prompts(filter_string="task=\'summarization\'")\nprint(f"Found {len(prompts)} prompts")\n\n# For pagination control, use the client API:\nfrom mlflow.tracking import MlflowClient\n\nclient = MlflowClient()\nall_prompts = []\ntoken = None\nwhile True:\n    page = client.search_prompts(\n        filter_string="task=\'summarization\'",\n        max_results=50,\n        page_token=token,\n    )\n    all_prompts.extend(page)\n    token = page.token\n    if not token:\n        break\nprint(f"Total prompts across pages: {len(all_prompts)}")\n'})})})}),"\n",(0,o.jsx)(t.h2,{id:"prompt-object",children:"Prompt Object"}),"\n",(0,o.jsxs)(t.p,{children:["The ",(0,o.jsx)(t.code,{children:"Prompt"})," object is the core entity in MLflow Prompt Registry. It represents a versioned template text that can contain variables for dynamic content."]}),"\n",(0,o.jsx)(t.p,{children:"Key attributes of a Prompt object:"}),"\n",(0,o.jsxs)(t.ul,{children:["\n",(0,o.jsxs)(t.li,{children:[(0,o.jsx)(t.code,{children:"Name"}),": A unique identifier for the prompt."]}),"\n",(0,o.jsxs)(t.li,{children:[(0,o.jsx)(t.code,{children:"Template"}),": The text of the prompt, which can include variables in ",(0,o.jsx)(t.code,{children:"{{variable}}"})," format."]}),"\n",(0,o.jsxs)(t.li,{children:[(0,o.jsx)(t.code,{children:"Version"}),": A sequential number representing the revision of the prompt."]}),"\n",(0,o.jsxs)(t.li,{children:[(0,o.jsx)(t.code,{children:"Commit Message"}),": A description of the changes made in the prompt version, similar to Git commit messages."]}),"\n",(0,o.jsxs)(t.li,{children:[(0,o.jsx)(t.code,{children:"Version Metadata"}),": Optional key-value pairs for adding metadata to the prompt version. For example, you may use this for tracking the author of the prompt version."]}),"\n",(0,o.jsxs)(t.li,{children:[(0,o.jsx)(t.code,{children:"Tags"}),": Optional key-value pairs assigned at the prompt level (across versions)\nfor categorization and filtering. For example, you may add tags for project name, language, etc, which apply to all versions of the prompt."]}),"\n",(0,o.jsxs)(t.li,{children:[(0,o.jsx)(t.code,{children:"Alias"}),": An mutable named reference to the prompt. For example, you can create an alias named ",(0,o.jsx)(t.code,{children:"production"})," to refer to the version used in your production system. See ",(0,o.jsx)(t.a,{href:"/prompts/cm#aliases",children:"Aliases"})," for more details."]}),"\n"]}),"\n",(0,o.jsx)(t.h2,{id:"faq",children:"FAQ"}),"\n",(0,o.jsx)(t.h4,{id:"q-how-do-i-delete-a-prompt-version",children:"Q: How do I delete a prompt version?"}),"\n",(0,o.jsx)(t.p,{children:"A: You can delete a prompt version using the MLflow UI or Python API:"}),"\n",(0,o.jsx)(t.pre,{children:(0,o.jsx)(t.code,{className:"language-python",children:'import mlflow\n\n# Delete a prompt version\nmlflow.delete_prompt("summarization-prompt", version=2)\n'})}),"\n",(0,o.jsx)(t.p,{children:"To avoid accidental deletion, you can only delete one version at a time via API. If you delete the all versions of a prompt, the prompt itself will be deleted."}),"\n",(0,o.jsx)(t.h4,{id:"q-can-i-update-the-prompt-template-of-an-existing-prompt-version",children:"Q: Can I update the prompt template of an existing prompt version?"}),"\n",(0,o.jsx)(t.p,{children:"A: No, prompt versions are immutable once created. To update a prompt, create a new version with the desired changes."}),"\n",(0,o.jsx)(t.h4,{id:"q-can-i-use-prompt-templates-with-frameworks-like-langchain-or-llamaindex",children:"Q: Can I use prompt templates with frameworks like LangChain or LlamaIndex?"}),"\n",(0,o.jsxs)(t.p,{children:["A: Yes, you can load prompts from MLflow and use them with any framework. For example, the following example demonstrates how to use a prompt registered in MLflow with LangChain. Also refer to ",(0,o.jsx)(t.a,{href:"/prompts/run-and-model#example-1-logging-prompts-with-langchain",children:"Logging Prompts with LangChain"})," for more details."]}),"\n",(0,o.jsx)(t.pre,{children:(0,o.jsx)(t.code,{className:"language-python",children:"import mlflow\nfrom langchain.prompts import PromptTemplate\n\n# Load prompt from MLflow\nprompt = mlflow.load_prompt(\"question_answering\")\n\n# Convert the prompt to single brace format for LangChain (MLflow uses double braces),\n# using the `to_single_brace_format` method.\nlangchain_prompt = PromptTemplate.from_template(prompt.to_single_brace_format())\nprint(langchain_prompt.input_variables)\n# Output: ['num_sentences', 'sentences']\n"})}),"\n",(0,o.jsx)(t.h4,{id:"q-is-prompt-registry-integrated-with-the-prompt-engineering-ui",children:"Q: Is Prompt Registry integrated with the Prompt Engineering UI?"}),"\n",(0,o.jsx)(t.p,{children:"A. Direct integration between the Prompt Registry and the Prompt Engineering UI is coming soon. In the meantime, you can iterate on prompt template in the Prompt Engineering UI and register the final version in the Prompt Registry by manually copying the prompt template."})]})}function f(e={}){const{wrapper:t}={...(0,a.R)(),...e.components};return t?(0,o.jsx)(t,{...e,children:(0,o.jsx)(d,{...e})}):d(e)}}}]);