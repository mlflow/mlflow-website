"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[574],{16734:(e,n,t)=>{t.d(n,{d:()=>s});var i=t(58069);const o="codeBlock_oJcR";var r=t(74848);const s=e=>{let{children:n,executionCount:t}=e;return(0,r.jsx)("div",{style:{flexGrow:1,minWidth:0,marginTop:"var(--padding-md)",width:"100%"},children:(0,r.jsx)(i.A,{className:o,language:"python",children:n})})}},20723:(e,n,t)=>{t.d(n,{O:()=>r});var i=t(96540),o=t(74848);function r(e){let{children:n,href:t}=e;const r=(0,i.useCallback)((async e=>{if(e.preventDefault(),window.gtag)try{window.gtag("event","notebook-download",{href:t})}catch{}const n=await fetch(t),i=await n.blob(),o=window.URL.createObjectURL(i),r=document.createElement("a");r.style.display="none",r.href=o;const s=t.split("/").pop();r.download=s,document.body.appendChild(r),r.click(),window.URL.revokeObjectURL(o),document.body.removeChild(r)}),[t]);return(0,o.jsx)("a",{className:"button button--primary",style:{marginBottom:"1rem",display:"block",width:"min-content"},href:t,download:!0,onClick:r,children:n})}},61536:(e,n,t)=>{t.d(n,{p:()=>o});var i=t(74848);const o=e=>{let{children:n,isStderr:t}=e;return(0,i.jsx)("pre",{style:{margin:0,borderRadius:0,background:"none",fontSize:"0.85rem",flexGrow:1,padding:"var(--padding-sm)"},children:n})}},83650:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>h,contentTitle:()=>c,default:()=>p,frontMatter:()=>d,metadata:()=>i,toc:()=>m});const i=JSON.parse('{"id":"llms/transformers/tutorials/translation/component-translation-ipynb","title":"Introduction to Translation with Transformers and MLflow","description":"Download this notebook","source":"@site/docs/llms/transformers/tutorials/translation/component-translation-ipynb.mdx","sourceDirName":"llms/transformers/tutorials/translation","slug":"/llms/transformers/tutorials/translation/component-translation","permalink":"/docs/latest/llms/transformers/tutorials/translation/component-translation","draft":false,"unlisted":false,"editUrl":"https://github.com/mlflow/mlflow/edit/master/docs/docs/llms/transformers/tutorials/translation/component-translation.ipynb","tags":[],"version":"current","frontMatter":{"custom_edit_url":"https://github.com/mlflow/mlflow/edit/master/docs/docs/llms/transformers/tutorials/translation/component-translation.ipynb","slug":"component-translation"},"sidebar":"docsSidebar","previous":{"title":"Introduction to MLflow and Transformers","permalink":"/docs/latest/llms/transformers/tutorials/text-generation/text-generation"},"next":{"title":"Detailed Guide","permalink":"/docs/latest/llms/transformers/guide/"}}');var o=t(74848),r=t(28453),s=t(16734),a=t(61536),l=(t(86563),t(20723));const d={custom_edit_url:"https://github.com/mlflow/mlflow/edit/master/docs/docs/llms/transformers/tutorials/translation/component-translation.ipynb",slug:"component-translation"},c="Introduction to Translation with Transformers and MLflow",h={},m=[{value:"Learning Objectives",id:"learning-objectives",level:3},{value:"Why was this model chosen?",id:"why-was-this-model-chosen",level:3},{value:"Setting Up the Translation Environment",id:"setting-up-the-translation-environment",level:3},{value:"Importing Libraries",id:"importing-libraries",level:4},{value:"Initializing the Model",id:"initializing-the-model",level:4},{value:"Setting Up the Tokenizer",id:"setting-up-the-tokenizer",level:4},{value:"Creating the Pipeline",id:"creating-the-pipeline",level:4},{value:"Testing the Translation Pipeline",id:"testing-the-translation-pipeline",level:3},{value:"Model Verification",id:"model-verification",level:4},{value:"Error Prevention",id:"error-prevention",level:4},{value:"Resource Management",id:"resource-management",level:4},{value:"Pipeline Validation",id:"pipeline-validation",level:4},{value:"Evaluating the Translation Results",id:"evaluating-the-translation-results",level:3},{value:"Setting Model Parameters and Inferring Signature",id:"setting-model-parameters-and-inferring-signature",level:3},{value:"Defining Model Parameters",id:"defining-model-parameters",level:4},{value:"Importance of Inferring Signature",id:"importance-of-inferring-signature",level:4},{value:"Benefits of This Process",id:"benefits-of-this-process",level:4},{value:"Reviewing the Model Signature",id:"reviewing-the-model-signature",level:3},{value:"Creating an experiment",id:"creating-an-experiment",level:3},{value:"Logging the Model with MLflow",id:"logging-the-model-with-mlflow",level:3},{value:"Starting an MLflow Run",id:"starting-an-mlflow-run",level:4},{value:"Using <code>mlflow.transformers.log_model</code>",id:"using-mlflowtransformerslog_model",level:4},{value:"Outcome of Model Logging",id:"outcome-of-model-logging",level:4},{value:"Inspecting the Loaded Model Components",id:"inspecting-the-loaded-model-components",level:3},{value:"Component Breakdown",id:"component-breakdown",level:4},{value:"Ensuring Component Integrity and Functionality",id:"ensuring-component-integrity-and-functionality",level:4},{value:"Understanding Model Flavors in MLflow",id:"understanding-model-flavors-in-mlflow",level:3},{value:"Evaluating the Translation Output",id:"evaluating-the-translation-output",level:3},{value:"Assessing Translation Nuances",id:"assessing-translation-nuances",level:4},{value:"Contextual Understanding",id:"contextual-understanding",level:4},{value:"The Importance of Rigorous Testing",id:"the-importance-of-rigorous-testing",level:4},{value:"Assessing the Reconstructed Pipeline&#39;s Translation",id:"assessing-the-reconstructed-pipelines-translation",level:3},{value:"Reconstruction and Testing",id:"reconstruction-and-testing",level:4},{value:"Translation Quality",id:"translation-quality",level:4},{value:"Verifying Model Integrity",id:"verifying-model-integrity",level:4},{value:"Direct Utilization of Model Components",id:"direct-utilization-of-model-components",level:3},{value:"Component Interaction",id:"component-interaction",level:4},{value:"Insight into Model Structure",id:"insight-into-model-structure",level:4},{value:"Benefits of Component-Level Control",id:"benefits-of-component-level-control",level:4},{value:"Advanced Usage: Direct Interaction with Model Components",id:"advanced-usage-direct-interaction-with-model-components",level:3},{value:"Tutorial Recap",id:"tutorial-recap",level:3},{value:"The Power of MLflow and Model Metadata",id:"the-power-of-mlflow-and-model-metadata",level:3},{value:"Reflection on the Translation Output",id:"reflection-on-the-translation-output",level:3},{value:"Conclusion",id:"conclusion",level:3}];function u(e){const n={a:"a",code:"code",h1:"h1",h3:"h3",h4:"h4",header:"header",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,r.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(n.header,{children:(0,o.jsx)(n.h1,{id:"introduction-to-translation-with-transformers-and-mlflow",children:"Introduction to Translation with Transformers and MLflow"})}),"\n",(0,o.jsx)(l.O,{href:"https://raw.githubusercontent.com/mlflow/mlflow/master/docs/docs/llms/transformers/tutorials/translation/component-translation.ipynb",children:"Download this notebook"}),"\n",(0,o.jsxs)(n.p,{children:["In this tutorial, we delve into the world of language translation by leveraging the power of ",(0,o.jsx)(n.a,{href:"https://huggingface.co/docs/transformers",children:"Transformers"})," and MLflow. This guide is crafted for practitioners with a grasp of machine learning concepts who seek to streamline their translation model workflows. We will showcase the use of MLflow to log, manage, and serve a cutting-edge translation model - the ",(0,o.jsx)(n.code,{children:"google/flan-t5-base"})," from the ",(0,o.jsx)(n.a,{href:"https://huggingface.co/",children:"\ud83e\udd17 Hugging Face"})," library."]}),"\n",(0,o.jsx)(n.h3,{id:"learning-objectives",children:"Learning Objectives"}),"\n",(0,o.jsx)(n.p,{children:"Throughout this tutorial, you will:"}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsxs)(n.li,{children:["Construct a translation ",(0,o.jsx)(n.strong,{children:"pipeline"})," using ",(0,o.jsx)(n.code,{children:"flan-t5-base"})," from the Transformers library."]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"Log"})," the translation model and its configurations using MLflow."]}),"\n",(0,o.jsxs)(n.li,{children:["Determine the input and output ",(0,o.jsx)(n.strong,{children:"signature"})," of the translation model automatically."]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"Retrieve"})," a logged translation model from MLflow for direct interaction."]}),"\n",(0,o.jsxs)(n.li,{children:["Emulate the deployment of the translation model using MLflow's ",(0,o.jsx)(n.strong,{children:"pyfunc"})," model flavor for language translation tasks."]}),"\n"]}),"\n",(0,o.jsx)(n.p,{children:"By the conclusion of this tutorial, you'll gain a thorough insight into managing and deploying translation models with MLflow, thereby enhancing your machine learning operations for language processing."}),"\n",(0,o.jsx)(n.h3,{id:"why-was-this-model-chosen",children:"Why was this model chosen?"}),"\n",(0,o.jsxs)(n.p,{children:["The ",(0,o.jsx)(n.a,{href:"https://huggingface.co/google/flan-t5-base",children:"flan-t5-base"})," offers a few benefits:"]}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"Size"}),": it's a relatively small model for the comparatively powerful performance."]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"Enhanced Language Coverage"}),": Expanding on the original ",(0,o.jsx)(n.a,{href:"https://huggingface.co/t5-base",children:"T5 model"}),", the flan-t5 has a much larger breadth of languages that it supports."]}),"\n"]}),"\n",(0,o.jsx)(n.h3,{id:"setting-up-the-translation-environment",children:"Setting Up the Translation Environment"}),"\n",(0,o.jsx)(n.p,{children:"Begin by setting up the essential components for translation tasks using the google/flan-t5-base model."}),"\n",(0,o.jsx)(n.h4,{id:"importing-libraries",children:"Importing Libraries"}),"\n",(0,o.jsxs)(n.p,{children:["We import the ",(0,o.jsx)(n.code,{children:"transformers"})," library for access to the translation model and tokenizer. Additionally, ",(0,o.jsx)(n.code,{children:"mlflow"})," is included for model tracking and management, creating a comprehensive environment for our translation tasks."]}),"\n",(0,o.jsx)(n.h4,{id:"initializing-the-model",children:"Initializing the Model"}),"\n",(0,o.jsxs)(n.p,{children:["The ",(0,o.jsx)(n.code,{children:"google/flan-t5-base"})," model, known for its translation effectiveness, is loaded from the Hugging Face repository. This pre-trained model is a key component of our setup."]}),"\n",(0,o.jsx)(n.h4,{id:"setting-up-the-tokenizer",children:"Setting Up the Tokenizer"}),"\n",(0,o.jsx)(n.p,{children:"We initialize the tokenizer corresponding to our model. The tokenizer plays a critical role in processing text input, making it understandable for the model."}),"\n",(0,o.jsx)(n.h4,{id:"creating-the-pipeline",children:"Creating the Pipeline"}),"\n",(0,o.jsx)(n.p,{children:"A translation pipeline for English to French is created. This pipeline streamlines the process, allowing us to focus on inputting text and receiving translations without managing model and tokenizer interactions directly."}),"\n",(0,o.jsx)(s.d,{executionCount:1,children:'# Disable tokenizers warnings when constructing pipelines\n%env TOKENIZERS_PARALLELISM=false\n\nimport warnings\n\n# Disable a few less-than-useful UserWarnings from setuptools and pydantic\nwarnings.filterwarnings("ignore", category=UserWarning)'}),"\n",(0,o.jsx)(a.p,{children:"env: TOKENIZERS_PARALLELISM=false"}),"\n",(0,o.jsx)(s.d,{executionCount:2,children:'import transformers\n\nimport mlflow\n\nmodel_architecture = "google/flan-t5-base"\n\ntranslation_pipeline = transformers.pipeline(\n  task="translation_en_to_fr",\n  model=transformers.T5ForConditionalGeneration.from_pretrained(\n      model_architecture, max_length=1000\n  ),\n  tokenizer=transformers.T5TokenizerFast.from_pretrained(model_architecture, return_tensors="pt"),\n)'}),"\n",(0,o.jsx)(n.h3,{id:"testing-the-translation-pipeline",children:"Testing the Translation Pipeline"}),"\n",(0,o.jsx)(n.p,{children:"We perform a preliminary check on our translation pipeline to ensure its proper functioning before logging it with MLflow."}),"\n",(0,o.jsx)(n.h4,{id:"model-verification",children:"Model Verification"}),"\n",(0,o.jsx)(n.p,{children:"A test translation allows us to verify that the model accurately translates text, in this case from English to French, ensuring the model's basic functionality."}),"\n",(0,o.jsx)(n.h4,{id:"error-prevention",children:"Error Prevention"}),"\n",(0,o.jsx)(n.p,{children:"Identifying potential issues before model logging helps prevent future errors during deployment or inference, saving time and resources."}),"\n",(0,o.jsx)(n.h4,{id:"resource-management",children:"Resource Management"}),"\n",(0,o.jsx)(n.p,{children:"Testing minimizes wasteful use of resources, particularly important given the large size of these models and the resources needed to save and load them."}),"\n",(0,o.jsx)(n.h4,{id:"pipeline-validation",children:"Pipeline Validation"}),"\n",(0,o.jsx)(n.p,{children:"This step confirms that both the model and tokenizer in the pipeline are correctly configured and capable of processing the input as expected."}),"\n",(0,o.jsx)(s.d,{executionCount:3,children:'# Evaluate the pipeline on a sample sentence prior to logging\ntranslation_pipeline(\n  "translate English to French: I enjoyed my slow saunter along the Champs-\xc9lys\xe9es."\n)'}),"\n",(0,o.jsx)(a.p,{children:"[{'translation_text': \"J'ai appr\xe9ci\xe9 mon sajour lente sur les Champs-\xc9lys\xe9es.\"}]"}),"\n",(0,o.jsx)(n.h3,{id:"evaluating-the-translation-results",children:"Evaluating the Translation Results"}),"\n",(0,o.jsx)(n.p,{children:"Upon running our initial translation through the pipeline, we observed that the output, while generally accurate, exhibited areas for improvement."}),"\n",(0,o.jsx)(n.p,{children:"The initial translation output was:"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-text",children:"    `[{'translation_text': \"J'ai appr\xe9ci\xe9 mon sajour lente sur les Champs-\xc9lys\xe9es.\"}]`\n"})}),"\n",(0,o.jsx)(n.p,{children:"This translation captures the essence of the original English sentence but shows minor grammatical errors and word choice issues. For instance, a more refined translation might be:"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-text",children:'    `"J\'ai appr\xe9ci\xe9 ma lente promenade le long des Champs-\xc9lys\xe9es."`\n'})}),"\n",(0,o.jsx)(n.p,{children:"This version corrects grammatical gender and adds necessary articles, accentuation, and hyphenation. These subtle nuances enhance the translation quality significantly.\nThe base model's performance is encouraging, indicating the potential for more precise translations with further fine-tuning and context. MLflow's tracking and management capabilities will be instrumental in monitoring the iterative improvements of such models."}),"\n",(0,o.jsx)(n.p,{children:"In summary, while the pursuit of perfection in machine translation is ongoing, the initial results are a promising step towards achieving natural and accurate translations."}),"\n",(0,o.jsx)(n.h3,{id:"setting-model-parameters-and-inferring-signature",children:"Setting Model Parameters and Inferring Signature"}),"\n",(0,o.jsx)(n.p,{children:"We establish crucial model parameters and infer the signature to ensure consistency and reliability in our model's deployment."}),"\n",(0,o.jsx)(n.h4,{id:"defining-model-parameters",children:"Defining Model Parameters"}),"\n",(0,o.jsxs)(n.p,{children:["Setting key parameters like ",(0,o.jsx)(n.code,{children:"max_length"})," is vital for controlling model behavior during inference. For example, a ",(0,o.jsx)(n.code,{children:"max_length"})," of 1000 ensures the model handles longer sentences effectively, crucial for maintaining context in translations."]}),"\n",(0,o.jsx)(n.h4,{id:"importance-of-inferring-signature",children:"Importance of Inferring Signature"}),"\n",(0,o.jsx)(n.p,{children:"The signature, defining the model's input and output schema, is critical for MLflow's understanding of the expected data structures. By inferring this signature, we document the types and structures of data that the model works with, enhancing its reliability and portability."}),"\n",(0,o.jsx)(n.h4,{id:"benefits-of-this-process",children:"Benefits of This Process"}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"Enhanced Portability"}),": Properly defined parameters and signatures make the model more adaptable to different environments."]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"Error Reduction"}),": This step minimizes the risk of encountering schema-related errors during deployment."]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"Clear Documentation"}),": It serves as a clear guide for developers and users, simplifying the model's integration into applications."]}),"\n"]}),"\n",(0,o.jsx)(n.p,{children:"By establishing these parameters and signature, we lay a robust foundation for our model's subsequent tracking, management, and serving via MLflow."}),"\n",(0,o.jsx)(s.d,{executionCount:4,children:'# Define the parameters that we are permitting to be used at inference time, along with their default values if not overridden\nmodel_params = {"max_length": 1000}\n\n# Generate the model signature by providing an input, the expected output, and (optionally), parameters available for overriding at inference time\nsignature = mlflow.models.infer_signature(\n  "This is a sample input sentence.",\n  mlflow.transformers.generate_signature_output(translation_pipeline, "This is another sample."),\n  params=model_params,\n)'}),"\n",(0,o.jsx)(n.h3,{id:"reviewing-the-model-signature",children:"Reviewing the Model Signature"}),"\n",(0,o.jsx)(n.p,{children:"After configuring the translation model and inferring its signature, it's crucial to review the signature to confirm it matches our model's input and output structures."}),"\n",(0,o.jsx)(n.p,{children:"The model signature serves as a blueprint for MLflow to interact with the model, encompassing:"}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"Inputs:"})," The expected input types, such as a string for the text to be translated."]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"Outputs:"})," The output data types, which in our case is a string representing the translated text."]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"Parameters:"})," Additional configurable settings like ",(0,o.jsx)(n.code,{children:"max_length"}),", determining the maximum length of the translation output."]}),"\n"]}),"\n",(0,o.jsxs)(n.p,{children:["Reviewing the signature through the ",(0,o.jsx)(n.code,{children:"signature"})," command allows us to validate the data formats and ensure that our model will function as expected when deployed. This step is vital for consistent model performance and avoiding errors in a production environment.\nFurthermore, the inclusion of parameters in the signature with default values ensures that any modifications during inference are deliberate and well-documented, contributing to the model's predictability and transparency."]}),"\n",(0,o.jsx)(s.d,{executionCount:5,children:"# Visualize the model signature\nsignature"}),"\n",(0,o.jsx)(a.p,{children:"inputs: \n[string]\noutputs: \n[string]\nparams: \n['max_length': long (default: 1000)]"}),"\n",(0,o.jsx)(n.h3,{id:"creating-an-experiment",children:"Creating an experiment"}),"\n",(0,o.jsx)(n.p,{children:"We create a new MLflow Experiment so that the run we're going to log our model to does not log to the default experiment and instead has its own contextually relevant entry."}),"\n",(0,o.jsx)(s.d,{executionCount:6,children:'# If you are running this tutorial in local mode, leave the next line commented out.\n# Otherwise, uncomment the following line and set your tracking uri to your local or remote tracking server.\n\n# mlflow.set_tracking_uri("http://127.0.0.1:8080")\n\nmlflow.set_experiment("Translation")'}),"\n",(0,o.jsx)(a.p,{children:"<Experiment: artifact_location='file:///Users/benjamin.wilson/repos/mlflow-fork/mlflow/docs/source/llms/transformers/tutorials/translation/mlruns/996217394074032926', creation_time=1701286351921, experiment_id='996217394074032926', last_update_time=1701286351921, lifecycle_stage='active', name='Translation', tags={}>"}),"\n",(0,o.jsx)(n.h3,{id:"logging-the-model-with-mlflow",children:"Logging the Model with MLflow"}),"\n",(0,o.jsx)(n.p,{children:"We are now set to log our translation model with MLflow, ensuring its trackability and version control."}),"\n",(0,o.jsx)(n.h4,{id:"starting-an-mlflow-run",children:"Starting an MLflow Run"}),"\n",(0,o.jsx)(n.p,{children:"We initiate the logging process by starting an MLflow run. This encapsulates all the model information, including artifacts and parameters, within a unique run ID."}),"\n",(0,o.jsxs)(n.h4,{id:"using-mlflowtransformerslog_model",children:["Using ",(0,o.jsx)(n.code,{children:"mlflow.transformers.log_model"})]}),"\n",(0,o.jsx)(n.p,{children:"This function is integral to logging our model in MLflow. It records various aspects of the model:"}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"Model Pipeline"}),": The complete translation model pipeline, encompassing the model and tokenizer."]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"Artifact Path"}),": The directory path in the MLflow run where the model artifacts are stored."]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"Model Signature"}),": The pre-defined signature indicating the model's expected input-output formats."]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"Model Parameters"}),": Key parameters of the model, like ",(0,o.jsx)(n.code,{children:"max_length"}),", providing insights into model behavior."]}),"\n"]}),"\n",(0,o.jsx)(n.h4,{id:"outcome-of-model-logging",children:"Outcome of Model Logging"}),"\n",(0,o.jsxs)(n.p,{children:["Post logging, we obtain the ",(0,o.jsx)(n.code,{children:"model_info"})," object, which encompasses all the essential metadata about the logged model, such as its storage location. This metadata is vital for future deployment and performance analysis."]}),"\n",(0,o.jsx)(s.d,{executionCount:7,children:'with mlflow.start_run():\n  model_info = mlflow.transformers.log_model(\n      transformers_model=translation_pipeline,\n      name="french_translator",\n      signature=signature,\n      model_params=model_params,\n  )'}),"\n",(0,o.jsx)(n.h3,{id:"inspecting-the-loaded-model-components",children:"Inspecting the Loaded Model Components"}),"\n",(0,o.jsx)(n.p,{children:"After loading the model from MLflow, we delve into its individual components to verify their setup and functionality."}),"\n",(0,o.jsx)(n.h4,{id:"component-breakdown",children:"Component Breakdown"}),"\n",(0,o.jsx)(n.p,{children:"The loaded model comprises several key components, each playing a crucial role in its operation:"}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"Task"}),": Defines the model's specific use-case, confirming its suitability for the intended task."]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"Device Map"}),": Details the hardware configuration, important for performance optimization."]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"Model Instance"}),": The core ",(0,o.jsx)(n.code,{children:"T5ForConditionalGeneration"})," model, central to the translation process."]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"Tokenizer"}),": The ",(0,o.jsx)(n.code,{children:"T5TokenizerFast"}),", responsible for processing text inputs into a format understandable by the model."]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"Framework"}),": Indicates the underlying deep learning framework, essential for compatibility considerations."]}),"\n"]}),"\n",(0,o.jsx)(n.h4,{id:"ensuring-component-integrity-and-functionality",children:"Ensuring Component Integrity and Functionality"}),"\n",(0,o.jsx)(n.p,{children:"Inspecting these components ensures that:"}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsx)(n.li,{children:"The model aligns with our task requirements."}),"\n",(0,o.jsx)(n.li,{children:"Hardware resources are optimally utilized."}),"\n",(0,o.jsx)(n.li,{children:"Text inputs are correctly preprocessed for model consumption."}),"\n",(0,o.jsx)(n.li,{children:"The model's compatibility with the selected deep learning framework is confirmed."}),"\n"]}),"\n",(0,o.jsx)(n.p,{children:"This verification step is vital for the successful application of the model in practical scenarios, reinforcing the robustness and flexibility of MLflow."}),"\n",(0,o.jsx)(s.d,{executionCount:8,children:'# Load our saved model as a dictionary of components, comprising the model itself, the tokenizer, and any other components that were saved\ntranslation_components = mlflow.transformers.load_model(\n  model_info.model_uri, return_type="components"\n)\n\n# Show the components that made up our pipeline that we saved and what type each are\nfor key, value in translation_components.items():\n  print(f"{key} -> {type(value).__name__}")'}),"\n",(0,o.jsx)(a.p,{isStderr:!0,children:"2023/11/30 12:00:44 INFO mlflow.transformers: 'runs:/2357c12ca17a4f328b2f72cbb7d70343/french_translator' resolved as 'file:///Users/benjamin.wilson/repos/mlflow-fork/mlflow/docs/source/llms/transformers/tutorials/translation/mlruns/996217394074032926/2357c12ca17a4f328b2f72cbb7d70343/artifacts/french_translator'"}),"\n",(0,o.jsx)(a.p,{children:"Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s]"}),"\n",(0,o.jsx)(a.p,{children:"task -> str\ndevice_map -> str\nmodel -> T5ForConditionalGeneration\ntokenizer -> T5TokenizerFast\nframework -> str"}),"\n",(0,o.jsx)(n.h3,{id:"understanding-model-flavors-in-mlflow",children:"Understanding Model Flavors in MLflow"}),"\n",(0,o.jsxs)(n.p,{children:["The ",(0,o.jsx)(n.code,{children:"model_info.flavors"})," attribute in MLflow provides insights into the model's capabilities and deployment requirements across various platforms."]}),"\n",(0,o.jsx)(n.p,{children:"Flavors in MLflow represent different ways the model can be utilized and deployed. Key aspects include:"}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"Python Function Flavor:"})," Indicates the model's compatibility as a generic Python function, including model binary, loader module, Python version, and environment specifications."]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"Transformers Flavor:"})," Tailored for models from the Hugging Face Transformers library, covering transformers version, code dependencies, task, instance type, source model name, pipeline model type, framework, tokenizer type, components, and model binary."]}),"\n"]}),"\n",(0,o.jsx)(n.p,{children:"This information guides how to interact with the model within MLflow, ensuring proper deployment with the right environment and dependencies, whether for inference or further model refinement."}),"\n",(0,o.jsx)(s.d,{executionCount:9,children:"# Show the model parameters that were saved with our model to gain an understanding of what is recorded when saving a transformers pipeline\nmodel_info.flavors"}),"\n",(0,o.jsx)(a.p,{children:"{'python_function': {'model_binary': 'model',\n'loader_module': 'mlflow.transformers',\n'python_version': '3.8.13',\n'env': {'conda': 'conda.yaml', 'virtualenv': 'python_env.yaml'}},\n'transformers': {'transformers_version': '4.34.1',\n'code': None,\n'task': 'translation_en_to_fr',\n'instance_type': 'TranslationPipeline',\n'source_model_name': 'google/flan-t5-base',\n'pipeline_model_type': 'T5ForConditionalGeneration',\n'framework': 'pt',\n'tokenizer_type': 'T5TokenizerFast',\n'components': ['tokenizer'],\n'model_binary': 'model'}}"}),"\n",(0,o.jsx)(n.h3,{id:"evaluating-the-translation-output",children:"Evaluating the Translation Output"}),"\n",(0,o.jsx)(n.p,{children:"After testing our pipeline with a challenging sentence, we assess the translation's accuracy."}),"\n",(0,o.jsx)(n.h4,{id:"assessing-translation-nuances",children:"Assessing Translation Nuances"}),"\n",(0,o.jsx)(n.p,{children:'The model impressively interprets "Nice" correctly as a city name, rather than an adjective. This shows its ability to discern context and proper nouns. Furthermore, it cleverly substitutes the English play on words with the French adjective "bien," maintaining the sentence\'s intended sentiment.'}),"\n",(0,o.jsx)(n.h4,{id:"contextual-understanding",children:"Contextual Understanding"}),"\n",(0,o.jsx)(n.p,{children:"This translation exemplifies the model's strength in understanding context and language subtleties, which is essential for practical applications where precision and contextual accuracy are key."}),"\n",(0,o.jsx)(n.h4,{id:"the-importance-of-rigorous-testing",children:"The Importance of Rigorous Testing"}),"\n",(0,o.jsx)(n.p,{children:"Testing with linguistically complex sentences is vital. It ensures the model can handle various linguistic challenges, an important aspect of deploying models in real-world scenarios."}),"\n",(0,o.jsx)(s.d,{executionCount:10,children:'# Load our saved model as a transformers pipeline and validate the performance for a simple translation task\ntranslation_pipeline = mlflow.transformers.load_model(model_info.model_uri)\nresponse = translation_pipeline("I have heard that Nice is nice this time of year.")\n\nprint(response)'}),"\n",(0,o.jsx)(a.p,{isStderr:!0,children:"2023/11/30 12:00:45 INFO mlflow.transformers: 'runs:/2357c12ca17a4f328b2f72cbb7d70343/french_translator' resolved as 'file:///Users/benjamin.wilson/repos/mlflow-fork/mlflow/docs/source/llms/transformers/tutorials/translation/mlruns/996217394074032926/2357c12ca17a4f328b2f72cbb7d70343/artifacts/french_translator'"}),"\n",(0,o.jsx)(a.p,{children:"Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s]"}),"\n",(0,o.jsx)(a.p,{children:"[{'translation_text': \"J'ai entendu que Nice est bien cette p\xe9riode de l'ann\xe9e.\"}]"}),"\n",(0,o.jsx)(n.h3,{id:"assessing-the-reconstructed-pipelines-translation",children:"Assessing the Reconstructed Pipeline's Translation"}),"\n",(0,o.jsx)(n.p,{children:"We now evaluate the performance of a pipeline reconstructed from loaded components."}),"\n",(0,o.jsx)(n.h4,{id:"reconstruction-and-testing",children:"Reconstruction and Testing"}),"\n",(0,o.jsx)(n.p,{children:"Using the dictionary of loaded components, we successfully reconstruct a new translation pipeline. This step is essential to confirm that our logged and retrieved components function cohesively when reassembled."}),"\n",(0,o.jsx)(n.h4,{id:"translation-quality",children:"Translation Quality"}),"\n",(0,o.jsx)(n.p,{children:"The reconstructed pipeline adeptly translates English into French, maintaining both the syntactic accuracy and semantic coherence of the original sentence. This reflects the Transformers library's ability to simplify the utilization of complex deep learning models."}),"\n",(0,o.jsx)(n.h4,{id:"verifying-model-integrity",children:"Verifying Model Integrity"}),"\n",(0,o.jsx)(n.p,{children:"This test is key in verifying that the saved model and its components are not only retrievable but also function effectively post-deployment. It ensures the continued integrity and performance of the model in practical applications."}),"\n",(0,o.jsx)(s.d,{executionCount:11,children:'# Verify that the components that we loaded can be constructed into a pipeline manually\nreconstructed_pipeline = transformers.pipeline(**translation_components)\n\nreconstructed_response = reconstructed_pipeline(\n  "transformers makes using Deep Learning models easy and fun!"\n)\n\nprint(reconstructed_response)'}),"\n",(0,o.jsx)(a.p,{children:"[{'translation_text': \"transformers simplifie l'utilisation des mod\xe8les de l'apprentissage profonde!\"}]"}),"\n",(0,o.jsx)(n.h3,{id:"direct-utilization-of-model-components",children:"Direct Utilization of Model Components"}),"\n",(0,o.jsx)(n.p,{children:"Explore the granular control over individual model components for custom translation processes."}),"\n",(0,o.jsx)(n.h4,{id:"component-interaction",children:"Component Interaction"}),"\n",(0,o.jsx)(n.p,{children:"Interacting with the model's individual components offers a deeper level of customization. This approach is particularly beneficial when integrating the model into larger systems or when specific manipulations of inputs and outputs are required."}),"\n",(0,o.jsx)(n.h4,{id:"insight-into-model-structure",children:"Insight into Model Structure"}),"\n",(0,o.jsxs)(n.p,{children:["Examining the keys of the ",(0,o.jsx)(n.code,{children:"translation_components"})," dictionary reveals the structure and components of our model. This includes the task, device mapping, core model, tokenizer, and framework information, each crucial for the translation process."]}),"\n",(0,o.jsx)(n.h4,{id:"benefits-of-component-level-control",children:"Benefits of Component-Level Control"}),"\n",(0,o.jsx)(n.p,{children:"Utilizing components individually allows for precise adjustments and custom integrations. It's an effective way to tailor the translation process to specific needs, ensuring more control over the model's behavior and output."}),"\n",(0,o.jsx)(s.d,{executionCount:12,children:"# View the components that were saved with our model\ntranslation_components.keys()"}),"\n",(0,o.jsx)(a.p,{children:"dict_keys(['task', 'device_map', 'model', 'tokenizer', 'framework'])"}),"\n",(0,o.jsx)(n.h3,{id:"advanced-usage-direct-interaction-with-model-components",children:"Advanced Usage: Direct Interaction with Model Components"}),"\n",(0,o.jsx)(n.p,{children:"Direct interaction with a model's components offers flexibility and control for advanced use cases in translation."}),"\n",(0,o.jsx)(n.p,{children:"Using the model and tokenizer components directly, as opposed to the higher-level pipeline, allows for:"}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsx)(n.li,{children:"Customization of the tokenization process."}),"\n",(0,o.jsx)(n.li,{children:"Specific tensor handling, including device specification (CPU, GPU, MPS, etc.)."}),"\n",(0,o.jsx)(n.li,{children:"Generation and adjustment of predictions on-the-fly."}),"\n",(0,o.jsx)(n.li,{children:"Decoding outputs with options for post-processing."}),"\n"]}),"\n",(0,o.jsx)(n.p,{children:"This approach provides granular control, enabling interventions in the model's operations, such as dynamic input adjustments or output post-processing. However, it also increases complexity, requiring a deeper understanding of the model and tokenizer and the management of more code.\nOpting for direct interaction over the pipeline means balancing ease of use against the level of control required for your application. It's a critical decision, especially for advanced scenarios demanding precise manipulation of the translation process."}),"\n",(0,o.jsx)(s.d,{executionCount:13,children:'# Access the individual components from the components dictionary\ntokenizer = translation_components["tokenizer"]\nmodel = translation_components["model"]\n\nquery = "Translate to French: Liberty, equality, fraternity, or death."\n\n# This notebook was run on a Mac laptop, so we\'ll send the output tensor to the "mps" device.\n# If you\'re running this on a different system, ensure that you\'re sending the tensor output to the appropriate device to ensure that\n# the model is able to read it from memory.\ninputs = tokenizer.encode(query, return_tensors="pt").to("mps")\noutputs = model.generate(inputs).to("mps")\nresult = tokenizer.decode(outputs[0])\n\n# Since we\'re not using a pipeline here, we need to modify the output slightly to get only the translated text.\nprint(result.replace("<pad> ", "\n").replace("</s>", ""))'}),"\n",(0,o.jsx)(a.p,{children:"\nLa libert\xe9, l'\xe9galit\xe9, la fraternit\xe9 ou la mort."}),"\n",(0,o.jsx)(n.h3,{id:"tutorial-recap",children:"Tutorial Recap"}),"\n",(0,o.jsx)(n.p,{children:"This tutorial provided insights into combining MLflow with advanced language translation models, emphasizing streamlined model management and deployment."}),"\n",(0,o.jsx)(n.p,{children:"We explored several key aspects:"}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsx)(n.li,{children:"Setting up and testing a translation pipeline using Transformers."}),"\n",(0,o.jsx)(n.li,{children:"Logging the model and its configurations to MLflow for effective versioning and tracking."}),"\n",(0,o.jsx)(n.li,{children:"Inferring and examining the model's signature for ensuring input and output consistency."}),"\n",(0,o.jsx)(n.li,{children:"Interacting with logged model components for enhanced flexibility in deployment."}),"\n",(0,o.jsx)(n.li,{children:"Discussing the nuances of language translation and the role of context in achieving accurate results."}),"\n"]}),"\n",(0,o.jsx)(n.h3,{id:"the-power-of-mlflow-and-model-metadata",children:"The Power of MLflow and Model Metadata"}),"\n",(0,o.jsx)(n.p,{children:"MLflow's integration proved instrumental in managing and deploying the translation model. The tutorial highlighted how MLflow's metadata, including the model's signature and flavors, aids in consistent and reliable deployment, catering to production needs."}),"\n",(0,o.jsx)(n.h3,{id:"reflection-on-the-translation-output",children:"Reflection on the Translation Output"}),"\n",(0,o.jsxs)(n.p,{children:["The final translation output, while not exact, captured the essence of the iconic French motto, highlighting the model's effectiveness and the importance of contextual understanding in translations. Further exploration on the cultural significance of the phrase can be found on its ",(0,o.jsx)(n.a,{href:"https://en.wikipedia.org/wiki/Libert%C3%A9,_%C3%A9galit%C3%A9,_fraternit%C3%A9",children:"Wikipedia Page"}),"."]}),"\n",(0,o.jsx)(n.h3,{id:"conclusion",children:"Conclusion"}),"\n",(0,o.jsx)(n.p,{children:"The combination of MLflow and advanced language models like Transformers offers a powerful approach to deploying sophisticated AI solutions. This tutorial aimed to empower your journey in machine learning, whether in translation tasks or other ML applications."})]})}function p(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,o.jsx)(n,{...e,children:(0,o.jsx)(u,{...e})}):u(e)}},86563:(e,n,t)=>{t.d(n,{Q:()=>o});var i=t(74848);const o=e=>{let{children:n}=e;return(0,i.jsx)("div",{style:{flexGrow:1,minWidth:0,fontSize:"0.8rem",width:"100%"},children:n})}}}]);