/*! For license information please see 8bec90f9.068873d3.js.LICENSE.txt */
"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[4921],{6789:(e,t,n)=>{n.d(t,{A:()=>c});n(96540);var r=n(28774),a=n(34164);const o={tileCard:"tileCard_NHsj",tileIcon:"tileIcon_pyoR",tileLink:"tileLink_iUbu",tileImage:"tileImage_O4So"};var i=n(86025),s=n(21122),l=n(74848);function c({icon:e,image:t,imageDark:n,imageWidth:c,imageHeight:p,iconSize:u=32,containerHeight:d,title:m,description:h,href:f,linkText:w="Learn more \u2192",className:g}){if(!e&&!t)throw new Error("TileCard requires either an icon or image prop");const _=d?{height:`${d}px`}:{},y={};return c&&(y.width=`${c}px`),p&&(y.height=`${p}px`),(0,l.jsxs)(r.A,{href:f,className:(0,a.A)(o.tileCard,g),children:[(0,l.jsx)("div",{className:o.tileIcon,style:_,children:e?(0,l.jsx)(e,{size:u}):n?(0,l.jsx)(s.A,{sources:{light:(0,i.Ay)(t),dark:(0,i.Ay)(n)},alt:m,className:o.tileImage,style:y}):(0,l.jsx)("img",{src:(0,i.Ay)(t),alt:m,className:o.tileImage,style:y})}),(0,l.jsx)("h3",{children:m}),(0,l.jsx)("p",{children:h}),(0,l.jsx)("div",{className:o.tileLink,children:w})]})}},11470:(e,t,n)=>{n.d(t,{A:()=>b});var r=n(96540),a=n(34164),o=n(23104),i=n(56347),s=n(205),l=n(57485),c=n(31682),p=n(70679);function u(e){return r.Children.toArray(e).filter(e=>"\n"!==e).map(e=>{if(!e||(0,r.isValidElement)(e)&&function(e){const{props:t}=e;return!!t&&"object"==typeof t&&"value"in t}(e))return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)})?.filter(Boolean)??[]}function d(e){const{values:t,children:n}=e;return(0,r.useMemo)(()=>{const e=t??function(e){return u(e).map(({props:{value:e,label:t,attributes:n,default:r}})=>({value:e,label:t,attributes:n,default:r}))}(n);return function(e){const t=(0,c.XI)(e,(e,t)=>e.value===t.value);if(t.length>0)throw new Error(`Docusaurus error: Duplicate values "${t.map(e=>e.value).join(", ")}" found in <Tabs>. Every value needs to be unique.`)}(e),e},[t,n])}function m({value:e,tabValues:t}){return t.some(t=>t.value===e)}function h({queryString:e=!1,groupId:t}){const n=(0,i.W6)(),a=function({queryString:e=!1,groupId:t}){if("string"==typeof e)return e;if(!1===e)return null;if(!0===e&&!t)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return t??null}({queryString:e,groupId:t});return[(0,l.aZ)(a),(0,r.useCallback)(e=>{if(!a)return;const t=new URLSearchParams(n.location.search);t.set(a,e),n.replace({...n.location,search:t.toString()})},[a,n])]}function f(e){const{defaultValue:t,queryString:n=!1,groupId:a}=e,o=d(e),[i,l]=(0,r.useState)(()=>function({defaultValue:e,tabValues:t}){if(0===t.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(e){if(!m({value:e,tabValues:t}))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${e}" but none of its children has the corresponding value. Available values are: ${t.map(e=>e.value).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return e}const n=t.find(e=>e.default)??t[0];if(!n)throw new Error("Unexpected error: 0 tabValues");return n.value}({defaultValue:t,tabValues:o})),[c,u]=h({queryString:n,groupId:a}),[f,w]=function({groupId:e}){const t=function(e){return e?`docusaurus.tab.${e}`:null}(e),[n,a]=(0,p.Dv)(t);return[n,(0,r.useCallback)(e=>{t&&a.set(e)},[t,a])]}({groupId:a}),g=(()=>{const e=c??f;return m({value:e,tabValues:o})?e:null})();(0,s.A)(()=>{g&&l(g)},[g]);return{selectedValue:i,selectValue:(0,r.useCallback)(e=>{if(!m({value:e,tabValues:o}))throw new Error(`Can't select invalid tab value=${e}`);l(e),u(e),w(e)},[u,w,o]),tabValues:o}}var w=n(92303);const g={tabList:"tabList__CuJ",tabItem:"tabItem_LNqP"};var _=n(74848);function y({className:e,block:t,selectedValue:n,selectValue:r,tabValues:i}){const s=[],{blockElementScrollPositionUntilNextRender:l}=(0,o.a_)(),c=e=>{const t=e.currentTarget,a=s.indexOf(t),o=i[a].value;o!==n&&(l(t),r(o))},p=e=>{let t=null;switch(e.key){case"Enter":c(e);break;case"ArrowRight":{const n=s.indexOf(e.currentTarget)+1;t=s[n]??s[0];break}case"ArrowLeft":{const n=s.indexOf(e.currentTarget)-1;t=s[n]??s[s.length-1];break}}t?.focus()};return(0,_.jsx)("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,a.A)("tabs",{"tabs--block":t},e),children:i.map(({value:e,label:t,attributes:r})=>(0,_.jsx)("li",{role:"tab",tabIndex:n===e?0:-1,"aria-selected":n===e,ref:e=>{s.push(e)},onKeyDown:p,onClick:c,...r,className:(0,a.A)("tabs__item",g.tabItem,r?.className,{"tabs__item--active":n===e}),children:t??e},e))})}function v({lazy:e,children:t,selectedValue:n}){const o=(Array.isArray(t)?t:[t]).filter(Boolean);if(e){const e=o.find(e=>e.props.value===n);return e?(0,r.cloneElement)(e,{className:(0,a.A)("margin-top--md",e.props.className)}):null}return(0,_.jsx)("div",{className:"margin-top--md",children:o.map((e,t)=>(0,r.cloneElement)(e,{key:t,hidden:e.props.value!==n}))})}function x(e){const t=f(e);return(0,_.jsxs)("div",{className:(0,a.A)("tabs-container",g.tabList),children:[(0,_.jsx)(y,{...t,...e}),(0,_.jsx)(v,{...t,...e})]})}function b(e){const t=(0,w.A)();return(0,_.jsx)(x,{...e,children:u(e.children)},String(t))}},19365:(e,t,n)=>{n.d(t,{A:()=>i});n(96540);var r=n(34164);const a={tabItem:"tabItem_Ymn6"};var o=n(74848);function i({children:e,hidden:t,className:n}){return(0,o.jsx)("div",{role:"tabpanel",className:(0,r.A)(a.tabItem,n),hidden:t,children:e})}},28453:(e,t,n)=>{n.d(t,{R:()=>i,x:()=>s});var r=n(96540);const a={},o=r.createContext(a);function i(e){const t=r.useContext(o);return r.useMemo(function(){return"function"==typeof e?e(t):{...t,...e}},[t,e])}function s(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:i(e.components),r.createElement(o.Provider,{value:t},e.children)}},46858:(e,t,n)=>{n.d(t,{A:()=>r});const r=(0,n(84722).A)("zap",[["path",{d:"M4 14a1 1 0 0 1-.78-1.63l9.9-10.2a.5.5 0 0 1 .86.46l-1.92 6.02A1 1 0 0 0 13 10h7a1 1 0 0 1 .78 1.63l-9.9 10.2a.5.5 0 0 1-.86-.46l1.92-6.02A1 1 0 0 0 11 14z",key:"1xq2db"}]])},47020:(e,t,n)=>{n.d(t,{A:()=>o});n(96540);const r={wrapper:"wrapper_sf5q"};var a=n(74848);function o({children:e}){return(0,a.jsx)("div",{className:r.wrapper,children:e})}},47792:(e,t,n)=>{n.d(t,{A:()=>r});const r=(0,n(84722).A)("target",[["circle",{cx:"12",cy:"12",r:"10",key:"1mglay"}],["circle",{cx:"12",cy:"12",r:"6",key:"1vlfrh"}],["circle",{cx:"12",cy:"12",r:"2",key:"1c9p78"}]])},49374:(e,t,n)=>{n.d(t,{B:()=>s});n(96540);const r=JSON.parse('{"mlflow.ag2":"api_reference/python_api/mlflow.ag2.html","mlflow.anthropic":"api_reference/python_api/mlflow.anthropic.html","mlflow.artifacts":"api_reference/python_api/mlflow.artifacts.html","mlflow.autogen":"api_reference/python_api/mlflow.autogen.html","mlflow.bedrock":"api_reference/python_api/mlflow.bedrock.html","mlflow.catboost":"api_reference/python_api/mlflow.catboost.html","mlflow.client":"api_reference/python_api/mlflow.client.html","mlflow.config":"api_reference/python_api/mlflow.config.html","mlflow.crewai":"api_reference/python_api/mlflow.crewai.html","mlflow.data":"api_reference/python_api/mlflow.data.html","mlflow.deployments":"api_reference/python_api/mlflow.deployments.html","mlflow.diviner":"api_reference/python_api/mlflow.diviner.html","mlflow.dspy":"api_reference/python_api/mlflow.dspy.html","mlflow.entities":"api_reference/python_api/mlflow.entities.html","mlflow.environment_variables":"api_reference/python_api/mlflow.environment_variables.html","mlflow.gateway":"api_reference/python_api/mlflow.gateway.html","mlflow.gemini":"api_reference/python_api/mlflow.gemini.html","mlflow.genai":"api_reference/python_api/mlflow.genai.html","mlflow.groq":"api_reference/python_api/mlflow.groq.html","mlflow.h2o":"api_reference/python_api/mlflow.h2o.html","mlflow.johnsnowlabs":"api_reference/python_api/mlflow.johnsnowlabs.html","mlflow.keras":"api_reference/python_api/mlflow.keras.html","mlflow.langchain":"api_reference/python_api/mlflow.langchain.html","mlflow.lightgbm":"api_reference/python_api/mlflow.lightgbm.html","mlflow.litellm":"api_reference/python_api/mlflow.litellm.html","mlflow.llama_index":"api_reference/python_api/mlflow.llama_index.html","mlflow.metrics":"api_reference/python_api/mlflow.metrics.html","mlflow.mistral":"api_reference/python_api/mlflow.mistral.html","mlflow.models":"api_reference/python_api/mlflow.models.html","mlflow.onnx":"api_reference/python_api/mlflow.onnx.html","mlflow.openai":"api_reference/python_api/mlflow.openai.html","mlflow.paddle":"api_reference/python_api/mlflow.paddle.html","mlflow.pmdarima":"api_reference/python_api/mlflow.pmdarima.html","mlflow.projects":"api_reference/python_api/mlflow.projects.html","mlflow.promptflow":"api_reference/python_api/mlflow.promptflow.html","mlflow.prophet":"api_reference/python_api/mlflow.prophet.html","mlflow.pydantic_ai":"api_reference/python_api/mlflow.pydantic_ai.html","mlflow.pyfunc":"api_reference/python_api/mlflow.pyfunc.html","mlflow.pyspark.ml":"api_reference/python_api/mlflow.pyspark.ml.html","mlflow.pytorch":"api_reference/python_api/mlflow.pytorch.html","mlflow":"api_reference/python_api/mlflow.html","mlflow.sagemaker":"api_reference/python_api/mlflow.sagemaker.html","mlflow.sentence_transformers":"api_reference/python_api/mlflow.sentence_transformers.html","mlflow.server":"api_reference/python_api/mlflow.server.html","mlflow.shap":"api_reference/python_api/mlflow.shap.html","mlflow.sklearn":"api_reference/python_api/mlflow.sklearn.html","mlflow.smolagents":"api_reference/python_api/mlflow.smolagents.html","mlflow.spacy":"api_reference/python_api/mlflow.spacy.html","mlflow.spark":"api_reference/python_api/mlflow.spark.html","mlflow.statsmodels":"api_reference/python_api/mlflow.statsmodels.html","mlflow.system_metrics":"api_reference/python_api/mlflow.system_metrics.html","mlflow.tensorflow":"api_reference/python_api/mlflow.tensorflow.html","mlflow.tracing":"api_reference/python_api/mlflow.tracing.html","mlflow.transformers":"api_reference/python_api/mlflow.transformers.html","mlflow.types":"api_reference/python_api/mlflow.types.html","mlflow.utils":"api_reference/python_api/mlflow.utils.html","mlflow.xgboost":"api_reference/python_api/mlflow.xgboost.html","mlflow.server.auth":"api_reference/auth/python-api.html","mlflow.server.cli":"api_reference/cli.html","mlflow.r":"api_reference/R-api.html","mlflow.java":"api_reference/java_api/index.html","mlflow.python":"api_reference/python_api/index.html","mlflow.rest":"api_reference/rest-api.html","mlflow.llms.deployments.api":"api_reference/llms/deployments/api.html"}');var a=n(86025),o=n(74848);const i=e=>{const t=e.split(".");for(let n=t.length;n>0;n--){const e=t.slice(0,n).join(".");if(r[e])return e}return null};function s({fn:e,children:t,hash:n}){const s=i(e);if(!s)return(0,o.jsx)(o.Fragment,{children:t});const l=(0,a.Ay)(`/${r[s]}#${n??e}`);return(0,o.jsx)("a",{href:l,target:"_blank",children:t??(0,o.jsxs)("code",{children:[e,"()"]})})}},51307:(e,t,n)=>{n.d(t,{Ay:()=>p,RM:()=>l});var r=n(74848),a=n(28453),o=n(11470),i=n(19365),s=n(47020);const l=[];function c(e){const t={a:"a",admonition:"admonition",code:"code",p:"p",pre:"pre",...(0,a.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(s.A,{children:(0,r.jsxs)(o.A,{children:[(0,r.jsxs)(i.A,{value:"local",label:"Local (pip)",default:!0,children:[(0,r.jsxs)(t.p,{children:["For the fastest setup, you can install the ",(0,r.jsx)(t.a,{href:"https://pypi.org/project/mlflow/",children:"mlflow"})," Python package and run MLflow locally:"]}),(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-bash",children:"mlflow ui --backend-store-uri sqlite:///mlflow.db --port 5000\n"})}),(0,r.jsxs)(t.p,{children:["This will start the server at port 5000 on your local machine. Connect your notebook/IDE to the server by setting the tracking URI. You can also access to the MLflow UI at ",(0,r.jsx)(t.a,{href:"http://localhost:5000",children:"http://localhost:5000"}),"."]}),(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-python",children:'import mlflow\n\nmlflow.set_tracking_uri("http://localhost:5000")\n'})}),(0,r.jsxs)(t.p,{children:["You can also brows the MLflow UI at ",(0,r.jsx)(t.a,{href:"http://localhost:5000",children:"http://localhost:5000"}),"."]})]}),(0,r.jsxs)(i.A,{value:"docker",label:"Local (docker)",children:[(0,r.jsx)(t.p,{children:"MLflow provides a Docker Compose file to start a local MLflow server with a postgres database and a minio server."}),(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-bash",children:"git clone https://github.com/mlflow/mlflow.git\ncd docker-compose\ncp .env.dev.example .env\ndocker compose up -d\n"})}),(0,r.jsxs)(t.p,{children:["This will start the server at port 5000 on your local machine. Connect your notebook/IDE to the server by setting the tracking URI. You can also access to the MLflow UI at ",(0,r.jsx)(t.a,{href:"http://localhost:5000",children:"http://localhost:5000"}),"."]}),(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-python",children:'import mlflow\n\nmlflow.set_tracking_uri("http://localhost:5000")\n'})}),(0,r.jsxs)(t.p,{children:["Refer to the ",(0,r.jsx)(t.a,{href:"https://github.com/mlflow/mlflow/tree/master/docker-compose/README.md",children:"instruction"})," for more details, e.g., overriding the default environment variables."]})]}),(0,r.jsxs)(i.A,{value:"remote",label:"Remote MLflow Server",children:[(0,r.jsx)(t.p,{children:"If you have a remote MLflow tracking server, configure the connection:"}),(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-python",children:'import os\nimport mlflow\n\n# Set your MLflow tracking URI\nos.environ["MLFLOW_TRACKING_URI"] = "http://your-mlflow-server:5000"\n# Or directly in code\nmlflow.set_tracking_uri("http://your-mlflow-server:5000")\n'})})]}),(0,r.jsxs)(i.A,{value:"databricks",label:"Databricks",children:[(0,r.jsx)(t.p,{children:"If you have a Databricks account, configure the connection:"}),(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-python",children:"import mlflow\n\nmlflow.login()\n"})}),(0,r.jsx)(t.p,{children:"This will prompt you for your configuration details (Databricks Host url and a PAT)."})]})]})}),"\n",(0,r.jsx)(t.admonition,{type:"tip",children:(0,r.jsxs)(t.p,{children:["If you are unsure about how to set up an MLflow tracking server, you can start with the cloud-based MLflow powered by Databricks: ",(0,r.jsx)("ins",{children:(0,r.jsx)(t.a,{href:"https://login.databricks.com/?destination_url=%2Fml%2Fexperiments-signup%3Fsource%3DTRY_MLFLOW&dbx_source=TRY_MLFLOW&signup_experience_step=EXPRESS&provider=MLFLOW&utm_source=mlflow_org&tuuid=a9534f33-78bf-4b81-becc-4334e993251d&rl_aid=e6685d78-9f85-4fed-b64f-08e247f53547&intent=SIGN_UP",children:"Sign up for free \u2192"})})]})})]})}function p(e={}){const{wrapper:t}={...(0,a.R)(),...e.components};return t?(0,r.jsx)(t,{...e,children:(0,r.jsx)(c,{...e})}):c(e)}},58894:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>x,contentTitle:()=>v,default:()=>k,frontMatter:()=>y,metadata:()=>r,toc:()=>b});const r=JSON.parse('{"id":"eval-monitor/running-evaluation/traces","title":"Evaluating (Production) Traces","description":"Traces are the core data of MLflow. They capture the complete execution flow of your LLM applications. Evaluating traces is a powerful way to understand the performance of your LLM applications and get insights for quality improvement.","source":"@site/docs/genai/eval-monitor/running-evaluation/traces.mdx","sourceDirName":"eval-monitor/running-evaluation","slug":"/eval-monitor/running-evaluation/traces","permalink":"/mlflow-website/docs/latest/genai/eval-monitor/running-evaluation/traces","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{},"sidebar":"genAISidebar","previous":{"title":"Evaluate Agents","permalink":"/mlflow-website/docs/latest/genai/eval-monitor/running-evaluation/agents"},"next":{"title":"What is a Scorer?","permalink":"/mlflow-website/docs/latest/genai/eval-monitor/scorers/"}}');var a=n(74848),o=n(28453),i=(n(11470),n(19365),n(49374)),s=n(66927),l=(n(47020),n(96869)),c=n(65592),p=n(6789);const u=(0,n(84722).A)("book-marked",[["path",{d:"M10 2v8l3-3 3 3V2",key:"sqw3rj"}],["path",{d:"M4 19.5v-15A2.5 2.5 0 0 1 6.5 2H19a1 1 0 0 1 1 1v18a1 1 0 0 1-1 1H6.5a1 1 0 0 1 0-5H20",key:"k3hazp"}]]);var d=n(98445),m=n(47792),h=n(85731),f=n(93164),w=n(96844),g=n(46858),_=n(51307);const y={},v="Evaluating (Production) Traces",x={},b=[{value:"Workflow",id:"workflow",level:2},{value:"Example: Evaluating Production Traces",id:"example-evaluating-production-traces",level:2},{value:"Prerequisites",id:"prerequisites",level:3},..._.RM,{value:"Step 0: Simulate Production Traces",id:"step-0-simulate-production-traces",level:3},{value:"Step 1: Search and retrieve traces",id:"step-1-search-and-retrieve-traces",level:3},{value:"Step 2: Define application-specific scorers",id:"step-2-define-application-specific-scorers",level:3},{value:"Step 3: Evaluate trace quality",id:"step-3-evaluate-trace-quality",level:3},{value:"Annotate Traces with Ground Truth and Manual Feedbacks",id:"annotate-traces-with-ground-truth-and-manual-feedbacks",level:2},{value:"Recording End-user Feedbacks from Production",id:"recording-end-user-feedbacks-from-production",level:2},{value:"Next steps",id:"next-steps",level:2}];function j(e){const t={a:"a",admonition:"admonition",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,o.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(t.header,{children:(0,a.jsx)(t.h1,{id:"evaluating-production-traces",children:"Evaluating (Production) Traces"})}),"\n",(0,a.jsxs)(t.p,{children:[(0,a.jsx)(t.a,{href:"/genai/tracing",children:"Traces"})," are the core data of MLflow. They capture the complete execution flow of your LLM applications. Evaluating traces is a powerful way to understand the performance of your LLM applications and get insights for quality improvement."]}),"\n",(0,a.jsx)(t.p,{children:"Evaluating traces is also a useful trick for offline evaluation. Instead of running prediction on every evaluation run, you can generate traces at once and re-use them for multiple evaluation runs, to reduce the computation and LLM costs."}),"\n",(0,a.jsx)(s.A,{src:"/images/mlflow-3/eval-monitor/trace-evaluation-hero.png",alt:"Evaluate traces overview",width:"95%"}),"\n",(0,a.jsx)(t.h2,{id:"workflow",children:"Workflow"}),"\n",(0,a.jsx)(l.A,{steps:[{icon:u,title:"Annotate traces with ground truth (Optional)",description:"Add expected outputs and ground truth labels to traces to establish evaluation baselines and correct answers."},{icon:d.A,title:"Search and retrieve traces",description:"Find and collect traces from your MLflow tracking server using filters for time range, experiment, or trace status."},{icon:m.A,title:"Define scorers",description:"Create built-in and custom scorers to measure quality, accuracy, latency, and trace-specific metrics."},{icon:h.A,title:"Run evaluation",description:"Execute the evaluation on your trace collection and analyze results in MLflow UI for insights."}]}),"\n",(0,a.jsx)(t.h2,{id:"example-evaluating-production-traces",children:"Example: Evaluating Production Traces"}),"\n",(0,a.jsx)(t.h3,{id:"prerequisites",children:"Prerequisites"}),"\n",(0,a.jsx)(t.p,{children:"First, install the required packages by running the following command:"}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-bash",children:"pip install --upgrade mlflow>=3.3 openai\n"})}),"\n",(0,a.jsx)(t.p,{children:"MLflow stores evaluation results in a tracking server. Connect your local environment to the tracking server by one of the following methods."}),"\n",(0,a.jsx)(_.Ay,{}),"\n",(0,a.jsx)(t.h3,{id:"step-0-simulate-production-traces",children:"Step 0: Simulate Production Traces"}),"\n",(0,a.jsx)(t.p,{children:"First, let's simulate some production traces to use for evaluation. Here we define a simple email automation app that uses a CRM database to generate emails. If you already have traces, you can skip this step."}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-python",children:'import mlflow\nfrom mlflow.entities import Document\nimport openai\n\nclient = openai.OpenAI()\nmlflow.openai.autolog()  # Enable automatic tracing for OpenAI calls\n\n# Simulated CRM database\nCRM_DATA = {\n    "Acme Corp": {\n        "contact_name": "Alice Chen",\n        "recent_meeting": "Product demo on Monday, very interested in enterprise features. They asked about: advanced analytics, real-time dashboards, API integrations, custom reporting, multi-user support, SSO authentication, data export capabilities, and pricing for 500+ users",\n        "support_tickets": [\n            "Ticket #123: API latency issue (resolved last week)",\n            "Ticket #124: Feature request for bulk import",\n            "Ticket #125: Question about GDPR compliance",\n        ],\n    },\n    "TechStart": {\n        "contact_name": "Bob Martinez",\n        "recent_meeting": "Initial sales call last Thursday, requested pricing",\n        "support_tickets": [\n            "Ticket #456: Login issues (open - critical)",\n            "Ticket #457: Performance degradation reported",\n            "Ticket #458: Integration failing with their CRM",\n        ],\n    },\n    "Global Retail": {\n        "contact_name": "Carol Wang",\n        "recent_meeting": "Quarterly review yesterday, happy with platform performance",\n        "support_tickets": [],\n    },\n}\n\n\n@mlflow.trace(span_type="RETRIEVER")\ndef retrieve_customer_info(customer_name: str) -> list[Document]:\n    """Retrieve customer information from CRM database"""\n    if data := CRM_DATA.get(customer_name):\n        return [\n            Document(\n                id=f"{customer_name}_meeting",\n                page_content=f"Recent meeting: {data[\'recent_meeting\']}",\n            ),\n            Document(\n                id=f"{customer_name}_tickets",\n                page_content=f"Support tickets: {\', \'.join(data[\'support_tickets\']) if data[\'support_tickets\'] else \'No open tickets\'}",\n            ),\n            Document(\n                id=f"{customer_name}_contact",\n                page_content=f"Contact: {data[\'contact_name\']}",\n            ),\n        ]\n    return []\n\n\n@mlflow.trace(span_type="AGENT")\ndef generate_sales_email(customer_name: str, objective: str) -> dict[str, str]:\n    """Generate personalized sales email based on customer data & given objective."""\n    # Retrieve customer information\n    customer_docs = retrieve_customer_info(customer_name)\n    context = "\\n".join([doc.page_content for doc in customer_docs])\n\n    # Generate email using retrieved context\n    prompt = f"""You are a sales representative. Based on the customer information below,\n    write a brief follow-up email that addresses their request.\n\n    Customer Information: {context}\n\n    User instructions: {objective}"""\n\n    response = client.chat.completions.create(\n        model="gpt-4o-mini",\n        messages=[{"role": "user", "content": prompt}],\n        max_tokens=2000,\n    )\n    return {"email": response.choices[0].message.content}\n'})}),"\n",(0,a.jsx)(t.p,{children:"Let's run the app and generate some traces."}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-python",children:'test_requests = [\n    {"customer_name": "Acme Corp", "user_instructions": "Follow up after product demo"},\n    {\n        "customer_name": "TechStart",\n        "user_instructions": "Check on support ticket status",\n    },\n    {\n        "customer_name": "Global Retail",\n        "user_instructions": "Send quarterly review summary",\n    },\n    {\n        "customer_name": "Acme Corp",\n        "user_instructions": "Write a very detailed email explaining all our product features, pricing tiers, implementation timeline, and support options",\n    },\n    {\n        "customer_name": "TechStart",\n        "user_instructions": "Send an enthusiastic thank you for their business!",\n    },\n    {"customer_name": "Global Retail", "user_instructions": "Send a follow-up email"},\n    {\n        "customer_name": "Acme Corp",\n        "user_instructions": "Just check in to see how things are going",\n    },\n]\n\n# Run requests and capture traces\nprint("Simulating production traffic...")\nfor req in test_requests:\n    try:\n        result = generate_sales_email(**req)\n        print(f"\u2713 Generated email for {req[\'customer_name\']}")\n    except Exception as e:\n        print(f"\u2717 Error for {req[\'customer_name\']}: {e}")\n'})}),"\n",(0,a.jsx)(t.p,{children:"This generates a list of traces as follows:"}),"\n",(0,a.jsx)(s.A,{src:"/images/mlflow-3/eval-monitor/trace-evaluation-list.png",alt:"Simulated traces",width:"95%"}),"\n",(0,a.jsx)(t.h3,{id:"step-1-search-and-retrieve-traces",children:"Step 1: Search and retrieve traces"}),"\n",(0,a.jsxs)(t.p,{children:["Traces stored in the MLflow backend can be retrieved using the ",(0,a.jsx)(i.B,{fn:"mlflow.search_traces"})," API.\nThe following code retrieves all traces from the last 24 hours. See ",(0,a.jsx)(t.a,{href:"/genai/tracing/observe-with-traces/query-via-sdk/",children:"Query Traces via SDK"})," for the full supported syntax."]}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-python",children:'import mlflow\nfrom datetime import datetime, timedelta\n\n# Get traces from the last 24 hours\nyesterday = datetime.now() - timedelta(days=1)\ntraces = mlflow.search_traces(\n    filter_string=f"timestamp > {int(yesterday.timestamp() * 1000)}"\n)\n'})}),"\n",(0,a.jsxs)(t.p,{children:["The API returns a set of traces as a pandas DataFrame, where various data in the trace is expanded into columns. The dataframe can be directly passed into the ",(0,a.jsx)(i.B,{fn:"mlflow.genai.evaluate"})," function for evaluation."]}),"\n",(0,a.jsx)(t.h3,{id:"step-2-define-application-specific-scorers",children:"Step 2: Define application-specific scorers"}),"\n",(0,a.jsxs)(t.p,{children:[(0,a.jsx)(t.a,{href:"/genai/eval-monitor/scorers",children:"Scorer"})," is the core component of evaluation, which defines the criteria for evaluating the quality of the traces. MLflow provides a set of built-in scorers for common evaluation criteria, and you can also define your own custom scorers for application-specific criteria."]}),"\n",(0,a.jsx)(t.p,{children:"In this example, we use three different types of scorers:"}),"\n",(0,a.jsxs)(t.ul,{children:["\n",(0,a.jsxs)(t.li,{children:[(0,a.jsx)(i.B,{fn:"mlflow.genai.scorers.RetrievalGroundedness",children:"RetrievalGroundedness"}),": Built-in scorer checks if the output is grounded in the retrieved data."]}),"\n",(0,a.jsxs)(t.li,{children:[(0,a.jsx)(i.B,{fn:"mlflow.genai.scorers.RelevanceToQuery",children:"RelevanceToQuery"}),": Built-in scorer checks if the output is relevant to the user's request."]}),"\n",(0,a.jsxs)(t.li,{children:[(0,a.jsx)(i.B,{fn:"mlflow.genai.scorers.Guidelines",children:"Guidelines"}),": Built-in scorer that allows you to judge the output against custom guidelines using LLMs."]}),"\n"]}),"\n",(0,a.jsxs)(t.p,{children:["These scorers uses LLM for judging the criteria. The default model is ",(0,a.jsx)(t.code,{children:"openai:/gpt-4.1-mini"}),". You can also specify a different model by passing the ",(0,a.jsx)(t.code,{children:"model"})," parameter to the scorer constructor."]}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-python",children:'email_scorers = [\n    RetrievalGroundedness(),\n    RelevanceToQuery(),  # Checks if email addresses the user\'s request\n    Guidelines(\n        name="follows_objective",\n        guidelines="The generated email must follow the objective in the request.",\n    ),\n    Guidelines(\n        name="concise_communication",\n        guidelines="The email MUST be concise and to the point. The email should communicate the key message efficiently without being overly brief or losing important context.",\n    ),\n    Guidelines(\n        name="professional_tone",\n        guidelines="The email must be in a professional tone.",\n    ),\n]\n'})}),"\n",(0,a.jsx)(t.admonition,{title:"Scoring Intermediate Information in Traces",type:"tip",children:(0,a.jsxs)(t.p,{children:["Scorers have access to the complete MLflow traces, including spans, attributes, and outputs. This allows you to evaluate the agent's behavior precisely, not only the final output, such as the ",(0,a.jsx)(t.strong,{children:"tool call trajectory"}),", the ",(0,a.jsx)(t.strong,{children:"sub-agents routing"}),", the ",(0,a.jsx)(t.strong,{children:"retrieved document recall"}),", etc. See ",(0,a.jsx)("ins",{children:(0,a.jsx)(t.a,{href:"/genai/eval-monitor/scorers/custom#parsing-traces-for-scoring",children:"Parsing Traces for Scoring"})})," for more details."]})}),"\n",(0,a.jsx)(t.h3,{id:"step-3-evaluate-trace-quality",children:"Step 3: Evaluate trace quality"}),"\n",(0,a.jsxs)(t.p,{children:["Now we are ready to run the evaluation. One notable difference from other examples is that we don't need to specify a ",(0,a.jsx)(t.code,{children:"predict_fn"})," function. The ",(0,a.jsx)(i.B,{fn:"mlflow.genai.evaluate"})," function will automatically extract the inputs, outputs, and other intermediate information from the trace object and use them for scoring."]}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-python",children:"results = mlflow.genai.evaluate(\n    data=traces,\n    scorers=email_scorers,\n)\n"})}),"\n",(0,a.jsx)(t.p,{children:"Once the evaluation is done, open the MLflow UI in your browser and navigate to the experiment page. You should see MLflow creates a new Run and logs the evaluation results."}),"\n",(0,a.jsx)(s.A,{src:"/images/mlflow-3/eval-monitor/trace-evaluation-result.png",alt:"Evaluate traces result",width:"95%"}),"\n",(0,a.jsx)(t.p,{children:"By clicking on the each row in the result, you can open the trace and see the detailed score and rationale."}),"\n",(0,a.jsx)(t.h2,{id:"annotate-traces-with-ground-truth-and-manual-feedbacks",children:"Annotate Traces with Ground Truth and Manual Feedbacks"}),"\n",(0,a.jsx)(t.p,{children:"Some evaluation criteria require ground truths to be defined. MLflow allows you to directly annotate traces with ground truths and any other human feedbacks."}),"\n",(0,a.jsxs)(t.p,{children:["To annotate a trace with ground truth or manual feedback, open the trace in the MLflow UI and click the ",(0,a.jsx)(t.strong,{children:"Assessments"})," button to add expectations or feedback directly through the web interface."]}),"\n",(0,a.jsx)(s.A,{src:"/images/mlflow-3/eval-monitor/trace-evaluation-assessments.png",alt:"Annotate traces with ground truth",width:"80%"}),"\n",(0,a.jsxs)(t.p,{children:["Alternatively, you can also annotate traces with ground truth or manual feedbacks using the ",(0,a.jsx)(i.B,{fn:"mlflow.log_expectation"})," and the ",(0,a.jsx)(i.B,{fn:"mlflow.log_feedback"})," APIs respectively."]}),"\n",(0,a.jsx)(t.h2,{id:"recording-end-user-feedbacks-from-production",children:"Recording End-user Feedbacks from Production"}),"\n",(0,a.jsxs)(t.p,{children:["Using the ",(0,a.jsx)(i.B,{fn:"mlflow.log_feedback"})," API, you can record end-user feedbacks from your production application directly and monitor them in MLflow."]}),"\n",(0,a.jsx)(s.A,{src:"/images/mlflow-3/eval-monitor/trace-evaluation-user-feedback.png",alt:"Annotate traces with feedback",width:"95%"}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-python",children:'# Decorate the endpoint with MLflow tracing\n@mlflow.trace(span_type="LLM")\n@app.post("/chat", response_model=ChatResponse)\nasync def chat(request: ChatRequest):\n    """\n    Chat endpoint that answers user questions and returns response with MLflow trace ID.\n    """\n    try:\n        response = await openai.AsyncOpenAI().chat.completions.create(\n            model="gpt-4o-mini",\n            messages=[{"role": "user", "content": request.prompt}],\n        )\n\n        # Get the active trace ID for the request\n        trace_id = mlflow.get_current_active_span().trace_id\n\n        return ChatResponse(\n            response=response.choices[0].message.content,\n            trace_id=trace_id,\n            timestamp=time.time(),\n        )\n    except Exception as e:\n        raise HTTPException(\n            status_code=500, detail=f"Error processing chat request: {str(e)}"\n        )\n\n\n@app.post("/feedback", response_model=FeedbackResponse)\nasync def feedback(request: FeedbackRequest):\n    """\n    Feedback endpoint that annotates MLflow traces with user feedback.\n    """\n    try:\n        # Record the given user feedback to the Trace\n        mlflow.log_feedback(\n            trace_id=request.trace_id,\n            name="user_satisfaction",\n            value=request.thumbs_up,\n            source=AssessmentSource(\n                source_type=AssessmentSourceType.HUMAN, source_id=request.user_id\n            ),\n            rationale=request.rationale,\n        )\n        return FeedbackResponse(\n            message="Feedback recorded successfully", trace_id=request.trace_id\n        )\n    except HTTPException:\n        raise\n    except Exception as e:\n        raise HTTPException(\n            status_code=500, detail=f"Error processing feedback: {str(e)}"\n        )\n'})}),"\n",(0,a.jsx)(t.h2,{id:"next-steps",children:"Next steps"}),"\n",(0,a.jsxs)(c.A,{children:[(0,a.jsx)(p.A,{icon:f.A,iconSize:48,title:"Custom Scorers",description:"Build advanced evaluation criteria and metrics tailored to your specific trace analysis needs.",href:"/genai/eval-monitor/scorers",linkText:"Create custom scorers \u2192",containerHeight:64}),(0,a.jsx)(p.A,{icon:w.A,iconSize:48,title:"Production Monitoring",description:"Optimize trace collection in production environments for efficient monitoring and analysis.",href:"/genai/tracing/prod-tracing",linkText:"Set up monitoring \u2192",containerHeight:64}),(0,a.jsx)(p.A,{icon:g.A,iconSize:48,title:"Tracing Integrations",description:"Use MLflow Tracing with other LLM providers and frameworks, such as LangGraph, Pydantic AI.",href:"/genai/tracing/integrations",linkText:"Explore integrations \u2192",containerHeight:64})]})]})}function k(e={}){const{wrapper:t}={...(0,o.R)(),...e.components};return t?(0,a.jsx)(t,{...e,children:(0,a.jsx)(j,{...e})}):j(e)}},65592:(e,t,n)=>{n.d(t,{A:()=>i});n(96540);var r=n(34164);const a={tilesGrid:"tilesGrid_hB9N"};var o=n(74848);function i({children:e,className:t}){return(0,o.jsx)("div",{className:(0,r.A)(a.tilesGrid,t),children:e})}},66927:(e,t,n)=>{n.d(t,{A:()=>i});n(96540);const r={container:"container_JwLF",imageWrapper:"imageWrapper_RfGN",image:"image_bwOA",caption:"caption_jo2G"};var a=n(86025),o=n(74848);function i({src:e,alt:t,width:n,caption:i,className:s}){return(0,o.jsxs)("div",{className:`${r.container} ${s||""}`,children:[(0,o.jsx)("div",{className:r.imageWrapper,style:n?{width:n}:{},children:(0,o.jsx)("img",{src:(0,a.Ay)(e),alt:t,className:r.image})}),i&&(0,o.jsx)("p",{className:r.caption,children:i})]})}},84722:(e,t,n)=>{n.d(t,{A:()=>c});var r=n(96540);const a=e=>{const t=(e=>e.replace(/^([A-Z])|[\s-_]+(\w)/g,(e,t,n)=>n?n.toUpperCase():t.toLowerCase()))(e);return t.charAt(0).toUpperCase()+t.slice(1)},o=(...e)=>e.filter((e,t,n)=>Boolean(e)&&""!==e.trim()&&n.indexOf(e)===t).join(" ").trim(),i=e=>{for(const t in e)if(t.startsWith("aria-")||"role"===t||"title"===t)return!0};var s={xmlns:"http://www.w3.org/2000/svg",width:24,height:24,viewBox:"0 0 24 24",fill:"none",stroke:"currentColor",strokeWidth:2,strokeLinecap:"round",strokeLinejoin:"round"};const l=(0,r.forwardRef)(({color:e="currentColor",size:t=24,strokeWidth:n=2,absoluteStrokeWidth:a,className:l="",children:c,iconNode:p,...u},d)=>(0,r.createElement)("svg",{ref:d,...s,width:t,height:t,stroke:e,strokeWidth:a?24*Number(n)/Number(t):n,className:o("lucide",l),...!c&&!i(u)&&{"aria-hidden":"true"},...u},[...p.map(([e,t])=>(0,r.createElement)(e,t)),...Array.isArray(c)?c:[c]])),c=(e,t)=>{const n=(0,r.forwardRef)(({className:n,...i},s)=>{return(0,r.createElement)(l,{ref:s,iconNode:t,className:o(`lucide-${c=a(e),c.replace(/([a-z0-9])([A-Z])/g,"$1-$2").toLowerCase()}`,`lucide-${e}`,n),...i});var c});return n.displayName=a(e),n}},85731:(e,t,n)=>{n.d(t,{A:()=>r});const r=(0,n(84722).A)("play",[["polygon",{points:"6 3 20 12 6 21 6 3",key:"1oa8hb"}]])},93164:(e,t,n)=>{n.d(t,{A:()=>r});const r=(0,n(84722).A)("code",[["path",{d:"m16 18 6-6-6-6",key:"eg8j8"}],["path",{d:"m8 6-6 6 6 6",key:"ppft3o"}]])},96844:(e,t,n)=>{n.d(t,{A:()=>r});const r=(0,n(84722).A)("activity",[["path",{d:"M22 12h-2.48a2 2 0 0 0-1.93 1.46l-2.35 8.36a.25.25 0 0 1-.48 0L9.24 2.18a.25.25 0 0 0-.48 0l-2.35 8.36A2 2 0 0 1 4.49 12H2",key:"169zse"}]])},96869:(e,t,n)=>{n.d(t,{A:()=>g});n(96540);const r="workflowContainer__N1v",a="workflowTitle_QrAr",o="stepsContainer_IGeu",i="screenshotContainer_OwzZ",s="stepItem_GyHJ",l="stepIndicator_U2Wb",c="stepNumber_vINc",p="stepNumberText_eLd7",u="stepConnector_Si86",d="stepContent_D0CA",m="stepTitle_wujx",h="stepDescription_PIaE";var f=n(66927),w=n(74848);const g=({steps:e,title:t,screenshot:n})=>(0,w.jsxs)("div",{className:r,children:[t&&(0,w.jsx)("h3",{className:a,children:t}),n&&(0,w.jsx)("div",{className:i,children:(0,w.jsx)(f.A,{src:n.src,alt:n.alt,width:n.width||"90%"})}),(0,w.jsx)("div",{className:o,children:e.map((t,n)=>(0,w.jsxs)("div",{className:s,children:[(0,w.jsxs)("div",{className:l,children:[(0,w.jsx)("div",{className:c,children:t.icon?(0,w.jsx)(t.icon,{size:16}):(0,w.jsx)("span",{className:p,children:n+1})}),n<e.length-1&&(0,w.jsx)("div",{className:u})]}),(0,w.jsxs)("div",{className:d,children:[(0,w.jsx)("h4",{className:m,children:t.title}),(0,w.jsx)("p",{className:h,children:t.description})]})]},n))})]})},98445:(e,t,n)=>{n.d(t,{A:()=>r});const r=(0,n(84722).A)("search",[["path",{d:"m21 21-4.34-4.34",key:"14j7rj"}],["circle",{cx:"11",cy:"11",r:"8",key:"4ej97u"}]])}}]);