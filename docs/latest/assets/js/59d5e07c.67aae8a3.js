"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[8269],{11470:(e,t,n)=>{n.d(t,{A:()=>b});var a=n(96540),l=n(34164),r=n(23104),o=n(56347),i=n(205),s=n(57485),c=n(31682),p=n(70679);function h(e){return a.Children.toArray(e).filter((e=>"\n"!==e)).map((e=>{if(!e||(0,a.isValidElement)(e)&&function(e){const{props:t}=e;return!!t&&"object"==typeof t&&"value"in t}(e))return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)}))?.filter(Boolean)??[]}function u(e){const{values:t,children:n}=e;return(0,a.useMemo)((()=>{const e=t??function(e){return h(e).map((({props:{value:e,label:t,attributes:n,default:a}})=>({value:e,label:t,attributes:n,default:a})))}(n);return function(e){const t=(0,c.XI)(e,((e,t)=>e.value===t.value));if(t.length>0)throw new Error(`Docusaurus error: Duplicate values "${t.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`)}(e),e}),[t,n])}function m({value:e,tabValues:t}){return t.some((t=>t.value===e))}function d({queryString:e=!1,groupId:t}){const n=(0,o.W6)(),l=function({queryString:e=!1,groupId:t}){if("string"==typeof e)return e;if(!1===e)return null;if(!0===e&&!t)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return t??null}({queryString:e,groupId:t});return[(0,s.aZ)(l),(0,a.useCallback)((e=>{if(!l)return;const t=new URLSearchParams(n.location.search);t.set(l,e),n.replace({...n.location,search:t.toString()})}),[l,n])]}function f(e){const{defaultValue:t,queryString:n=!1,groupId:l}=e,r=u(e),[o,s]=(0,a.useState)((()=>function({defaultValue:e,tabValues:t}){if(0===t.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(e){if(!m({value:e,tabValues:t}))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${e}" but none of its children has the corresponding value. Available values are: ${t.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return e}const n=t.find((e=>e.default))??t[0];if(!n)throw new Error("Unexpected error: 0 tabValues");return n.value}({defaultValue:t,tabValues:r}))),[c,h]=d({queryString:n,groupId:l}),[f,w]=function({groupId:e}){const t=function(e){return e?`docusaurus.tab.${e}`:null}(e),[n,l]=(0,p.Dv)(t);return[n,(0,a.useCallback)((e=>{t&&l.set(e)}),[t,l])]}({groupId:l}),g=(()=>{const e=c??f;return m({value:e,tabValues:r})?e:null})();(0,i.A)((()=>{g&&s(g)}),[g]);return{selectedValue:o,selectValue:(0,a.useCallback)((e=>{if(!m({value:e,tabValues:r}))throw new Error(`Can't select invalid tab value=${e}`);s(e),h(e),w(e)}),[h,w,r]),tabValues:r}}var w=n(92303);const g={tabList:"tabList__CuJ",tabItem:"tabItem_LNqP"};var y=n(74848);function _({className:e,block:t,selectedValue:n,selectValue:a,tabValues:o}){const i=[],{blockElementScrollPositionUntilNextRender:s}=(0,r.a_)(),c=e=>{const t=e.currentTarget,l=i.indexOf(t),r=o[l].value;r!==n&&(s(t),a(r))},p=e=>{let t=null;switch(e.key){case"Enter":c(e);break;case"ArrowRight":{const n=i.indexOf(e.currentTarget)+1;t=i[n]??i[0];break}case"ArrowLeft":{const n=i.indexOf(e.currentTarget)-1;t=i[n]??i[i.length-1];break}}t?.focus()};return(0,y.jsx)("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,l.A)("tabs",{"tabs--block":t},e),children:o.map((({value:e,label:t,attributes:a})=>(0,y.jsx)("li",{role:"tab",tabIndex:n===e?0:-1,"aria-selected":n===e,ref:e=>{i.push(e)},onKeyDown:p,onClick:c,...a,className:(0,l.A)("tabs__item",g.tabItem,a?.className,{"tabs__item--active":n===e}),children:t??e},e)))})}function x({lazy:e,children:t,selectedValue:n}){const r=(Array.isArray(t)?t:[t]).filter(Boolean);if(e){const e=r.find((e=>e.props.value===n));return e?(0,a.cloneElement)(e,{className:(0,l.A)("margin-top--md",e.props.className)}):null}return(0,y.jsx)("div",{className:"margin-top--md",children:r.map(((e,t)=>(0,a.cloneElement)(e,{key:t,hidden:e.props.value!==n})))})}function v(e){const t=f(e);return(0,y.jsxs)("div",{className:(0,l.A)("tabs-container",g.tabList),children:[(0,y.jsx)(_,{...t,...e}),(0,y.jsx)(x,{...t,...e})]})}function b(e){const t=(0,w.A)();return(0,y.jsx)(v,{...e,children:h(e.children)},String(t))}},19365:(e,t,n)=>{n.d(t,{A:()=>o});n(96540);var a=n(34164);const l={tabItem:"tabItem_Ymn6"};var r=n(74848);function o({children:e,hidden:t,className:n}){return(0,r.jsx)("div",{role:"tabpanel",className:(0,a.A)(l.tabItem,n),hidden:t,children:e})}},28453:(e,t,n)=>{n.d(t,{R:()=>o,x:()=>i});var a=n(96540);const l={},r=a.createContext(l);function o(e){const t=a.useContext(r);return a.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function i(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(l):e.components||l:o(e.components),a.createElement(r.Provider,{value:t},e.children)}},47020:(e,t,n)=>{n.d(t,{A:()=>r});n(96540);const a={wrapper:"wrapper_sf5q"};var l=n(74848);function r({children:e}){return(0,l.jsx)("div",{className:a.wrapper,children:e})}},49374:(e,t,n)=>{n.d(t,{B:()=>i});n(96540);const a=JSON.parse('{"mlflow.ag2":"api_reference/python_api/mlflow.ag2.html","mlflow.anthropic":"api_reference/python_api/mlflow.anthropic.html","mlflow.artifacts":"api_reference/python_api/mlflow.artifacts.html","mlflow.autogen":"api_reference/python_api/mlflow.autogen.html","mlflow.bedrock":"api_reference/python_api/mlflow.bedrock.html","mlflow.catboost":"api_reference/python_api/mlflow.catboost.html","mlflow.client":"api_reference/python_api/mlflow.client.html","mlflow.config":"api_reference/python_api/mlflow.config.html","mlflow.crewai":"api_reference/python_api/mlflow.crewai.html","mlflow.data":"api_reference/python_api/mlflow.data.html","mlflow.deployments":"api_reference/python_api/mlflow.deployments.html","mlflow.diviner":"api_reference/python_api/mlflow.diviner.html","mlflow.dspy":"api_reference/python_api/mlflow.dspy.html","mlflow.entities":"api_reference/python_api/mlflow.entities.html","mlflow.environment_variables":"api_reference/python_api/mlflow.environment_variables.html","mlflow.gateway":"api_reference/python_api/mlflow.gateway.html","mlflow.gemini":"api_reference/python_api/mlflow.gemini.html","mlflow.genai":"api_reference/python_api/mlflow.genai.html","mlflow.groq":"api_reference/python_api/mlflow.groq.html","mlflow.h2o":"api_reference/python_api/mlflow.h2o.html","mlflow.johnsnowlabs":"api_reference/python_api/mlflow.johnsnowlabs.html","mlflow.keras":"api_reference/python_api/mlflow.keras.html","mlflow.langchain":"api_reference/python_api/mlflow.langchain.html","mlflow.lightgbm":"api_reference/python_api/mlflow.lightgbm.html","mlflow.litellm":"api_reference/python_api/mlflow.litellm.html","mlflow.llama_index":"api_reference/python_api/mlflow.llama_index.html","mlflow.metrics":"api_reference/python_api/mlflow.metrics.html","mlflow.mistral":"api_reference/python_api/mlflow.mistral.html","mlflow.models":"api_reference/python_api/mlflow.models.html","mlflow.onnx":"api_reference/python_api/mlflow.onnx.html","mlflow.openai":"api_reference/python_api/mlflow.openai.html","mlflow.paddle":"api_reference/python_api/mlflow.paddle.html","mlflow.pmdarima":"api_reference/python_api/mlflow.pmdarima.html","mlflow.projects":"api_reference/python_api/mlflow.projects.html","mlflow.promptflow":"api_reference/python_api/mlflow.promptflow.html","mlflow.prophet":"api_reference/python_api/mlflow.prophet.html","mlflow.pydantic_ai":"api_reference/python_api/mlflow.pydantic_ai.html","mlflow.pyfunc":"api_reference/python_api/mlflow.pyfunc.html","mlflow.pyspark.ml":"api_reference/python_api/mlflow.pyspark.ml.html","mlflow.pytorch":"api_reference/python_api/mlflow.pytorch.html","mlflow":"api_reference/python_api/mlflow.html","mlflow.sagemaker":"api_reference/python_api/mlflow.sagemaker.html","mlflow.sentence_transformers":"api_reference/python_api/mlflow.sentence_transformers.html","mlflow.server":"api_reference/python_api/mlflow.server.html","mlflow.shap":"api_reference/python_api/mlflow.shap.html","mlflow.sklearn":"api_reference/python_api/mlflow.sklearn.html","mlflow.smolagents":"api_reference/python_api/mlflow.smolagents.html","mlflow.spacy":"api_reference/python_api/mlflow.spacy.html","mlflow.spark":"api_reference/python_api/mlflow.spark.html","mlflow.statsmodels":"api_reference/python_api/mlflow.statsmodels.html","mlflow.system_metrics":"api_reference/python_api/mlflow.system_metrics.html","mlflow.tensorflow":"api_reference/python_api/mlflow.tensorflow.html","mlflow.tracing":"api_reference/python_api/mlflow.tracing.html","mlflow.transformers":"api_reference/python_api/mlflow.transformers.html","mlflow.types":"api_reference/python_api/mlflow.types.html","mlflow.utils":"api_reference/python_api/mlflow.utils.html","mlflow.xgboost":"api_reference/python_api/mlflow.xgboost.html","mlflow.server.auth":"api_reference/auth/python-api.html","mlflow.server.cli":"api_reference/cli.html","mlflow.r":"api_reference/R-api.html","mlflow.java":"api_reference/java_api/index.html","mlflow.python":"api_reference/python_api/index.html","mlflow.rest":"api_reference/rest-api.html","mlflow.llms.deployments.api":"api_reference/llms/deployments/api.html"}');var l=n(86025),r=n(74848);const o=e=>{const t=e.split(".");for(let n=t.length;n>0;n--){const e=t.slice(0,n).join(".");if(a[e])return e}return null};function i({fn:e,children:t,hash:n}){const i=o(e);if(!i)return(0,r.jsx)(r.Fragment,{children:t});const s=(0,l.Ay)(`/${a[i]}#${n??e}`);return(0,r.jsx)("a",{href:s,target:"_blank",children:t??(0,r.jsxs)("code",{children:[e,"()"]})})}},66927:(e,t,n)=>{n.d(t,{A:()=>o});n(96540);const a={container:"container_JwLF",imageWrapper:"imageWrapper_RfGN",image:"image_bwOA",caption:"caption_jo2G"};var l=n(86025),r=n(74848);function o({src:e,alt:t,width:n,caption:o,className:i}){return(0,r.jsxs)("div",{className:`${a.container} ${i||""}`,children:[(0,r.jsx)("div",{className:a.imageWrapper,style:n?{width:n}:{},children:(0,r.jsx)("img",{src:(0,l.Ay)(e),alt:t,className:a.image})}),o&&(0,r.jsx)("p",{className:a.caption,children:o})]})}},69491:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>m,contentTitle:()=>u,default:()=>w,frontMatter:()=>h,metadata:()=>a,toc:()=>d});const a=JSON.parse('{"id":"tracing/quickstart/python-openai","title":"Tracing Quickstart (Python)","description":"The TypeScript/JavaScript quickstart is available here.","source":"@site/docs/genai/tracing/quickstart/python-openai.mdx","sourceDirName":"tracing/quickstart","slug":"/tracing/quickstart/python-openai","permalink":"/docs/latest/genai/tracing/quickstart/python-openai","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{},"sidebar":"genAISidebar","previous":{"title":"MLflow Tracing for LLM Observability","permalink":"/docs/latest/genai/tracing/"},"next":{"title":"Getting Started (TS/JS)","permalink":"/docs/latest/genai/tracing/quickstart/typescript-openai"}}');var l=n(74848),r=n(28453),o=n(11470),i=n(19365),s=n(49374),c=n(66927),p=n(47020);const h={},u="Tracing Quickstart (Python)",m={},d=[{value:"Prerequisites",id:"prerequisites",level:2},{value:"Step 1: Set up your environment",id:"step-1-set-up-your-environment",level:2},{value:"Connect to MLflow",id:"connect-to-mlflow",level:3},{value:"Create a new MLflow Experiment",id:"create-a-new-mlflow-experiment",level:3},{value:"Configure OpenAI API Key (or other LLM providers)",id:"configure-openai-api-key-or-other-llm-providers",level:3},{value:"Step 2: Trace a single LLM call",id:"step-2-trace-a-single-llm-call",level:2},{value:"Step 3: Trace a tool calling agent",id:"step-3-trace-a-tool-calling-agent",level:2},{value:"Step 4: Explore Traces in the UI",id:"step-4-explore-traces-in-the-ui",level:2},{value:"Step 5: Attach Feedbacks on Traces",id:"step-5-attach-feedbacks-on-traces",level:2},{value:"Summary",id:"summary",level:2},{value:"Next Steps",id:"next-steps",level:2}];function f(e){const t={a:"a",admonition:"admonition",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",p:"p",pre:"pre",ul:"ul",...(0,r.R)(),...e.components};return(0,l.jsxs)(l.Fragment,{children:[(0,l.jsx)(t.header,{children:(0,l.jsx)(t.h1,{id:"tracing-quickstart-python",children:"Tracing Quickstart (Python)"})}),"\n",(0,l.jsx)(t.admonition,{type:"info",children:(0,l.jsxs)(t.p,{children:["The TypeScript/JavaScript quickstart is available ",(0,l.jsx)("ins",{children:(0,l.jsx)(t.a,{href:"/genai/tracing/quickstart/typescript-openai",children:"here"})}),"."]})}),"\n",(0,l.jsx)(t.p,{children:"This quickstart guide will walk you through setting up a simple GenAI application with MLflow Tracing. In less than 10 minutes, you'll enable tracing, run a basic application, and explore the generated traces in the MLflow UI."}),"\n",(0,l.jsx)(t.h2,{id:"prerequisites",children:"Prerequisites"}),"\n",(0,l.jsx)(t.p,{children:"Install the required packages by running the following command:"}),"\n",(0,l.jsx)(t.pre,{children:(0,l.jsx)(t.code,{className:"language-bash",children:"pip install --upgrade mlflow openai>=1.0.0\n"})}),"\n",(0,l.jsx)(t.admonition,{type:"info",children:(0,l.jsx)(t.p,{children:"The code example in this guide uses the OpenAI SDK; however, the contents of this guide are applicable to any other LLM providers, such as Anthropic, Google, Bedrock, and more."})}),"\n",(0,l.jsx)(t.h2,{id:"step-1-set-up-your-environment",children:"Step 1: Set up your environment"}),"\n",(0,l.jsx)(t.h3,{id:"connect-to-mlflow",children:"Connect to MLflow"}),"\n",(0,l.jsx)(t.p,{children:"MLflow logs Traces in a tracking server. Connect your local environment to the tracking server by one of the following methods."}),"\n",(0,l.jsx)(p.A,{children:(0,l.jsxs)(o.A,{children:[(0,l.jsxs)(i.A,{value:"local",label:"Local MLflow",default:!0,children:[(0,l.jsx)(t.p,{children:"For the fastest setup, you can run MLflow locally:"}),(0,l.jsx)(t.pre,{children:(0,l.jsx)(t.code,{className:"language-bash",children:"# Start MLflow tracking server locally\nmlflow ui\n\n# This will start the server at http://127.0.0.1:5000\n"})})]}),(0,l.jsxs)(i.A,{value:"remote",label:"Remote MLflow Server",children:[(0,l.jsx)(t.p,{children:"If you have a remote MLflow tracking server, configure the connection:"}),(0,l.jsx)(t.pre,{children:(0,l.jsx)(t.code,{className:"language-python",children:'import os\nimport mlflow\n\n# Set your MLflow tracking URI\nos.environ["MLFLOW_TRACKING_URI"] = "http://your-mlflow-server:5000"\n# Or directly in code\nmlflow.set_tracking_uri("http://your-mlflow-server:5000")\n'})})]}),(0,l.jsxs)(i.A,{value:"databricks",label:"Databricks",children:[(0,l.jsx)(t.p,{children:"If you have a Databricks account, configure the connection:"}),(0,l.jsx)(t.pre,{children:(0,l.jsx)(t.code,{className:"language-python",children:"import mlflow\n\nmlflow.login()\n"})}),(0,l.jsx)(t.p,{children:"This will prompt you for your configuration details (Databricks Host url and a PAT)."})]})]})}),"\n",(0,l.jsx)(t.admonition,{type:"tip",children:(0,l.jsxs)(t.p,{children:["If you are unsure about how to set up an MLflow tracking server, you can start with the cloud-based MLflow powered by Databricks: ",(0,l.jsx)("ins",{children:(0,l.jsx)(t.a,{href:"https://login.databricks.com/?destination_url=%2Fml%2Fexperiments-signup%3Fsource%3DTRY_MLFLOW&dbx_source=TRY_MLFLOW&signup_experience_step=EXPRESS&provider=MLFLOW&utm_source=mlflow_org&tuuid=a9534f33-78bf-4b81-becc-4334e993251d&rl_aid=e6685d78-9f85-4fed-b64f-08e247f53547&intent=SIGN_UP",children:"Sign up for free \u2192"})})]})}),"\n",(0,l.jsx)(t.h3,{id:"create-a-new-mlflow-experiment",children:"Create a new MLflow Experiment"}),"\n",(0,l.jsx)(t.pre,{children:(0,l.jsx)(t.code,{className:"language-python",children:'import mlflow\n\n# This will create a new experiment called "Tracing Quickstart" and set it as active\nmlflow.set_experiment("Tracing Quickstart")\n'})}),"\n",(0,l.jsx)(t.h3,{id:"configure-openai-api-key-or-other-llm-providers",children:"Configure OpenAI API Key (or other LLM providers)"}),"\n",(0,l.jsx)(t.pre,{children:(0,l.jsx)(t.code,{className:"language-python",children:'import os\n\n# Use different env variable when using a different LLM provider\nos.environ["OPENAI_API_KEY"] = "your-api-key-here"  # Replace with your actual API key\n'})}),"\n",(0,l.jsx)(t.h2,{id:"step-2-trace-a-single-llm-call",children:"Step 2: Trace a single LLM call"}),"\n",(0,l.jsxs)(t.p,{children:["Let's start with a simple example of tracing a single LLM call. We first enable automatic tracing for OpenAI API calls by calling ",(0,l.jsx)(t.code,{children:"mlflow.openai.autolog()"}),". After that, every call to OpenAI API will generate a trace span, capturing the input, output, latency, token counts, and other metadata."]}),"\n",(0,l.jsx)(t.pre,{children:(0,l.jsx)(t.code,{className:"language-python",children:'import mlflow\nfrom openai import OpenAI\n\n# Enable automatic tracing for all OpenAI API calls\nmlflow.openai.autolog()\n\n# Instantiate the OpenAI client\nclient = OpenAI()\n\n# Invoke chat completion API\nresponse = client.chat.completions.create(\n    model="o4-mini",\n    messages=[\n        {"role": "system", "content": "You are a helpful weather assistant."},\n        {"role": "user", "content": "What\'s the weather like in Seattle?"},\n    ],\n)\n'})}),"\n",(0,l.jsx)(t.p,{children:'After running the code above, go to the MLflow UI and select the "Traces" tab. It should show the newly created trace.'}),"\n",(0,l.jsx)(c.A,{src:"/images/llms/tracing/quickstart/single-openai-trace-list.png",alt:"Single Trace"}),"\n",(0,l.jsx)(t.p,{children:"The table view shows the primary metadata of the trace, such as the trace ID, execution duration, token count, source system and status. You can add or remove displayed columns by selecting the columns in the drop down. By clicking on the request row (the linked request text), you can view the detailed spans in the trace."}),"\n",(0,l.jsx)(c.A,{src:"/images/llms/tracing/quickstart/single-openai-trace-detail.png",alt:"Single Trace Detail",width:"80%"}),"\n",(0,l.jsx)(t.p,{children:'The "Chat" view in the above screenshot shows the full chat messages exchanged between the user and the model. By clicking other tables such as "Inputs / Outputs" or "Attributes", you can see different aspects of the trace, including the raw input payload, token usage breakdown, and more.'}),"\n",(0,l.jsx)(t.h2,{id:"step-3-trace-a-tool-calling-agent",children:"Step 3: Trace a tool calling agent"}),"\n",(0,l.jsxs)(t.p,{children:["Next, let's add a bit more complexity to the application. To get the real-time weather information, we will use an external weather API as a tool. The application will include a tool calling flow, not only a simple LLM call. To instrument that custom Python flow, we will use the ",(0,l.jsx)(s.B,{fn:"mlflow.trace",children:(0,l.jsx)(t.code,{children:"@mlflow.trace"})})," decorator. Use of this simple decorator generates a span for the function call and automatically captures the function inputs, outputs, latency, and exceptions."]}),"\n",(0,l.jsx)(t.p,{children:"Let's define a Python function that fetches the weather information from a weather API."}),"\n",(0,l.jsx)(t.pre,{children:(0,l.jsx)(t.code,{className:"language-python",children:'import requests\n\n\n# Decorated with @mlflow.trace to trace the function call.\n@mlflow.trace(span_type=SpanType.TOOL)\ndef get_weather(latitude, longitude):\n    response = requests.get(\n        f"https://api.open-meteo.com/v1/forecast?latitude={latitude}&longitude={longitude}&current=temperature_2m,wind_speed_10m&hourly=temperature_2m,relative_humidity_2m,wind_speed_10m"\n    )\n    data = response.json()\n    return data["current"]["temperature_2m"]\n'})}),"\n",(0,l.jsx)(t.p,{children:"To pass the function as a tool to the LLM, we need to define the JSON schema for the function."}),"\n",(0,l.jsx)(t.pre,{children:(0,l.jsx)(t.code,{className:"language-python",children:'tools = [\n    {\n        "type": "function",\n        "function": {\n            "name": "get_weather",\n            "description": "Get current temperature for provided coordinates in celsius.",\n            "parameters": {\n                "type": "object",\n                "properties": {\n                    "latitude": {"type": "number"},\n                    "longitude": {"type": "number"},\n                },\n                "required": ["latitude", "longitude"],\n                "additionalProperties": False,\n            },\n            "strict": True,\n        },\n    }\n]\n'})}),"\n",(0,l.jsx)(t.p,{children:"Lastly, define a simple flow that first asks the LLM to get instructions for calling the tool, then invokes the tool function, and lastly returns the result to the LLM."}),"\n",(0,l.jsx)(t.pre,{children:(0,l.jsx)(t.code,{className:"language-python",children:'import json\n\n\n# Define a simple tool calling agent\n@mlflow.trace(span_type=SpanType.AGENT)\ndef run_tool_agent(question: str):\n    messages = [{"role": "user", "content": question}]\n\n    # Invoke the model with the given question and available tools\n    response = client.chat.completions.create(\n        model="o4-mini",\n        messages=messages,\n        tools=tools,\n    )\n    ai_msg = response.choices[0].message\n    messages.append(ai_msg)\n\n    # If the model requests tool call(s), invoke the function with the specified arguments\n    if tool_calls := ai_msg.tool_calls:\n        for tool_call in tool_calls:\n            function_name = tool_call.function.name\n            if function_name == "get_weather":\n                # Invoke the tool function with the provided arguments\n                args = json.loads(tool_call.function.arguments)\n                tool_result = get_weather(**args)\n            else:\n                raise RuntimeError("An invalid tool is returned from the assistant!")\n\n            messages.append(\n                {\n                    "role": "tool",\n                    "tool_call_id": tool_call.id,\n                    "content": str(tool_result),\n                }\n            )\n\n        # Sent the tool results to the model and get a new response\n        response = client.chat.completions.create(model="o4-mini", messages=messages)\n\n    return response.choices[0].message.content\n'})}),"\n",(0,l.jsx)(t.p,{children:"Now we can run the application."}),"\n",(0,l.jsx)(t.pre,{children:(0,l.jsx)(t.code,{className:"language-python",children:'# Run the tool calling agent\nquestion = "What\'s the weather like in Seattle?"\nanswer = run_tool_agent(question)\n'})}),"\n",(0,l.jsx)(t.h2,{id:"step-4-explore-traces-in-the-ui",children:"Step 4: Explore Traces in the UI"}),"\n",(0,l.jsx)(t.p,{children:"After running the application, you can explore the traces in the MLflow UI."}),"\n",(0,l.jsx)(c.A,{src:"/images/llms/tracing/quickstart/openai-tool-calling-trace-detail.png",alt:"Tool Calling Trace",width:"90%"}),"\n",(0,l.jsx)(t.p,{children:"The trace shows all LLM invocations and tool calls, organized in a tree structure. You can also inspect the timeline breakdown by clicking the timeline icon next to the tree view. This helps you understand where the time is spent in the application."}),"\n",(0,l.jsx)(c.A,{src:"/images/llms/tracing/quickstart/openai-tool-calling-trace-timeline.png",alt:"Tool Calling Trace Timeline",width:"90%"}),"\n",(0,l.jsx)(t.h2,{id:"step-5-attach-feedbacks-on-traces",children:"Step 5: Attach Feedbacks on Traces"}),"\n",(0,l.jsx)(t.p,{children:"As a last step of this quickstart, let's attach feedback on the generated traces. In real world development, human feedback is critical to improve the quality of any LLM-powered application."}),"\n",(0,l.jsx)(t.p,{children:'To add a feedback to a trace, you can open the trace detail page and click the "Add new Assessment" button on the top right. It will open an input form where you can provide various feedback values and metadata. For example, we can add feedback called "Quality" with an integer value (1~5), indicating how good the answer is. We can also put the detailed rationale behind the score for future reference.'}),"\n",(0,l.jsx)(c.A,{src:"/images/llms/tracing/quickstart/openai-trace-feedback-input.png",alt:"Feedback Input Form",width:"90%"}),"\n",(0,l.jsx)(t.p,{children:'When you submit the form with "Create" button, the feedback will be attached to the trace.'}),"\n",(0,l.jsx)(c.A,{src:"/images/llms/tracing/quickstart/openai-trace-feedback-record.png",alt:"Feedback List",width:"90%"}),"\n",(0,l.jsx)(t.p,{children:"The aggregated score in the experiment can be seen in the Trace list. You can do slice-and-dice by various criteria, such as timestamp, source, tags, and it will update the aggregated score in real-time."}),"\n",(0,l.jsx)(c.A,{src:"/images/llms/tracing/quickstart/openai-trace-feedback-aggregate.png",alt:"Feedback Aggregated",width:"90%"}),"\n",(0,l.jsx)(t.h2,{id:"summary",children:"Summary"}),"\n",(0,l.jsx)(t.p,{children:"Congratulations! You've successfully:"}),"\n",(0,l.jsxs)(t.ul,{children:["\n",(0,l.jsx)(t.li,{children:"\u2705 Set up MLflow Tracing for a GenAI application"}),"\n",(0,l.jsx)(t.li,{children:"\u2705 Enabled automatic tracing for OpenAI API calls"}),"\n",(0,l.jsx)(t.li,{children:"\u2705 Generated and explored traces in the MLflow UI"}),"\n",(0,l.jsx)(t.li,{children:"\u2705 Learned how to add custom tracing using decorators"}),"\n",(0,l.jsx)(t.li,{children:"\u2705 Learned how to attach feedback on traces"}),"\n"]}),"\n",(0,l.jsx)(t.p,{children:"MLflow Tracing provides powerful observability for your GenAI applications, helping you monitor performance, debug issues, and understand user interactions. Continue exploring the advanced features to get the most out of your tracing setup!"}),"\n",(0,l.jsx)(t.h2,{id:"next-steps",children:"Next Steps"}),"\n",(0,l.jsx)(t.p,{children:"Now that you have basic tracing working, explore these advanced features:"}),"\n",(0,l.jsxs)(t.ul,{children:["\n",(0,l.jsxs)(t.li,{children:[(0,l.jsx)(t.a,{href:"/genai/tracing/integrations/",children:"Integration with Other Libraries"}),": Use MLflow Tracing with other LLM providers and frameworks, such as LangGraph, Pydantic AI."]}),"\n",(0,l.jsxs)(t.li,{children:[(0,l.jsx)(t.a,{href:"/genai/eval-monitor",children:"Automatic Evaluation"}),": Learn how to set up automatic evaluation for traces using MLflow's GenAI evaluation feature."]}),"\n",(0,l.jsxs)(t.li,{children:[(0,l.jsx)(t.a,{href:"/genai/tracing/prod-tracing",children:"Production Monitoring"}),": Learn how to use MLflow Tracing in production set up with the optimized SDK."]}),"\n"]})]})}function w(e={}){const{wrapper:t}={...(0,r.R)(),...e.components};return t?(0,l.jsx)(t,{...e,children:(0,l.jsx)(f,{...e})}):f(e)}}}]);