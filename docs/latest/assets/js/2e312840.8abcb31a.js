"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[2722],{28453:(e,l,t)=>{t.d(l,{R:()=>i,x:()=>r});var n=t(96540);const o={},a=n.createContext(o);function i(e){const l=n.useContext(a);return n.useMemo(function(){return"function"==typeof e?e(l):{...l,...e}},[l,e])}function r(e){let l;return l=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:i(e.components),n.createElement(a.Provider,{value:l},e.children)}},28538:(e,l,t)=>{t.d(l,{A:()=>n});const n=t.p+"assets/images/smolagents-tracing-ce4f2c411221b1c5d54a65e704e6a945.png"},49374:(e,l,t)=>{t.d(l,{B:()=>r});t(96540);const n=JSON.parse('{"mlflow.ag2":"api_reference/python_api/mlflow.ag2.html","mlflow.anthropic":"api_reference/python_api/mlflow.anthropic.html","mlflow.artifacts":"api_reference/python_api/mlflow.artifacts.html","mlflow.autogen":"api_reference/python_api/mlflow.autogen.html","mlflow.bedrock":"api_reference/python_api/mlflow.bedrock.html","mlflow.catboost":"api_reference/python_api/mlflow.catboost.html","mlflow.client":"api_reference/python_api/mlflow.client.html","mlflow.config":"api_reference/python_api/mlflow.config.html","mlflow.crewai":"api_reference/python_api/mlflow.crewai.html","mlflow.data":"api_reference/python_api/mlflow.data.html","mlflow.deployments":"api_reference/python_api/mlflow.deployments.html","mlflow.diviner":"api_reference/python_api/mlflow.diviner.html","mlflow.dspy":"api_reference/python_api/mlflow.dspy.html","mlflow.entities":"api_reference/python_api/mlflow.entities.html","mlflow.environment_variables":"api_reference/python_api/mlflow.environment_variables.html","mlflow.gateway":"api_reference/python_api/mlflow.gateway.html","mlflow.gemini":"api_reference/python_api/mlflow.gemini.html","mlflow.genai":"api_reference/python_api/mlflow.genai.html","mlflow.groq":"api_reference/python_api/mlflow.groq.html","mlflow.h2o":"api_reference/python_api/mlflow.h2o.html","mlflow.johnsnowlabs":"api_reference/python_api/mlflow.johnsnowlabs.html","mlflow.keras":"api_reference/python_api/mlflow.keras.html","mlflow.langchain":"api_reference/python_api/mlflow.langchain.html","mlflow.lightgbm":"api_reference/python_api/mlflow.lightgbm.html","mlflow.litellm":"api_reference/python_api/mlflow.litellm.html","mlflow.llama_index":"api_reference/python_api/mlflow.llama_index.html","mlflow.metrics":"api_reference/python_api/mlflow.metrics.html","mlflow.mistral":"api_reference/python_api/mlflow.mistral.html","mlflow.models":"api_reference/python_api/mlflow.models.html","mlflow.onnx":"api_reference/python_api/mlflow.onnx.html","mlflow.openai":"api_reference/python_api/mlflow.openai.html","mlflow.paddle":"api_reference/python_api/mlflow.paddle.html","mlflow.pmdarima":"api_reference/python_api/mlflow.pmdarima.html","mlflow.projects":"api_reference/python_api/mlflow.projects.html","mlflow.promptflow":"api_reference/python_api/mlflow.promptflow.html","mlflow.prophet":"api_reference/python_api/mlflow.prophet.html","mlflow.pydantic_ai":"api_reference/python_api/mlflow.pydantic_ai.html","mlflow.pyfunc":"api_reference/python_api/mlflow.pyfunc.html","mlflow.pyspark.ml":"api_reference/python_api/mlflow.pyspark.ml.html","mlflow.pytorch":"api_reference/python_api/mlflow.pytorch.html","mlflow":"api_reference/python_api/mlflow.html","mlflow.sagemaker":"api_reference/python_api/mlflow.sagemaker.html","mlflow.sentence_transformers":"api_reference/python_api/mlflow.sentence_transformers.html","mlflow.server":"api_reference/python_api/mlflow.server.html","mlflow.shap":"api_reference/python_api/mlflow.shap.html","mlflow.sklearn":"api_reference/python_api/mlflow.sklearn.html","mlflow.smolagents":"api_reference/python_api/mlflow.smolagents.html","mlflow.spacy":"api_reference/python_api/mlflow.spacy.html","mlflow.spark":"api_reference/python_api/mlflow.spark.html","mlflow.statsmodels":"api_reference/python_api/mlflow.statsmodels.html","mlflow.system_metrics":"api_reference/python_api/mlflow.system_metrics.html","mlflow.tensorflow":"api_reference/python_api/mlflow.tensorflow.html","mlflow.tracing":"api_reference/python_api/mlflow.tracing.html","mlflow.transformers":"api_reference/python_api/mlflow.transformers.html","mlflow.types":"api_reference/python_api/mlflow.types.html","mlflow.utils":"api_reference/python_api/mlflow.utils.html","mlflow.xgboost":"api_reference/python_api/mlflow.xgboost.html","mlflow.server.auth":"api_reference/auth/python-api.html","mlflow.server.cli":"api_reference/cli.html","mlflow.r":"api_reference/R-api.html","mlflow.java":"api_reference/java_api/index.html","mlflow.python":"api_reference/python_api/index.html","mlflow.rest":"api_reference/rest-api.html","mlflow.llms.deployments.api":"api_reference/llms/deployments/api.html"}');var o=t(86025),a=t(74848);const i=e=>{const l=e.split(".");for(let t=l.length;t>0;t--){const e=l.slice(0,t).join(".");if(n[e])return e}return null};function r({fn:e,children:l,hash:t}){const r=i(e);if(!r)return(0,a.jsx)(a.Fragment,{children:l});const s=(0,o.Ay)(`/${n[r]}#${t??e}`);return(0,a.jsx)("a",{href:s,target:"_blank",children:l??(0,a.jsxs)("code",{children:[e,"()"]})})}},53678:(e,l,t)=>{t.r(l),t.d(l,{assets:()=>m,contentTitle:()=>s,default:()=>c,frontMatter:()=>r,metadata:()=>n,toc:()=>p});const n=JSON.parse('{"id":"tracing/integrations/listing/smolagents","title":"Tracing Smolagents","description":"Smolagents tracing via autolog","source":"@site/docs/genai/tracing/integrations/listing/smolagents.mdx","sourceDirName":"tracing/integrations/listing","slug":"/tracing/integrations/listing/smolagents","permalink":"/mlflow-website/docs/latest/genai/tracing/integrations/listing/smolagents","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":11,"frontMatter":{"sidebar_position":11,"sidebar_label":"Smolagents"},"sidebar":"genAISidebar","previous":{"title":"Groq","permalink":"/mlflow-website/docs/latest/genai/tracing/integrations/listing/groq"},"next":{"title":"Instructor","permalink":"/mlflow-website/docs/latest/genai/tracing/integrations/listing/instructor"}}');var o=t(74848),a=t(28453),i=t(49374);const r={sidebar_position:11,sidebar_label:"Smolagents"},s="Tracing Smolagents",m={},p=[{value:"Example Usage",id:"example-usage",level:3},{value:"Token usage",id:"token-usage",level:2},{value:"Disable auto-tracing",id:"disable-auto-tracing",level:2}];function f(e){const l={code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",img:"img",p:"p",pre:"pre",...(0,a.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(l.header,{children:(0,o.jsx)(l.h1,{id:"tracing-smolagents",children:"Tracing Smolagents"})}),"\n",(0,o.jsx)(l.p,{children:(0,o.jsx)(l.img,{alt:"Smolagents tracing via autolog",src:t(28538).A+"",width:"1908",height:"805"})}),"\n",(0,o.jsxs)(l.p,{children:["MLflow Tracing provides automatic tracing capability when using Smolagents.\nWhen Smolagents auto-tracing is enabled by calling the ",(0,o.jsx)(i.B,{fn:"mlflow.smolagents.autolog"})," function,\nusage of the Smolagents SDK will automatically record generated traces during interactive development."]}),"\n",(0,o.jsx)(l.p,{children:"Note that only synchronous calls are supported, and that asynchronous API and streaming methods are not traced."}),"\n",(0,o.jsx)(l.h3,{id:"example-usage",children:"Example Usage"}),"\n",(0,o.jsx)(l.pre,{children:(0,o.jsx)(l.code,{className:"language-python",children:'from smolagents import CodeAgent, LiteLLMModel\nimport mlflow\n\n# Turn on auto tracing for Smolagents by calling mlflow.smolagents.autolog()\nmlflow.smolagents.autolog()\n\nmodel = LiteLLMModel(model_id="openai/gpt-4o-mini", api_key=API_KEY)\nagent = CodeAgent(tools=[], model=model, add_base_tools=True)\n\nresult = agent.run(\n    "Could you give me the 118th number in the Fibonacci sequence?",\n)\n'})}),"\n",(0,o.jsx)(l.h2,{id:"token-usage",children:"Token usage"}),"\n",(0,o.jsxs)(l.p,{children:["MLflow >= 3.2.0 supports token usage tracking for Smolagents. The token usage for each LLM call will be logged in the ",(0,o.jsx)(l.code,{children:"mlflow.chat.tokenUsage"})," attribute. The total token usage throughout the trace will be\navailable in the ",(0,o.jsx)(l.code,{children:"token_usage"})," field of the trace info object."]}),"\n",(0,o.jsx)(l.pre,{children:(0,o.jsx)(l.code,{className:"language-python",children:'import json\nimport mlflow\n\nmlflow.smolagents.autolog()\n\nmodel = LiteLLMModel(model_id="openai/gpt-4o-mini", api_key=API_KEY)\nagent = CodeAgent(tools=[], model=model, add_base_tools=True)\n\nresult = agent.run(\n    "Could you give me the 118th number in the Fibonacci sequence?",\n)\n\n# Get the trace object just created\nlast_trace_id = mlflow.get_last_active_trace_id()\ntrace = mlflow.get_trace(trace_id=last_trace_id)\n\n# Print the token usage\ntotal_usage = trace.info.token_usage\nprint("== Total token usage: ==")\nprint(f"  Input tokens: {total_usage[\'input_tokens\']}")\nprint(f"  Output tokens: {total_usage[\'output_tokens\']}")\nprint(f"  Total tokens: {total_usage[\'total_tokens\']}")\n\n# Print the token usage for each LLM call\nprint("\\n== Detailed usage for each LLM call: ==")\nfor span in trace.data.spans:\n    if usage := span.get_attribute("mlflow.chat.tokenUsage"):\n        print(f"{span.name}:")\n        print(f"  Input tokens: {usage[\'input_tokens\']}")\n        print(f"  Output tokens: {usage[\'output_tokens\']}")\n        print(f"  Total tokens: {usage[\'total_tokens\']}")\n'})}),"\n",(0,o.jsx)(l.pre,{children:(0,o.jsx)(l.code,{className:"language-bash",children:"== Total token usage: ==\n  Input tokens: 4360\n  Output tokens: 185\n  Total tokens: 4545\n\n== Detailed usage for each LLM call: ==\nLiteLLMModel.__call___1:\n  Input tokens: 2047\n  Output tokens: 124\n  Total tokens: 2171\nLiteLLMModel.__call___2:\n  Input tokens: 2313\n  Output tokens: 61\n  Total tokens: 2374\n"})}),"\n",(0,o.jsx)(l.h2,{id:"disable-auto-tracing",children:"Disable auto-tracing"}),"\n",(0,o.jsxs)(l.p,{children:["Auto tracing for Smolagents can be disabled globally by calling ",(0,o.jsx)(l.code,{children:"mlflow.smolagents.autolog(disable=True)"})," or ",(0,o.jsx)(l.code,{children:"mlflow.autolog(disable=True)"}),"."]})]})}function c(e={}){const{wrapper:l}={...(0,a.R)(),...e.components};return l?(0,o.jsx)(l,{...e,children:(0,o.jsx)(f,{...e})}):f(e)}}}]);