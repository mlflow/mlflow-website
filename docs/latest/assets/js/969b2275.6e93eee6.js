"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[7040],{28453:(e,n,l)=>{l.d(n,{R:()=>a,x:()=>r});var t=l(96540);const o={},i=t.createContext(o);function a(e){const n=t.useContext(i);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function r(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:a(e.components),t.createElement(i.Provider,{value:n},e.children)}},43472:(e,n,l)=>{l.r(n),l.d(n,{assets:()=>m,contentTitle:()=>d,default:()=>f,frontMatter:()=>s,metadata:()=>t,toc:()=>c});const t=JSON.parse('{"id":"community-model-flavors/index","title":"Community Model Flavors","description":"Other useful MLflow flavors are developed and maintained by the","source":"@site/docs/community-model-flavors/index.mdx","sourceDirName":"community-model-flavors","slug":"/community-model-flavors/","permalink":"/docs/latest/community-model-flavors/","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":27,"frontMatter":{"sidebar_position":27,"displayed_sidebar":"docsSidebar"},"sidebar":"docsSidebar"}');var o=l(74848),i=l(28453),a=l(61096),r=l(67756);const s={sidebar_position:27,displayed_sidebar:"docsSidebar"},d="Community Model Flavors",m={},c=[{value:"MLflow VizMod",id:"mlflow-vizmod",level:2},{value:"BigML (<code>bigmlflow</code>)",id:"bigml-bigmlflow",level:2},{value:"Installing bigmlflow",id:"installing-bigmlflow",level:3},{value:"BigMLFlow usage",id:"bigmlflow-usage",level:3},{value:"Sktime",id:"sktime",level:2},{value:"Installing Sktime",id:"installing-sktime",level:3},{value:"Usage example",id:"usage-example",level:3},{value:"MLflavors",id:"mlflavors",level:2},{value:"Documentation",id:"documentation",level:3},{value:"Installation",id:"installation",level:3},{value:"Quickstart",id:"quickstart",level:3},{value:"Saving the model as an MLflow artifact",id:"saving-the-model-as-an-mlflow-artifact",level:4},{value:"Loading the model from MLflow",id:"loading-the-model-from-mlflow",level:4},{value:"Serving the model using an endpoint",id:"serving-the-model-using-an-endpoint",level:4}];function h(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",h4:"h4",header:"header",p:"p",pre:"pre",...(0,i.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(n.header,{children:(0,o.jsx)(n.h1,{id:"community-model-flavors",children:"Community Model Flavors"})}),"\n",(0,o.jsx)(n.p,{children:"Other useful MLflow flavors are developed and maintained by the\nMLflow community, enabling you to use MLflow Models with an\neven broader ecosystem of machine learning libraries. For more information,\ncheck out the description of each community-developed flavor below."}),"\n",(0,o.jsx)(a.A,{toc:c,maxHeadingLevel:2,minHeadingLevel:2}),"\n",(0,o.jsx)(n.h2,{id:"mlflow-vizmod",children:"MLflow VizMod"}),"\n",(0,o.jsxs)(n.p,{children:["The ",(0,o.jsx)(n.a,{href:"https://github.com/JHibbard/mlflow-vizmod/",children:"mlflow-vizmod"})," project allows data scientists\nto be more productive with their visualizations. We treat visualizations as models - just like ML\nmodels - thus being able to use the same infrastructure as MLflow to track, create projects,\nregister, and deploy visualizations."]}),"\n",(0,o.jsx)(n.p,{children:"Installation:"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-bash",children:"pip install mlflow-vizmod\n"})}),"\n",(0,o.jsx)(n.p,{children:"Example:"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-python",children:'from sklearn.datasets import load_iris\nimport altair as alt\nimport mlflow_vismod\n\ndf_iris = load_iris(as_frame=True)\n\nviz_iris = (\n    alt.Chart(df_iris)\n    .mark_circle(size=60)\n    .encode(x="x", y="y", color="z:N")\n    .properties(height=375, width=575)\n    .interactive()\n)\n\nmlflow_vismod.log_model(\n    model=viz_iris,\n    artifact_path="viz",\n    style="vegalite",\n    input_example=df_iris.head(5),\n)\n'})}),"\n",(0,o.jsxs)(n.h2,{id:"bigml-bigmlflow",children:["BigML (",(0,o.jsx)(n.code,{children:"bigmlflow"}),")"]}),"\n",(0,o.jsxs)(n.p,{children:["The ",(0,o.jsx)(n.a,{href:"https://github.com/bigmlcom/bigmlflow",children:"bigmlflow"})," library implements\nthe ",(0,o.jsx)(n.code,{children:"bigml"})," model flavor. It enables using\n",(0,o.jsx)(n.a,{href:"https://bigml.readthedocs.io/en/latest/local_resources.html",children:"BigML supervised models"}),"\nand offers the ",(0,o.jsx)(n.code,{children:"save_model()"}),", ",(0,o.jsx)(n.code,{children:"log_model()"})," and ",(0,o.jsx)(n.code,{children:"load_model()"})," methods."]}),"\n",(0,o.jsx)(n.h3,{id:"installing-bigmlflow",children:"Installing bigmlflow"}),"\n",(0,o.jsx)(n.p,{children:"BigMLFlow can be installed from PyPI as follows:"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-bash",children:"pip install bigmlflow\n"})}),"\n",(0,o.jsx)(n.h3,{id:"bigmlflow-usage",children:"BigMLFlow usage"}),"\n",(0,o.jsxs)(n.p,{children:["The ",(0,o.jsx)(n.code,{children:"bigmlflow"})," module defines the flavor that implements the\n",(0,o.jsx)(n.code,{children:"save_model()"})," and ",(0,o.jsx)(n.code,{children:"log_model()"})," methods. They can be used\nto save BigML models and their related information in MLflow Model format."]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-python",children:'import json\nimport mlflow\nimport bigmlflow\n\nMODEL_FILE = "logistic_regression.json"\nwith mlflow.start_run():\n    with open(MODEL_FILE) as handler:\n        model = json.load(handler)\n        bigmlflow.log_model(\n            model, artifact_path="model", registered_model_name="my_model"\n        )\n'})}),"\n",(0,o.jsxs)(n.p,{children:["These methods also add the ",(0,o.jsx)(n.code,{children:"python_function"})," flavor to the MLflow Models\nthat they produce, allowing the models to be interpreted as generic Python\nfunctions for inference via ",(0,o.jsx)(r.B,{fn:"mlflow.pyfunc.load_model"}),".\nThis loaded PyFunc model can only be scored with DataFrame inputs."]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-python",children:"# saving the model\nsave_model(model, path=model_path)\n# retrieving model\npyfunc_model = pyfunc.load_model(model_path)\npyfunc_predictions = pyfunc_model.predict(dataframe)\n"})}),"\n",(0,o.jsxs)(n.p,{children:["You can also use the ",(0,o.jsx)(n.code,{children:"bigmlflow.load_model()"})," method to load MLflow Models\nwith the ",(0,o.jsx)(n.code,{children:"bigmlflow"})," model flavor as a BigML\n",(0,o.jsx)(n.a,{href:"https://bigml.readthedocs.io/en/latest/local_resources.html#local-supervised-model",children:"SupervisedModel"}),"."]}),"\n",(0,o.jsxs)(n.p,{children:["For more information, see the\n",(0,o.jsx)(n.a,{href:"https://bigmlflow.readthedocs.io/en/latest",children:"BigMLFlow documentation"}),"\nand ",(0,o.jsx)(n.a,{href:"https://blog.bigml.com/2022/10/25/easily-operating-machine-learning-models",children:"BigML's blog"}),"."]}),"\n",(0,o.jsx)(n.h2,{id:"sktime",children:"Sktime"}),"\n",(0,o.jsxs)(n.p,{children:["The ",(0,o.jsx)(n.code,{children:"sktime"})," custom model flavor enables logging of ",(0,o.jsx)(n.a,{href:"https://github.com/sktime/sktime",children:"sktime"})," models in MLflow\nformat via the ",(0,o.jsx)(n.code,{children:"save_model()"})," and ",(0,o.jsx)(n.code,{children:"log_model()"})," methods. These methods also add the ",(0,o.jsx)(n.code,{children:"python_function"})," flavor to\nthe MLflow Models that they produce, allowing the model to be interpreted as generic Python functions for inference\nvia ",(0,o.jsx)(r.B,{fn:"mlflow.pyfunc.load_model"}),". This loaded PyFunc model can only be scored with a DataFrame input.\nYou can also use the ",(0,o.jsx)(n.code,{children:"load_model()"})," method to load MLflow Models with the ",(0,o.jsx)(n.code,{children:"sktime"})," model flavor in native sktime formats."]}),"\n",(0,o.jsx)(n.h3,{id:"installing-sktime",children:"Installing Sktime"}),"\n",(0,o.jsx)(n.p,{children:"Install sktime with mlflow dependency:"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-bash",children:"pip install sktime[mlflow]\n"})}),"\n",(0,o.jsx)(n.h3,{id:"usage-example",children:"Usage example"}),"\n",(0,o.jsxs)(n.p,{children:["Refer to the ",(0,o.jsx)(n.a,{href:"https://www.sktime.net/en/latest/api_reference/deployment.html",children:"sktime mlflow documentation"})," for details\non the interface for utilizing sktime models loaded as a pyfunc type and an ",(0,o.jsx)(n.a,{href:"https://github.com/sktime/sktime/blob/main/examples/mlflow.ipynb",children:"example notebook"}),"\nfor extended code usage examples."]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-python",children:'import pandas as pd\n\nfrom sktime.datasets import load_airline\nfrom sktime.forecasting.arima import AutoARIMA\nfrom sktime.utils import mlflow_sktime\n\nairline = load_airline()\nmodel_path = "model"\n\n\nauto_arima_model = AutoARIMA(sp=12, d=0, max_p=2, max_q=2, suppress_warnings=True).fit(\n    airline, fh=[1, 2, 3]\n)\n\nmlflow_sktime.save_model(\n    sktime_model=auto_arima_model,\n    path=model_path,\n)\n\nloaded_model = mlflow_sktime.load_model(\n    model_uri=model_path,\n)\nloaded_pyfunc = mlflow_sktime.pyfunc.load_model(\n    model_uri=model_path,\n)\n\nprint(loaded_model.predict())\nprint(loaded_pyfunc.predict(pd.DataFrame()))\n'})}),"\n",(0,o.jsx)(n.h2,{id:"mlflavors",children:"MLflavors"}),"\n",(0,o.jsxs)(n.p,{children:["The ",(0,o.jsx)(n.a,{href:"https://github.com/ml-toolkits/mlflavors",children:"MLflavors"})," package adds MLflow support for some\npopular machine learning frameworks currently not considered for inclusion as MLflow built-in\nflavors. Similar to the built-in flavors, you can use this package to save your model as an MLflow\nartifact, load your model from MLflow for batch inference, and deploy your model to a serving\nendpoint using MLflow deployment tools."]}),"\n",(0,o.jsx)(n.p,{children:"The following open-source libraries are currently supported:"}),"\n",(0,o.jsxs)("table",{children:[(0,o.jsx)("thead",{children:(0,o.jsxs)("tr",{children:[(0,o.jsx)("th",{children:"Framework"}),(0,o.jsx)("th",{children:"Tutorials"}),(0,o.jsx)("th",{children:"Category"})]})}),(0,o.jsxs)("tbody",{children:[(0,o.jsxs)("tr",{children:[(0,o.jsx)("td",{children:(0,o.jsx)(n.a,{href:"https://github.com/uber/orbit",children:"Orbit"})}),(0,o.jsx)("td",{children:(0,o.jsx)(n.a,{href:"https://mlflavors.readthedocs.io/en/latest/examples.html#orbit",children:"MLflow-Orbit"})}),(0,o.jsx)("td",{children:"Time Series Forecasting"})]}),(0,o.jsxs)("tr",{children:[(0,o.jsx)("td",{children:(0,o.jsx)(n.a,{href:"https://github.com/sktime/sktime",children:"Sktime"})}),(0,o.jsx)("td",{children:(0,o.jsx)(n.a,{href:"https://mlflavors.readthedocs.io/en/latest/examples.html#sktime",children:"MLflow-Sktime"})}),(0,o.jsx)("td",{children:"Time Series Forecasting"})]}),(0,o.jsxs)("tr",{children:[(0,o.jsx)("td",{children:(0,o.jsx)(n.a,{href:"https://github.com/Nixtla/statsforecast",children:"StatsForecast"})}),(0,o.jsx)("td",{children:(0,o.jsx)(n.a,{href:"https://mlflavors.readthedocs.io/en/latest/examples.html#statsforecast",children:"MLflow-StatsForecast"})}),(0,o.jsx)("td",{children:"Time Series Forecasting"})]}),(0,o.jsxs)("tr",{children:[(0,o.jsx)("td",{children:(0,o.jsx)(n.a,{href:"https://github.com/yzhao062/pyod",children:"PyOD"})}),(0,o.jsx)("td",{children:(0,o.jsx)(n.a,{href:"https://mlflavors.readthedocs.io/en/latest/examples.html#pyod",children:"MLflow-PyOD"})}),(0,o.jsx)("td",{children:"Anomaly Detection"})]}),(0,o.jsxs)("tr",{children:[(0,o.jsx)("td",{children:(0,o.jsx)(n.a,{href:"https://github.com/sdv-dev/SDV",children:"SDV"})}),(0,o.jsx)("td",{children:(0,o.jsx)(n.a,{href:"https://mlflavors.readthedocs.io/en/latest/examples.html#sdv",children:"MLflow-SDV"})}),(0,o.jsx)("td",{children:"Synthetic Data Generation"})]})]})]}),"\n",(0,o.jsxs)(n.p,{children:["The interface design for the supported frameworks is similar to many of the existing built-in\nflavors. Particularly, the interface for utilizing the custom model loaded as a ",(0,o.jsx)(n.code,{children:"pyfunc"})," flavor\nfor generating predictions uses a single-row Pandas DataFrame configuration argument to expose the\nparameters of the flavor's inference API."]}),"\n",(0,o.jsx)(n.h3,{id:"documentation",children:"Documentation"}),"\n",(0,o.jsxs)(n.p,{children:["Usage examples for all flavors and the API reference can be found in the package\n",(0,o.jsx)(n.a,{href:"https://mlflavors.readthedocs.io/en/latest/index.html",children:"documentation"}),"."]}),"\n",(0,o.jsx)(n.h3,{id:"installation",children:"Installation"}),"\n",(0,o.jsx)(n.p,{children:"Installing from PyPI:"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-bash",children:"$ pip install mlflavors\n"})}),"\n",(0,o.jsx)(n.h3,{id:"quickstart",children:"Quickstart"}),"\n",(0,o.jsxs)(n.p,{children:["This example trains a ",(0,o.jsx)(n.a,{href:"https://github.com/yzhao062/pyod",children:"PyOD"})," KNN outlier detection\nmodel using a synthetic dataset. A new MLflow experiment is created to log the evaluation\nmetrics and the trained model as an artifact and anomaly scores are computed loading the\ntrained model in native flavor and ",(0,o.jsx)(n.code,{children:"pyfunc"})," flavor. Finally, the model is served\nfor real-time inference using a local endpoint."]}),"\n",(0,o.jsx)(n.h4,{id:"saving-the-model-as-an-mlflow-artifact",children:"Saving the model as an MLflow artifact"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-python",children:'import json\n\nimport mlflow\nimport pandas as pd\nfrom pyod.models.knn import KNN\nfrom pyod.utils.data import generate_data\nfrom sklearn.metrics import roc_auc_score\n\nimport mlflavors\n\nARTIFACT_PATH = "model"\n\nwith mlflow.start_run() as run:\n    contamination = 0.1  # percentage of outliers\n    n_train = 200  # number of training points\n    n_test = 100  # number of testing points\n\n    X_train, X_test, _, y_test = generate_data(\n        n_train=n_train, n_test=n_test, contamination=contamination\n    )\n\n    # Train kNN detector\n    clf = KNN()\n    clf.fit(X_train)\n\n    # Evaluate model\n    y_test_scores = clf.decision_function(X_test)\n\n    metrics = {\n        "roc": roc_auc_score(y_test, y_test_scores),\n    }\n\n    print(f"Metrics: \\n{json.dumps(metrics, indent=2)}")\n\n    # Log metrics\n    mlflow.log_metrics(metrics)\n\n    # Log model using pickle serialization (default).\n    mlflavors.pyod.log_model(\n        pyod_model=clf,\n        artifact_path=ARTIFACT_PATH,\n        serialization_format="pickle",\n    )\n    model_uri = mlflow.get_artifact_uri(ARTIFACT_PATH)\n\n# Print the run id which is used below for serving the model to a local REST API endpoint\nprint(f"\\nMLflow run id:\\n{run.info.run_id}")\n'})}),"\n",(0,o.jsx)(n.h4,{id:"loading-the-model-from-mlflow",children:"Loading the model from MLflow"}),"\n",(0,o.jsx)(n.p,{children:"Make a prediction loading the model from MLflow in native format:"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-python",children:"loaded_model = mlflavors.pyod.load_model(model_uri=model_uri)\nprint(loaded_model.decision_function(X_test))\n"})}),"\n",(0,o.jsxs)(n.p,{children:["Make a prediction loading the model from MLflow in ",(0,o.jsx)(n.code,{children:"pyfunc"})," format:"]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-python",children:'loaded_pyfunc = mlflavors.pyod.pyfunc.load_model(model_uri=model_uri)\n\n# Create configuration DataFrame\npredict_conf = pd.DataFrame(\n    [\n        {\n            "X": X_test,\n            "predict_method": "decision_function",\n        }\n    ]\n)\n\nprint(loaded_pyfunc.predict(predict_conf)[0])\n'})}),"\n",(0,o.jsx)(n.h4,{id:"serving-the-model-using-an-endpoint",children:"Serving the model using an endpoint"}),"\n",(0,o.jsx)(n.p,{children:"To serve the model using a local REST API endpoint run the command below where you substitute\nthe run id printed above:"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-bash",children:"mlflow models serve -m runs:/<run_id>/model --env-manager local --host 127.0.0.1\n"})}),"\n",(0,o.jsxs)(n.p,{children:["Similarly, you could serve the model using an endpoint in the cloud (e.g. Azure ML, AWS SageMaker,\netc.) using\n",(0,o.jsx)(n.a,{href:"https://mlflow.org/docs/latest/models.html#built-in-deployment",children:"MLflow deployment tools"}),".\nOpen a new terminal and run the below model scoring script to request a prediction from the served\nmodel:"]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-python",children:'import pandas as pd\nimport requests\nfrom pyod.utils.data import generate_data\n\ncontamination = 0.1  # percentage of outliers\nn_train = 200  # number of training points\nn_test = 100  # number of testing points\n\n_, X_test, _, _ = generate_data(\n    n_train=n_train, n_test=n_test, contamination=contamination\n)\n\n# Define local host and endpoint url\nhost = "127.0.0.1"\nurl = f"http://{host}:5000/invocations"\n\n# Convert to list for JSON serialization\nX_test_list = X_test.tolist()\n\n# Create configuration DataFrame\npredict_conf = pd.DataFrame(\n    [\n        {\n            "X": X_test_list,\n            "predict_method": "decision_function",\n        }\n    ]\n)\n\n# Create dictionary with pandas DataFrame in the split orientation\njson_data = {"dataframe_split": predict_conf.to_dict(orient="split")}\n\n# Score model\nresponse = requests.post(url, json=json_data)\nprint(response.json())\n'})})]})}function f(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,o.jsx)(n,{...e,children:(0,o.jsx)(h,{...e})}):h(e)}},61096:(e,n,l)=>{l.d(n,{A:()=>a});l(96540);var t=l(71021);const o={tableOfContentsInline:"tableOfContentsInline_prmo"};var i=l(74848);function a(e){let{toc:n,minHeadingLevel:l,maxHeadingLevel:a}=e;return(0,i.jsx)("div",{className:o.tableOfContentsInline,children:(0,i.jsx)(t.A,{toc:n,minHeadingLevel:l,maxHeadingLevel:a,className:"table-of-contents",linkClassName:null})})}},67756:(e,n,l)=>{l.d(n,{B:()=>s});l(96540);const t=JSON.parse('{"mlflow.anthropic":"api_reference/python_api/mlflow.anthropic.html","mlflow.artifacts":"api_reference/python_api/mlflow.artifacts.html","mlflow.ag2":"api_reference/python_api/mlflow.ag2.html","mlflow.autogen":"api_reference/python_api/mlflow.autogen.html","mlflow.bedrock":"api_reference/python_api/mlflow.bedrock.html","mlflow.catboost":"api_reference/python_api/mlflow.catboost.html","mlflow.client":"api_reference/python_api/mlflow.client.html","mlflow.config":"api_reference/python_api/mlflow.config.html","mlflow.crewai":"api_reference/python_api/mlflow.crewai.html","mlflow.data":"api_reference/python_api/mlflow.data.html","mlflow.deployments":"api_reference/python_api/mlflow.deployments.html","mlflow.diviner":"api_reference/python_api/mlflow.diviner.html","mlflow.dspy":"api_reference/python_api/mlflow.dspy.html","mlflow.entities":"api_reference/python_api/mlflow.entities.html","mlflow.environment_variables":"api_reference/python_api/mlflow.environment_variables.html","mlflow.gateway":"api_reference/python_api/mlflow.gateway.html","mlflow.gemini":"api_reference/python_api/mlflow.gemini.html","mlflow.groq":"api_reference/python_api/mlflow.groq.html","mlflow.h2o":"api_reference/python_api/mlflow.h2o.html","mlflow.johnsnowlabs":"api_reference/python_api/mlflow.johnsnowlabs.html","mlflow.keras":"api_reference/python_api/mlflow.keras.html","mlflow.langchain":"api_reference/python_api/mlflow.langchain.html","mlflow.lightgbm":"api_reference/python_api/mlflow.lightgbm.html","mlflow.litellm":"api_reference/python_api/mlflow.litellm.html","mlflow.llama_index":"api_reference/python_api/mlflow.llama_index.html","mlflow.metrics":"api_reference/python_api/mlflow.metrics.html","mlflow.mistral":"api_reference/python_api/mlflow.mistral.html","mlflow.models":"api_reference/python_api/mlflow.models.html","mlflow.onnx":"api_reference/python_api/mlflow.onnx.html","mlflow.openai":"api_reference/python_api/mlflow.openai.html","mlflow.paddle":"api_reference/python_api/mlflow.paddle.html","mlflow.pmdarima":"api_reference/python_api/mlflow.pmdarima.html","mlflow.projects":"api_reference/python_api/mlflow.projects.html","mlflow.promptflow":"api_reference/python_api/mlflow.promptflow.html","mlflow.prophet":"api_reference/python_api/mlflow.prophet.html","mlflow.pyfunc":"api_reference/python_api/mlflow.pyfunc.html","mlflow.pyspark.ml":"api_reference/python_api/mlflow.pyspark.ml.html","mlflow.pytorch":"api_reference/python_api/mlflow.pytorch.html","mlflow":"api_reference/python_api/mlflow.html","mlflow.sagemaker":"api_reference/python_api/mlflow.sagemaker.html","mlflow.sentence_transformers":"api_reference/python_api/mlflow.sentence_transformers.html","mlflow.server":"api_reference/python_api/mlflow.server.html","mlflow.shap":"api_reference/python_api/mlflow.shap.html","mlflow.sklearn":"api_reference/python_api/mlflow.sklearn.html","mlflow.spacy":"api_reference/python_api/mlflow.spacy.html","mlflow.spark":"api_reference/python_api/mlflow.spark.html","mlflow.statsmodels":"api_reference/python_api/mlflow.statsmodels.html","mlflow.system_metrics":"api_reference/python_api/mlflow.system_metrics.html","mlflow.tensorflow":"api_reference/python_api/mlflow.tensorflow.html","mlflow.tracing":"api_reference/python_api/mlflow.tracing.html","mlflow.transformers":"api_reference/python_api/mlflow.transformers.html","mlflow.types":"api_reference/python_api/mlflow.types.html","mlflow.utils":"api_reference/python_api/mlflow.utils.html","mlflow.xgboost":"api_reference/python_api/mlflow.xgboost.html","mlflow.server.auth":"api_reference/auth/python-api.html"}');var o=l(29030),i=l(56289),a=l(74848);const r=e=>{const n=e.split(".");for(let l=n.length;l>0;l--){const e=n.slice(0,l).join(".");if(t[e])return e}return null};function s(e){let{fn:n,children:l}=e;const s=r(n);if(!s)return(0,a.jsx)(a.Fragment,{children:l});const d=(0,o.Ay)(`/${t[s]}#${n}`);return(0,a.jsx)(i.A,{to:d,target:"_blank",children:l??(0,a.jsxs)("code",{children:[n,"()"]})})}},71021:(e,n,l)=>{l.d(n,{A:()=>u});var t=l(96540),o=l(53115);function i(e){const n=e.map((e=>({...e,parentIndex:-1,children:[]}))),l=Array(7).fill(-1);n.forEach(((e,n)=>{const t=l.slice(2,e.level);e.parentIndex=Math.max(...t),l[e.level]=n}));const t=[];return n.forEach((e=>{const{parentIndex:l,...o}=e;l>=0?n[l].children.push(o):t.push(o)})),t}function a(e){let{toc:n,minHeadingLevel:l,maxHeadingLevel:t}=e;return n.flatMap((e=>{const n=a({toc:e.children,minHeadingLevel:l,maxHeadingLevel:t});return function(e){return e.level>=l&&e.level<=t}(e)?[{...e,children:n}]:n}))}function r(e){const n=e.getBoundingClientRect();return n.top===n.bottom?r(e.parentNode):n}function s(e,n){let{anchorTopOffset:l}=n;const t=e.find((e=>r(e).top>=l));if(t){return function(e){return e.top>0&&e.bottom<window.innerHeight/2}(r(t))?t:e[e.indexOf(t)-1]??null}return e[e.length-1]??null}function d(){const e=(0,t.useRef)(0),{navbar:{hideOnScroll:n}}=(0,o.p)();return(0,t.useEffect)((()=>{e.current=n?0:document.querySelector(".navbar").clientHeight}),[n]),e}function m(e){const n=(0,t.useRef)(void 0),l=d();(0,t.useEffect)((()=>{if(!e)return()=>{};const{linkClassName:t,linkActiveClassName:o,minHeadingLevel:i,maxHeadingLevel:a}=e;function r(){const e=function(e){return Array.from(document.getElementsByClassName(e))}(t),r=function(e){let{minHeadingLevel:n,maxHeadingLevel:l}=e;const t=[];for(let o=n;o<=l;o+=1)t.push(`h${o}.anchor`);return Array.from(document.querySelectorAll(t.join()))}({minHeadingLevel:i,maxHeadingLevel:a}),d=s(r,{anchorTopOffset:l.current}),m=e.find((e=>d&&d.id===function(e){return decodeURIComponent(e.href.substring(e.href.indexOf("#")+1))}(e)));e.forEach((e=>{!function(e,l){l?(n.current&&n.current!==e&&n.current.classList.remove(o),e.classList.add(o),n.current=e):e.classList.remove(o)}(e,e===m)}))}return document.addEventListener("scroll",r),document.addEventListener("resize",r),r(),()=>{document.removeEventListener("scroll",r),document.removeEventListener("resize",r)}}),[e,l])}var c=l(56289),h=l(74848);function f(e){let{toc:n,className:l,linkClassName:t,isChild:o}=e;return n.length?(0,h.jsx)("ul",{className:o?void 0:l,children:n.map((e=>(0,h.jsxs)("li",{children:[(0,h.jsx)(c.A,{to:`#${e.id}`,className:t??void 0,dangerouslySetInnerHTML:{__html:e.value}}),(0,h.jsx)(f,{isChild:!0,toc:e.children,className:l,linkClassName:t})]},e.id)))}):null}const p=t.memo(f);function u(e){let{toc:n,className:l="table-of-contents table-of-contents__left-border",linkClassName:r="table-of-contents__link",linkActiveClassName:s,minHeadingLevel:d,maxHeadingLevel:c,...f}=e;const u=(0,o.p)(),_=d??u.tableOfContents.minHeadingLevel,g=c??u.tableOfContents.maxHeadingLevel,w=function(e){let{toc:n,minHeadingLevel:l,maxHeadingLevel:o}=e;return(0,t.useMemo)((()=>a({toc:i(n),minHeadingLevel:l,maxHeadingLevel:o})),[n,l,o])}({toc:n,minHeadingLevel:_,maxHeadingLevel:g});return m((0,t.useMemo)((()=>{if(r&&s)return{linkClassName:r,linkActiveClassName:s,minHeadingLevel:_,maxHeadingLevel:g}}),[r,s,_,g])),(0,h.jsx)(p,{toc:w,className:l,linkClassName:r,...f})}}}]);